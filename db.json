{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"themes/pure/source/favicon.png","path":"favicon.png","modified":1,"renderable":1},{"_id":"source/images/favatar/chuangzaoshi-logo.png","path":"images/favatar/chuangzaoshi-logo.png","modified":1,"renderable":0},{"_id":"source/images/favatar/idesign-logo.png","path":"images/favatar/idesign-logo.png","modified":1,"renderable":0},{"_id":"themes/pure/source/fonts/iconfont.eot","path":"fonts/iconfont.eot","modified":1,"renderable":1},{"_id":"themes/pure/source/fonts/README.md","path":"fonts/README.md","modified":1,"renderable":1},{"_id":"themes/pure/source/fonts/iconfont.woff","path":"fonts/iconfont.woff","modified":1,"renderable":1},{"_id":"themes/pure/source/fonts/iconfont.ttf","path":"fonts/iconfont.ttf","modified":1,"renderable":1},{"_id":"themes/pure/source/images/avatar.jpg","path":"images/avatar.jpg","modified":1,"renderable":1},{"_id":"themes/pure/source/images/thumb-default.png","path":"images/thumb-default.png","modified":1,"renderable":1},{"_id":"themes/pure/source/js/application.min.js","path":"js/application.min.js","modified":1,"renderable":1},{"_id":"themes/pure/source/js/application.js","path":"js/application.js","modified":1,"renderable":1},{"_id":"themes/pure/source/images/xingqiu-qrcode.jpg","path":"images/xingqiu-qrcode.jpg","modified":1,"renderable":1},{"_id":"themes/pure/source/js/insight.js","path":"js/insight.js","modified":1,"renderable":1},{"_id":"themes/pure/source/js/plugin.js","path":"js/plugin.js","modified":1,"renderable":1},{"_id":"themes/pure/source/js/plugin.min.js","path":"js/plugin.min.js","modified":1,"renderable":1},{"_id":"themes/pure/source/css/style.min.css","path":"css/style.min.css","modified":1,"renderable":1},{"_id":"themes/pure/source/images/donate/wechatpayimg.png","path":"images/donate/wechatpayimg.png","modified":1,"renderable":1},{"_id":"themes/pure/source/images/donate/alipayimg.png","path":"images/donate/alipayimg.png","modified":1,"renderable":1},{"_id":"themes/pure/source/images/favatar/chuangzaoshi-logo.png","path":"images/favatar/chuangzaoshi-logo.png","modified":1,"renderable":1},{"_id":"themes/pure/source/images/favatar/idesign-logo.png","path":"images/favatar/idesign-logo.png","modified":1,"renderable":1},{"_id":"themes/pure/source/images/favatar/SzsFox-logo.png","path":"images/favatar/SzsFox-logo.png","modified":1,"renderable":1},{"_id":"themes/pure/source/js/jquery.min.js","path":"js/jquery.min.js","modified":1,"renderable":1},{"_id":"themes/pure/source/js/plugin.js.map","path":"js/plugin.js.map","modified":1,"renderable":1},{"_id":"themes/pure/source/css/style.css","path":"css/style.css","modified":1,"renderable":1},{"_id":"themes/pure/source/fonts/iconfont.svg","path":"fonts/iconfont.svg","modified":1,"renderable":1}],"Cache":[{"_id":"source/.DS_Store","hash":"a90b484f6a4703fada197e165fb455e3b77cd48c","modified":1548204635824},{"_id":"themes/pure/.DS_Store","hash":"3c6699d09b3a0e0885fb0c3089dd400906c215b5","modified":1548204725562},{"_id":"themes/pure/.gitignore","hash":"dbb41a2f30c98cb9de173d82736c46266c901cda","modified":1548160040924},{"_id":"themes/pure/LICENSE","hash":"c480fce396b23997ee23cc535518ffaaf7f458f8","modified":1548160040924},{"_id":"themes/pure/README.cn.md","hash":"a634af4addbb57088935e060e8ec6035ea7bab76","modified":1548160040924},{"_id":"themes/pure/README.md","hash":"5861cec81712af9197a210fd5212d007aad8b0de","modified":1548160040925},{"_id":"themes/pure/_config.yml","hash":"b5a816f5cb6e042a60cbf73bbb72636e7953f107","modified":1548204212922},{"_id":"themes/pure/_config.yml.example","hash":"4714f87fdb6d4a6ea5ece84f4fe37f922337f14d","modified":1548160040925},{"_id":"themes/pure/package.json","hash":"a61723eead5cae2c4d9f0f05cf40d2de7c286fee","modified":1548160040952},{"_id":"source/_data/gallery.yml","hash":"e2b3fad87be3d1cfde1effa655d39678ee90907e","modified":1548158962942},{"_id":"source/_data/links.yml","hash":"07e9ac51c86f58f157a0c64ef47f6f3e21a4c39e","modified":1548158962943},{"_id":"source/about/index.md","hash":"a2a6e7b0ae83f5ea0916824340d94a187ab73227","modified":1548158962961},{"_id":"source/_posts/FE-Blog.md","hash":"86f02302ed3fcc14caae184e4b6e945b478f67f2","modified":1548158962943},{"_id":"source/_posts/about-IDE-format-code.md","hash":"95c6d6158eda7b63a24d3f1e81c7500cc15c4268","modified":1548158962944},{"_id":"source/_posts/hello-world.md","hash":"8a02477044e2b77f1b262da2c48c01429e4a32e4","modified":1548158962948},{"_id":"source/_posts/hexo-theme-pure.md","hash":"b18e12cc4e200ccdb211899d7b8c6abc3e28d2d2","modified":1548158962948},{"_id":"source/_posts/layui-router.md","hash":"d3fc94acf3d99a685c35b791fc486764125121f9","modified":1548158962949},{"_id":"source/_posts/layui-template-error-collection.md","hash":"8ab77bab33bf05a3fb9692a593de0d06d142d840","modified":1548158962955},{"_id":"source/_posts/use-Hacker-theme.md","hash":"b660b7c0f6d423725e1db892d70a822edafc6090","modified":1548158962958},{"_id":"source/_posts/vue-cli-load-css-confusion.md","hash":"3d6dfef93cf85f59130e967c22b5aa0469f25edb","modified":1548158962959},{"_id":"source/_posts/vue-template-error-collection.md","hash":"7bfd95f9e220d3739eddc782138be0ab09d51f6b","modified":1548158962960},{"_id":"source/_posts/vuex-persistedstate.md","hash":"9b4f8b18a32f42e6acca0c5126272a16ce39ed99","modified":1548158962961},{"_id":"source/images/.DS_Store","hash":"acc6f32f7f7e43498c2fb85c2242604225835861","modified":1548204635821},{"_id":"source/repository/index.md","hash":"1bbe557272836ac7724643ec39cd1132e720f204","modified":1548158962963},{"_id":"source/links/index.md","hash":"653f69bd538c110be7376e95559798a05e674137","modified":1548158962963},{"_id":"source/tags/index.md","hash":"00aaef44d472c14c9422d63680c35ec6e529893c","modified":1548158962963},{"_id":"themes/pure/.git/HEAD","hash":"acbaef275e46a7f14c1ef456fff2c8bbe8c84724","modified":1548160040912},{"_id":"themes/pure/.git/config","hash":"7ec6421043b0f1135362e6c04e1f42251478e733","modified":1548160040916},{"_id":"themes/pure/.git/description","hash":"9635f1b7e12c045212819dd934d809ef07efa2f4","modified":1548159932811},{"_id":"themes/pure/.git/index","hash":"339b12754371b0c8a0e24351ba29ac1e0d5e670d","modified":1548201716778},{"_id":"themes/pure/.git/packed-refs","hash":"3ddfd0f92192a4a6b3591f5b058d8797c32dedf2","modified":1548160040910},{"_id":"themes/pure/languages/default.yml","hash":"167ea0db98f4db156ea68c4644f64c0287ae2b6f","modified":1548160040927},{"_id":"themes/pure/languages/en.yml","hash":"167ea0db98f4db156ea68c4644f64c0287ae2b6f","modified":1548160040928},{"_id":"themes/pure/languages/zh-CN.yml","hash":"057ebc043f09449af9768791c89c86dfc2938365","modified":1548160040928},{"_id":"themes/pure/languages/zh-TW.yml","hash":"6d27c3114be539b8783ffce944f68b2e26a8c3b9","modified":1548160040928},{"_id":"themes/pure/layout/about.ejs","hash":"4f5c769e183249b12eb9d3141432bc0039519730","modified":1548160040947},{"_id":"themes/pure/layout/archive.ejs","hash":"ded5d953b35666e30f4c6e48e2d2c62af8d95ebf","modified":1548160040947},{"_id":"themes/pure/layout/books.ejs","hash":"6c64719cd7071b5319b01339aa524fdaab391385","modified":1548160040948},{"_id":"themes/pure/layout/categories.ejs","hash":"2084974ba68f799216a8b216752f7fc87c693cc0","modified":1548160040948},{"_id":"themes/pure/layout/category.ejs","hash":"68632e8ac45088a929ca82b6cca8ba60323d6aac","modified":1548160040949},{"_id":"themes/pure/layout/index.ejs","hash":"07825d8d8b21eb7b694f5585567b9df5c5a91a60","modified":1548160040949},{"_id":"themes/pure/layout/layout.ejs","hash":"a29ab2e881954a252bfc0dc1a7eb5aa52768dd2a","modified":1548160040949},{"_id":"themes/pure/layout/links.ejs","hash":"77c5d1561e2c606c5b3bb39610133d84324074df","modified":1548160040950},{"_id":"themes/pure/layout/page.ejs","hash":"5c27475c176627e6e2e6a16172eb6980e56bcaff","modified":1548160040950},{"_id":"themes/pure/layout/post.ejs","hash":"5c27475c176627e6e2e6a16172eb6980e56bcaff","modified":1548160040950},{"_id":"themes/pure/layout/repository.ejs","hash":"fe4b3e051a8b0debe9ee22c2cc2cc935d92ee23f","modified":1548160040951},{"_id":"themes/pure/layout/tag.ejs","hash":"6e4e6660cf58beb3e5e2e52b59c51393e4796c36","modified":1548160040951},{"_id":"themes/pure/layout/tags.ejs","hash":"4c0b797a45cf238be367932927edc88599aa3255","modified":1548160040951},{"_id":"themes/pure/scripts/thumbnail.js","hash":"e667a611f9baac270281b765832020d50bf8fb7f","modified":1548160040973},{"_id":"themes/pure/source/.DS_Store","hash":"4b0f5ad9d82346b742fcd617206b6586da207222","modified":1548204725561},{"_id":"themes/pure/source/favicon.png","hash":"89875d3b018552e396fc5f0bd8ff5d9f5d4a5d71","modified":1548160040978},{"_id":"themes/pure/screenshot/pure-theme-black.png","hash":"10b40f398af7eb7e8ba2bf2f2a959d8779fc1fe1","modified":1548160040953},{"_id":"themes/pure/screenshot/pure-theme-blue.png","hash":"6146890a68d5ea9d343c48d50151ddd5a2a1872c","modified":1548160040954},{"_id":"themes/pure/screenshot/pure-theme-purple.png","hash":"9855d2eb0acd23370209354f232471df8f4f72e2","modified":1548160040956},{"_id":"themes/pure/screenshot/pure.png","hash":"8f4cfd8d7edfa4fbffdf375291302d9807f5cc1c","modified":1548160040958},{"_id":"themes/pure/screenshot/pure-theme-green.png","hash":"12ec0c6033cb2762839fdf75434bbb4fbf946022","modified":1548160040955},{"_id":"source/_posts/layui-router/20181031144115.png","hash":"2cf9b075b81bacedd97419b1668ffab4ee95dc1b","modified":1548158962950},{"_id":"source/_posts/layui-router/20181031154408.png","hash":"25dc80a2f1b0e45fc60b4f59748a7011d12f488b","modified":1548158962953},{"_id":"source/_posts/layui-router/20181031161907.png","hash":"f8093b16e0826956204e611ab3077b7e59fe105a","modified":1548158962954},{"_id":"source/_posts/layui-router/layui router页面渲染过程.vsd","hash":"5850605d15a14254bb17be2e7f53ef848afbfeb4","modified":1548158962954},{"_id":"source/_posts/layui-template-error-collection/20181015155613.png","hash":"321bcb0d2ac9892e9db4456a5ff40cb13452a17e","modified":1548158962956},{"_id":"source/_posts/layui-template-error-collection/20181015164139.png","hash":"96a90391f0f27aa946004f2927ea2fdd524f67fd","modified":1548158962956},{"_id":"source/_posts/vue-cli-load-css-confusion/20181026174132.png","hash":"4e302f9345228905207644a052013283188651b3","modified":1548158962959},{"_id":"source/_posts/vue-template-error-collection/20181016105228.png","hash":"f0ca793225394fa5af1a2a5a61c82db7063d0bd7","modified":1548158962961},{"_id":"source/images/favatar/chuangzaoshi-logo.png","hash":"5ee72f0fd118dd687dbff5df81f24f3badfb0c9f","modified":1548158962962},{"_id":"source/images/favatar/idesign-logo.png","hash":"2a9843a57720b0d39586f4aa35efb9af355ef0be","modified":1548158962962},{"_id":"themes/pure/.git/hooks/applypatch-msg.sample","hash":"4de88eb95a5e93fd27e78b5fb3b5231a8d8917dd","modified":1548159932812},{"_id":"themes/pure/.git/hooks/commit-msg.sample","hash":"ee1ed5aad98a435f2020b6de35c173b75d9affac","modified":1548159932811},{"_id":"themes/pure/.git/hooks/post-update.sample","hash":"b614c2f63da7dca9f1db2e7ade61ef30448fc96c","modified":1548159932813},{"_id":"themes/pure/.git/hooks/pre-applypatch.sample","hash":"f208287c1a92525de9f5462e905a9d31de1e2d75","modified":1548159932813},{"_id":"themes/pure/.git/hooks/pre-receive.sample","hash":"705a17d259e7896f0082fe2e9f2c0c3b127be5ac","modified":1548159932812},{"_id":"themes/pure/.git/hooks/pre-commit.sample","hash":"36aed8976dcc08b5076844f0ec645b18bc37758f","modified":1548159932812},{"_id":"themes/pure/.git/hooks/pre-push.sample","hash":"5c8518bfd1d1d3d2c1a7194994c0a16d8a313a41","modified":1548159932814},{"_id":"themes/pure/.git/hooks/pre-rebase.sample","hash":"5885a56ab4fca8075a05a562d005e922cde9853b","modified":1548159932812},{"_id":"themes/pure/.git/hooks/update.sample","hash":"e729cd61b27c128951d139de8e7c63d1a3758dde","modified":1548159932814},{"_id":"themes/pure/.git/hooks/prepare-commit-msg.sample","hash":"2b6275eda365cad50d167fe3a387c9bc9fedd54f","modified":1548159932813},{"_id":"themes/pure/.git/info/exclude","hash":"bb5a85730dcf100facee799c05cc4f6affec0745","modified":1548159932811},{"_id":"themes/pure/.git/logs/HEAD","hash":"c9f3b0b984c66bfee4e880bcb6a8c09078c2fa0b","modified":1548160040915},{"_id":"themes/pure/_source/404/index.md","hash":"8d493f624fdd29c8d0266767e56f343d549e16d8","modified":1548160040925},{"_id":"themes/pure/_source/_data/gallery.yml","hash":"e2b3fad87be3d1cfde1effa655d39678ee90907e","modified":1548160040926},{"_id":"themes/pure/_source/_data/links.yml","hash":"aa443a4508550820c77c2a4f6abff1d38ad85054","modified":1548160040926},{"_id":"themes/pure/_source/about/index.md","hash":"9c95cabb533409d06daefc4295021ad199761efc","modified":1548160040926},{"_id":"themes/pure/_source/books/index.md","hash":"cf4163959c23244059cbbbc1c0fe379cc3b2cb73","modified":1548160040926},{"_id":"themes/pure/_source/categories/index.md","hash":"5d2a4f103d27bebbe3eef1604649d0f5c6d86ac6","modified":1548160040926},{"_id":"themes/pure/_source/links/index.md","hash":"febcf87eb0ab3c5080578275d25f3970bba39625","modified":1548160040927},{"_id":"themes/pure/_source/repository/index.md","hash":"ed0e082c30f233dd5c140d188f1e4bce44bdbf79","modified":1548160040927},{"_id":"themes/pure/_source/tags/index.md","hash":"42e9c904ea63b0a7dd4033e2e8f153225bc5cda5","modified":1548160040927},{"_id":"themes/pure/layout/_common/footer.ejs","hash":"cdc48ec70d9202b947f2a9334234d038d7014a7d","modified":1548160040929},{"_id":"themes/pure/layout/_common/head.ejs","hash":"a48ef0fa22712b29ec044b9e5134461f3a21c10d","modified":1548160040929},{"_id":"themes/pure/layout/_common/header.ejs","hash":"3d739d1e2b2991927c08ec222db123830a44a519","modified":1548160040929},{"_id":"themes/pure/layout/_common/script.ejs","hash":"0031114d2a58f8601c2869f78ceedc75a10be90d","modified":1548160040930},{"_id":"themes/pure/layout/_common/social.ejs","hash":"a35a2610e9da762df96587b76b51470507a88cad","modified":1548160040930},{"_id":"themes/pure/layout/_partial/archive-book.ejs","hash":"977f97f3636947006ad738e502858c46d4cd5ec7","modified":1548160040931},{"_id":"themes/pure/layout/_partial/archive-category.ejs","hash":"9c364fd6b5172890784141802f5f466241d233fd","modified":1548160040931},{"_id":"themes/pure/layout/_partial/archive-link.ejs","hash":"fe4d9bf526d8176683cea89b8561ced571374db0","modified":1548160040931},{"_id":"themes/pure/layout/_partial/archive-list.ejs","hash":"c66c86d6a6a90e00494c380603426fc0f4006311","modified":1548160040931},{"_id":"themes/pure/layout/_partial/archive-post.ejs","hash":"13039fec017332029122ef99901755fcecbfc8ea","modified":1548160040932},{"_id":"themes/pure/layout/_partial/archive-tag.ejs","hash":"5de90244c3cedad531cccc03c40e5f9a3aef3c61","modified":1548160040932},{"_id":"themes/pure/layout/_partial/archive.ejs","hash":"4d6793f50d41fbd47dc50aa36b24d496006bba6c","modified":1548160040933},{"_id":"themes/pure/layout/_partial/archive-repository.ejs","hash":"e39dc762d9fe238cede462532e40eaa3d8651122","modified":1548160040932},{"_id":"themes/pure/layout/_partial/article-about.ejs","hash":"7b80319daeb63401d1745b81cd9a6d1d21a4fb60","modified":1548160040933},{"_id":"themes/pure/layout/_partial/article.ejs","hash":"0f9b71de0087d1f777d92c5a0f3873971aec5a5b","modified":1548160040933},{"_id":"themes/pure/layout/_partial/item-post.ejs","hash":"9f755b0da1ea928dece32c2050d8a04b3a9fb13b","modified":1548160040933},{"_id":"themes/pure/layout/_partial/pagination.ejs","hash":"41a319642da5af07d6cfb8525796aa610b721879","modified":1548160040934},{"_id":"themes/pure/layout/_partial/sidebar-about.ejs","hash":"e10ea0176ba87e64888234bafedc01c92544352c","modified":1548160040937},{"_id":"themes/pure/layout/_partial/sidebar-toc.ejs","hash":"152538ceceb0fdef65c46470ebf0189f7b891c5b","modified":1548160040938},{"_id":"themes/pure/layout/_partial/sidebar.ejs","hash":"2aa8a9f90838e7c105e75e6d3d03cbf860bb1239","modified":1548160040938},{"_id":"themes/pure/layout/_script/analytics.ejs","hash":"e756a81f8c20a187fb863b9689f2f1fa15e2f4e1","modified":1548160040941},{"_id":"themes/pure/layout/_script/comment.ejs","hash":"6f951510bab9dc15474b6664e0329defccf29a30","modified":1548160040941},{"_id":"themes/pure/layout/_script/douban.ejs","hash":"143087db0573772b0bdaf7f93312553158942ec7","modified":1548160040941},{"_id":"themes/pure/layout/_script/fancybox.ejs","hash":"8f1be01e70a15b2c31ae57d8c6bce54622ebf8a7","modified":1548160040942},{"_id":"themes/pure/layout/_script/mathjax.ejs","hash":"f618393ab971b2faa80d541f2e6a553d9ace9816","modified":1548160040942},{"_id":"themes/pure/layout/_script/pv.ejs","hash":"fb9b5f16029f2ccef4b83cf4facfdcdd748b65b4","modified":1548160040943},{"_id":"themes/pure/layout/_script/repository.ejs","hash":"234e6a9d8b129dc19e916cb9f927a27b04758180","modified":1548160040943},{"_id":"themes/pure/layout/_script/search.ejs","hash":"7be33dc260ce788aa1a2cd3bd0386d95057533cb","modified":1548160040943},{"_id":"themes/pure/layout/_search/baidu.ejs","hash":"67aab280a3ea34429f086cc5c3de7de17727c567","modified":1548160040944},{"_id":"themes/pure/layout/_search/index-mobile.ejs","hash":"c726e234c0166da69fdfbd3dd613a5eaf4c80258","modified":1548160040944},{"_id":"themes/pure/layout/_search/index.ejs","hash":"f8d5a9c3f777250f5fb6512bba585307f784d5cd","modified":1548160040944},{"_id":"themes/pure/layout/_search/insight.ejs","hash":"4af3e92ef98bedba9680d45699cb04dde4640536","modified":1548160040944},{"_id":"themes/pure/layout/_search/swiftype.ejs","hash":"4baeca36e410181300ae7d47ba1fb4755bcfcff0","modified":1548160040945},{"_id":"themes/pure/layout/_widget/archive.ejs","hash":"af8ad7f62877764b75d5272d9d899fd6c8e3845c","modified":1548160040945},{"_id":"themes/pure/layout/_widget/board.ejs","hash":"acd27451be52703e670ce0b313f2da6fa24071e4","modified":1548160040946},{"_id":"themes/pure/layout/_widget/category.ejs","hash":"331b7642a0f58b9088b937436ab39076a4c5dd7e","modified":1548160040946},{"_id":"themes/pure/layout/_widget/recent_posts.ejs","hash":"8942d60311797a591ba2d157c5cdd23e85ceb694","modified":1548160040946},{"_id":"themes/pure/layout/_widget/tag.ejs","hash":"487628925da5fcac91463cdad3d9e55d071bd5ed","modified":1548160040947},{"_id":"themes/pure/layout/_widget/tagcloud.ejs","hash":"3291108e5411c48b2c5b3e17adace6ffa90d1c29","modified":1548160040947},{"_id":"themes/pure/source/fonts/iconfont.eot","hash":"6819d9bb643bdeafc17bfecb0746ae641b018fdf","modified":1548160040979},{"_id":"themes/pure/source/fonts/README.md","hash":"c5772b99ad81291fb137b330813f866bdceea0a3","modified":1548160040978},{"_id":"themes/pure/source/fonts/iconfont.woff","hash":"78d29194287b8885d25212048c4f787705212a6e","modified":1548160040982},{"_id":"themes/pure/source/fonts/iconfont.ttf","hash":"9b8837f9f79cf6ab794736301d0665345183a20c","modified":1548160040981},{"_id":"themes/pure/source/images/avatar.jpg","hash":"851cf96b420a6856b566d55f87948828f5ec8934","modified":1548204611869},{"_id":"themes/pure/source/images/thumb-default.png","hash":"e8403b97ed9251f9f5207765b0ce796c5000b4ba","modified":1548160040984},{"_id":"themes/pure/source/js/application.min.js","hash":"34d765e982c7d6360c37f82202d99f63ac40e408","modified":1548160040986},{"_id":"themes/pure/source/js/application.js","hash":"46d1fb207ce5f0acb83803f927985dfcea86f9ef","modified":1548160040986},{"_id":"themes/pure/source/images/xingqiu-qrcode.jpg","hash":"ef2c2848dc79db6df7c752510651ed8ba57f2daf","modified":1548160040985},{"_id":"themes/pure/source/js/insight.js","hash":"298e8ca42517984bd26f34caa4c45560b0e909ad","modified":1548160040986},{"_id":"source/_posts/layui-router/20181031143900.png","hash":"cb5ddeb31ece2c63845b97f8f71fa31246b38e62","modified":1548158962949},{"_id":"source/_posts/about-IDE-format-code/20181019154456.png","hash":"15690056378e7de88b8fe696931e08ec3cf50c01","modified":1548158962947},{"_id":"source/_posts/layui-router/20181031144844.png","hash":"97d75dfc0d4fd4049cfc5385f889d2a80db57302","modified":1548158962951},{"_id":"source/_posts/layui-router/20181031144909.png","hash":"9d755b9c7b338e65e55dc9f04d23c7718b1b02e3","modified":1548158962953},{"_id":"source/_posts/layui-template-error-collection/20181015164428.png","hash":"b524414c651c42e5383633a975627bca383f8ea8","modified":1548158962958},{"_id":"themes/pure/source/js/plugin.js","hash":"a8524d42b8621bfaa06602a163c6a1f82702b91d","modified":1548160040990},{"_id":"themes/pure/source/js/plugin.min.js","hash":"07fe34638f9832702c5f81d8583c5e4e8b3d9659","modified":1548160040992},{"_id":"themes/pure/.git/refs/heads/master","hash":"acadee1d4d226b371a3bf4ad2be7e333316f601e","modified":1548160040914},{"_id":"themes/pure/layout/_partial/post/category.ejs","hash":"fcee6b4aef8b6c4627831ff8dbb2d73478511426","modified":1548160040934},{"_id":"themes/pure/layout/_partial/post/comment.ejs","hash":"3c0da69fcea6ccfd97b82d50e740107a88eec5c4","modified":1548160040934},{"_id":"themes/pure/layout/_partial/post/date.ejs","hash":"7d4979652998abf92a64bfae8157b70d6e514057","modified":1548160040935},{"_id":"themes/pure/layout/_partial/post/copyright.ejs","hash":"a9d3d05428e5844a07706c7fcfeb842e44a36a64","modified":1548160040935},{"_id":"themes/pure/layout/_partial/post/donate.ejs","hash":"a251dc34d660601a2e8b7d98b3bfe2b9023dbbce","modified":1548160040935},{"_id":"themes/pure/layout/_partial/post/gallery.ejs","hash":"3d9d81a3c693ff2378ef06ddb6810254e509de5b","modified":1548160040935},{"_id":"themes/pure/layout/_partial/post/nav.ejs","hash":"95eabc0fe4033ec61b240a16eeaf7dc62a9e3da1","modified":1548160040936},{"_id":"themes/pure/layout/_partial/post/pv.ejs","hash":"ec3ccf322432afc2761f860c5a3000ac34d46e4c","modified":1548160040936},{"_id":"themes/pure/layout/_partial/post/tag.ejs","hash":"39f53ead07f75c181a7ba93e586dd1b8171620f1","modified":1548160040936},{"_id":"themes/pure/layout/_partial/post/thumbnail.ejs","hash":"080d5c5f3e95accf51893a7092695fe32d34a087","modified":1548160040937},{"_id":"themes/pure/layout/_partial/post/title.ejs","hash":"2f275739b6f1193c123646a5a31f37d48644c667","modified":1548160040937},{"_id":"themes/pure/layout/_partial/post/wordcount.ejs","hash":"bd06c4c8449ed96aabf655fe1ae3be1f0707b81e","modified":1548160040937},{"_id":"themes/pure/layout/_script/_analytics/baidu-analytics.ejs","hash":"f314be7860c1d5930f1600d010e3120ba5c85325","modified":1548160040938},{"_id":"themes/pure/layout/_script/_analytics/google-analytics.ejs","hash":"54f1dc9375cbdb65464e0ac1b58847aa5e8bc6a5","modified":1548160040938},{"_id":"themes/pure/layout/_script/_analytics/tencent-analytics.ejs","hash":"77defb41a1613a758ff5a6a5128c6107fc584190","modified":1548160040939},{"_id":"themes/pure/layout/_script/_comment/disqus.ejs","hash":"a051e3eddc75586e69131c29ab8c89d69626e0fd","modified":1548160040939},{"_id":"themes/pure/layout/_script/_comment/gitalk.ejs","hash":"fb01f1631c3ae7fe6211dc03233506cb344229be","modified":1548160040939},{"_id":"themes/pure/layout/_script/_comment/livere.ejs","hash":"5ab997d5ee4475d2f89f882fab4a52648dbe0e30","modified":1548160040940},{"_id":"themes/pure/layout/_script/_comment/gitment.ejs","hash":"a64852076483395738a398deb4c10bdb0f3b7b71","modified":1548160040939},{"_id":"themes/pure/layout/_script/_comment/valine.ejs","hash":"acf81f9a59dc45f197d723f70484de5fcd166577","modified":1548160040940},{"_id":"themes/pure/layout/_script/_comment/youyan.ejs","hash":"095649a173573d03b5845c2e331ec7be976b152a","modified":1548160040940},{"_id":"themes/pure/layout/_script/_search/insight.ejs","hash":"3543c11d060feaf9381b5d87564b01ffef0e0a59","modified":1548160040941},{"_id":"themes/pure/layout/_script/_search/baidu.ejs","hash":"9b60ffa2e2725a993e9cecfb81ddedd9b9361011","modified":1548160040940},{"_id":"themes/pure/source/css/style.min.css","hash":"1d23abc76726ebe042f7df4749f00f8f73338444","modified":1548160040977},{"_id":"themes/pure/source/images/donate/wechatpayimg.png","hash":"c0844d9a633696cb00ae64fde06f0f924f63b596","modified":1548160040983},{"_id":"themes/pure/source/images/donate/alipayimg.png","hash":"9562f23f2eb57841c65dc769b6cc43a2cf0efa94","modified":1548160040983},{"_id":"themes/pure/source/images/favatar/chuangzaoshi-logo.png","hash":"7fa5734072050952159a02d330bbc008b5a99122","modified":1548160040984},{"_id":"themes/pure/source/images/favatar/idesign-logo.png","hash":"6b150a2dbb9912b7a7662255c27e4d4baaecee71","modified":1548160040984},{"_id":"themes/pure/source/images/favatar/SzsFox-logo.png","hash":"d71fcc73b7bc2a439d8c7ba461137856d190bd76","modified":1548160040983},{"_id":"themes/pure/source/js/jquery.min.js","hash":"5a9dcfbef655a2668e78baebeaa8dc6f41d8dabb","modified":1548160040988},{"_id":"themes/pure/source/js/plugin.js.map","hash":"1730c0cc660f863120aca0a439d7264e2e245fc5","modified":1548160040991},{"_id":"themes/pure/source/css/style.css","hash":"3b693ce41c2e35ece4773593e94b4c17aeaee02f","modified":1548160040975},{"_id":"themes/pure/source/fonts/iconfont.svg","hash":"25929e6e74f7027acd1f6467a67e95b153bcd8d5","modified":1548160040981},{"_id":"themes/pure/.git/logs/refs/heads/master","hash":"c9f3b0b984c66bfee4e880bcb6a8c09078c2fa0b","modified":1548160040915},{"_id":"themes/pure/.git/refs/remotes/origin/HEAD","hash":"d9427cda09aba1cdde5c69c2b13c905bddb0bc51","modified":1548160040912},{"_id":"themes/pure/.git/objects/pack/pack-32effd909a5cd283dcaa722683d850e9d0ae278a.idx","hash":"bb5cdfe64672650a33341558aa4c60c1d63fdf77","modified":1548160040892},{"_id":"source/_posts/about-IDE-format-code/20181019154332.png","hash":"0ae0b04f67219771f1b6ee7b91f6afec75d90c8a","modified":1548158962946},{"_id":"themes/pure/.git/logs/refs/remotes/origin/HEAD","hash":"c9f3b0b984c66bfee4e880bcb6a8c09078c2fa0b","modified":1548160040911},{"_id":"themes/pure/screenshot/pure.psd","hash":"a31cea40b45bdc31f051fca2f1e2f4ecbaee1a94","modified":1548160040972},{"_id":"themes/pure/.git/objects/pack/pack-32effd909a5cd283dcaa722683d850e9d0ae278a.pack","hash":"e4cd67b5d09733154352be3395ef358e0c0f2f3d","modified":1548160040888},{"_id":"public/atom.xml","hash":"bfb351b4a4e7d3444e6f3e915075af422f8838c4","modified":1548204903518},{"_id":"public/sitemap.xml","hash":"104c4de661db341446fe9e0eed7704c341317f56","modified":1548204903522},{"_id":"public/baidusitemap.xml","hash":"2eafb7c4da9d07e2ecd0d038af7dcc9befcc8a44","modified":1548204903930},{"_id":"public/content.json","hash":"dd867c6d1d67bd5451cebbd781a773dd2303ef08","modified":1548204903930},{"_id":"public/about/index.html","hash":"f4e75a7e7cc401e17106ffd783a86667b3774de2","modified":1548204903949},{"_id":"public/repository/index.html","hash":"62dd47bf898719e62abe60177349420a07f234b6","modified":1548204903949},{"_id":"public/links/index.html","hash":"c967293e85927cbc569c88e5452e069af419c1a3","modified":1548204903950},{"_id":"public/tags/index.html","hash":"145e5420a1aa3d33f22ed5defa5a70186fcbeb8e","modified":1548204903950},{"_id":"public/2019/01/22/hello-world/index.html","hash":"b775a8d1fa844cca3a245262b8cbfcc97666afc9","modified":1548204903950},{"_id":"public/2018/11/13/vuex-persistedstate/index.html","hash":"d8d416872e74baaa511479e808e9a80155e7e505","modified":1548204903950},{"_id":"public/2018/10/31/layui-router/index.html","hash":"61d062a3f2e487fc3ed871ed65174ba6609b5936","modified":1548204903950},{"_id":"public/2018/10/26/vue-cli-load-css-confusion/index.html","hash":"593e65f0a3e964d6898d0e049e197febd40619b5","modified":1548204903950},{"_id":"public/2018/10/19/about-IDE-format-code/index.html","hash":"0b18bfa18252397c467b78333f5e93e59abf444b","modified":1548204903950},{"_id":"public/2018/10/18/FE-Blog/index.html","hash":"d7e549e3f6406470cb4644cd7543761073b0e2b5","modified":1548204903950},{"_id":"public/2018/10/17/hexo-theme-pure/index.html","hash":"db387c3f23059e38b7a51168b25a81304a7ab820","modified":1548204903950},{"_id":"public/2018/10/17/vue-template-error-collection/index.html","hash":"1ebd847c1f7576e31a4f758f1f2e0e2e4dc36da2","modified":1548204903950},{"_id":"public/2018/10/17/layui-template-error-collection/index.html","hash":"8091404957333b2e1c703c4452907a09c7039b52","modified":1548204903950},{"_id":"public/2018/10/17/use-Hacker-theme/index.html","hash":"da4e8e12473618c9614913d15e1952a622c09d3f","modified":1548204903950},{"_id":"public/archives/index.html","hash":"ca91bffce5f9403f2d0d8eb4b45cdf1392d08482","modified":1548204903951},{"_id":"public/archives/2018/index.html","hash":"6fbf3364b00044b62398baad105625e6c05a13ab","modified":1548204903951},{"_id":"public/archives/2018/10/index.html","hash":"ede5882ea3e6965c6b105a103967f892a7579e15","modified":1548204903951},{"_id":"public/archives/2018/11/index.html","hash":"99085e9456bf8b3a4ce6ea2c6f740d9f41bbc6ee","modified":1548204903951},{"_id":"public/archives/2019/index.html","hash":"ffb56262b2f8b401e9c17a63cad87388b63736c9","modified":1548204903951},{"_id":"public/archives/2019/01/index.html","hash":"e43cc3925eac317ad3b91c3ed1cc658fdb639077","modified":1548204903951},{"_id":"public/index.html","hash":"c716914cf83bb38346171921f7c39a992556189c","modified":1548204903951},{"_id":"public/tags/blog/index.html","hash":"a63f699acaa1c286e09470caad4c4656e1c1d29b","modified":1548204903951},{"_id":"public/tags/hexo/index.html","hash":"31e9bde36977e3320f955e445507ac525321310d","modified":1548204903951},{"_id":"public/tags/hexo-theme/index.html","hash":"0bdd16da76aeb9f7c973f51d8222f9f8db9f1e8d","modified":1548204903951},{"_id":"public/tags/sftp/index.html","hash":"5157a80ee2ffc26e75238fc5754cac67af6d5dbe","modified":1548204903951},{"_id":"public/tags/一键发布/index.html","hash":"68b6bebb9e85e77d219e51f0eaef58312911daba","modified":1548204903951},{"_id":"public/tags/node/index.html","hash":"dfe615596d8ccb2d2faf93f51a0d3f13ddebefe4","modified":1548204903951},{"_id":"public/tags/vs-code/index.html","hash":"b9619b9c2924b63645e2ae583a90a69b895fe7c1","modified":1548204903951},{"_id":"public/tags/formatter/index.html","hash":"335a10b69428fed62827fe21026035b1dc9086d6","modified":1548204903951},{"_id":"public/tags/setting/index.html","hash":"953f47e85b352db1baa1420a594c22cdc83cf9b2","modified":1548204903951},{"_id":"public/tags/layui/index.html","hash":"fbd4865b5533a2e91a3b7eb05cab34a993c5c546","modified":1548204903951},{"_id":"public/tags/router/index.html","hash":"789fa11a79812ba2272d44545d06ba65d4f94f1a","modified":1548204903952},{"_id":"public/tags/javascript/index.html","hash":"56958821c903533de1e698698c987e2107dcce8b","modified":1548204903952},{"_id":"public/tags/js/index.html","hash":"5bc24cc4e09d3876b4e54cb1c37b8b1702333341","modified":1548204903952},{"_id":"public/tags/error/index.html","hash":"b59a1bfa9d1d5d960a997fc1280b44d6a3707939","modified":1548204903952},{"_id":"public/tags/hexo-theme-Hacker/index.html","hash":"f441f1f757d7a6e3c14d6034973e50062e2d2fc9","modified":1548204903952},{"_id":"public/tags/vue/index.html","hash":"b22013b56c0418d4544dcaab28bc34d28c218587","modified":1548204903952},{"_id":"public/tags/npm/index.html","hash":"241fc8fdae4fdb88eaea42a5b4e08be83cabacfb","modified":1548204903952},{"_id":"public/tags/webpack/index.html","hash":"16e83821d4e692b8ba7a33a35ec200fccb82e366","modified":1548204903952},{"_id":"public/tags/vuex/index.html","hash":"e6a1bd099875f793f040685070b8c57edefc319a","modified":1548204903952},{"_id":"public/tags/localstorage/index.html","hash":"fffeeba3e47c1f722d50b656ea9d44e279353ae5","modified":1548204903952},{"_id":"public/tags/plugins/index.html","hash":"a625a62438ccaf8628f0d6c5c1bb1eae707b4e83","modified":1548204903952},{"_id":"public/tags/hexo-theme-pure/index.html","hash":"80a05ac56026a5d7fec1b802b76353ec3c931455","modified":1548204903952},{"_id":"public/favicon.png","hash":"89875d3b018552e396fc5f0bd8ff5d9f5d4a5d71","modified":1548204903957},{"_id":"public/images/favatar/chuangzaoshi-logo.png","hash":"7fa5734072050952159a02d330bbc008b5a99122","modified":1548204903957},{"_id":"public/images/favatar/idesign-logo.png","hash":"6b150a2dbb9912b7a7662255c27e4d4baaecee71","modified":1548204903957},{"_id":"public/fonts/iconfont.eot","hash":"6819d9bb643bdeafc17bfecb0746ae641b018fdf","modified":1548204903957},{"_id":"public/fonts/iconfont.woff","hash":"78d29194287b8885d25212048c4f787705212a6e","modified":1548204903957},{"_id":"public/fonts/iconfont.ttf","hash":"9b8837f9f79cf6ab794736301d0665345183a20c","modified":1548204903957},{"_id":"public/images/avatar.jpg","hash":"851cf96b420a6856b566d55f87948828f5ec8934","modified":1548204903958},{"_id":"public/images/thumb-default.png","hash":"e8403b97ed9251f9f5207765b0ce796c5000b4ba","modified":1548204903958},{"_id":"public/images/xingqiu-qrcode.jpg","hash":"ef2c2848dc79db6df7c752510651ed8ba57f2daf","modified":1548204903958},{"_id":"public/images/donate/wechatpayimg.png","hash":"c0844d9a633696cb00ae64fde06f0f924f63b596","modified":1548204903958},{"_id":"public/images/favatar/SzsFox-logo.png","hash":"d71fcc73b7bc2a439d8c7ba461137856d190bd76","modified":1548204903958},{"_id":"public/images/donate/alipayimg.png","hash":"9562f23f2eb57841c65dc769b6cc43a2cf0efa94","modified":1548204903958},{"_id":"public/2018/10/26/vue-cli-load-css-confusion/20181026174132.png","hash":"4e302f9345228905207644a052013283188651b3","modified":1548204903958},{"_id":"public/2018/10/17/vue-template-error-collection/20181016105228.png","hash":"f0ca793225394fa5af1a2a5a61c82db7063d0bd7","modified":1548204903958},{"_id":"public/2018/10/17/layui-template-error-collection/20181015155613.png","hash":"321bcb0d2ac9892e9db4456a5ff40cb13452a17e","modified":1548204903958},{"_id":"public/2018/10/17/layui-template-error-collection/20181015164139.png","hash":"96a90391f0f27aa946004f2927ea2fdd524f67fd","modified":1548204903958},{"_id":"public/2018/10/31/layui-router/20181031143900.png","hash":"cb5ddeb31ece2c63845b97f8f71fa31246b38e62","modified":1548204903958},{"_id":"public/2018/10/31/layui-router/20181031144115.png","hash":"2cf9b075b81bacedd97419b1668ffab4ee95dc1b","modified":1548204903958},{"_id":"public/2018/10/31/layui-router/20181031154408.png","hash":"25dc80a2f1b0e45fc60b4f59748a7011d12f488b","modified":1548204903958},{"_id":"public/2018/10/31/layui-router/20181031161907.png","hash":"f8093b16e0826956204e611ab3077b7e59fe105a","modified":1548204903958},{"_id":"public/2018/10/31/layui-router/layui router页面渲染过程.vsd","hash":"5850605d15a14254bb17be2e7f53ef848afbfeb4","modified":1548204903958},{"_id":"public/2018/10/19/about-IDE-format-code/20181019154456.png","hash":"15690056378e7de88b8fe696931e08ec3cf50c01","modified":1548204903963},{"_id":"public/2018/10/17/layui-template-error-collection/20181015164428.png","hash":"b524414c651c42e5383633a975627bca383f8ea8","modified":1548204903964},{"_id":"public/2018/10/31/layui-router/20181031144844.png","hash":"97d75dfc0d4fd4049cfc5385f889d2a80db57302","modified":1548204903964},{"_id":"public/2018/10/31/layui-router/20181031144909.png","hash":"9d755b9c7b338e65e55dc9f04d23c7718b1b02e3","modified":1548204903964},{"_id":"public/js/application.min.js","hash":"34d765e982c7d6360c37f82202d99f63ac40e408","modified":1548204903968},{"_id":"public/js/application.js","hash":"46d1fb207ce5f0acb83803f927985dfcea86f9ef","modified":1548204903968},{"_id":"public/fonts/README.html","hash":"43b6265aeccff3f9d495e2b44d07b249a2197bd7","modified":1548204903968},{"_id":"public/js/plugin.js.map","hash":"1730c0cc660f863120aca0a439d7264e2e245fc5","modified":1548204903968},{"_id":"public/fonts/iconfont.svg","hash":"25929e6e74f7027acd1f6467a67e95b153bcd8d5","modified":1548204903968},{"_id":"public/js/insight.js","hash":"298e8ca42517984bd26f34caa4c45560b0e909ad","modified":1548204903982},{"_id":"public/2018/10/19/about-IDE-format-code/20181019154332.png","hash":"0ae0b04f67219771f1b6ee7b91f6afec75d90c8a","modified":1548204903996},{"_id":"public/js/plugin.min.js","hash":"07fe34638f9832702c5f81d8583c5e4e8b3d9659","modified":1548204904004},{"_id":"public/js/jquery.min.js","hash":"5a9dcfbef655a2668e78baebeaa8dc6f41d8dabb","modified":1548204904007},{"_id":"public/js/plugin.js","hash":"a8524d42b8621bfaa06602a163c6a1f82702b91d","modified":1548204904013},{"_id":"public/css/style.min.css","hash":"1d23abc76726ebe042f7df4749f00f8f73338444","modified":1548204904015},{"_id":"public/css/style.css","hash":"3b693ce41c2e35ece4773593e94b4c17aeaee02f","modified":1548204904020}],"Category":[],"Data":[{"_id":"links","data":{"创造狮":{"link":"http://chuangzaoshi.com/","avatar":"../images/favatar/chuangzaoshi-logo.png","desc":"为创意工作者而设计"},"腾讯设计导航":{"link":"http://idesign.qq.com/","avatar":"../images/favatar/idesign-logo.png","desc":"网罗全网高逼格的设计站点"}}},{"_id":"gallery","data":{"Name":{"full_link":"http://example.com/full-image.png","thumb_link":"http://example.com/thumb-image.png","descr":"这是一个描述"}}}],"Page":[{"layout":"about","title":"关于","date":"2018-10-17T07:05:14.000Z","tags":null,"_content":"\n前端开发，Coding,关注前端动态，对新技术的技术有追求。\n\n```json\n{\n  name: 'meric'\n  age: 25,\n  gender: '男',\n  profession: 'Web Developer & Designer',\n  experience: '5年',\n  github: 'https://github.com/unclemeric',\n  email: 'laisf@hwagain.com',\n  description: 'Hwagain Front-End Developer',\n\n  skills: [\n    ['Html', 'Javascript', 'jQuery', 'CSS', 'ES6', 'Node'],\n    ['Webpack', 'Gulp'],\n    ['Sass'],\n    ['Git', 'SVN'],\n    ['Vue','React'],\n    ['Bootstrap']\n  ],\n\n  devTools: [\n    ['Sublime Text', 'Visual Studio Code', 'Webstorm'],\n    ['Chrome DevTools']\n  ]\n}\n```\n","source":"about/index.md","raw":"---\nlayout: about\ntitle: 关于\ndate: 2018-10-17 15:05:14\ntags:\n---\n\n前端开发，Coding,关注前端动态，对新技术的技术有追求。\n\n```json\n{\n  name: 'meric'\n  age: 25,\n  gender: '男',\n  profession: 'Web Developer & Designer',\n  experience: '5年',\n  github: 'https://github.com/unclemeric',\n  email: 'laisf@hwagain.com',\n  description: 'Hwagain Front-End Developer',\n\n  skills: [\n    ['Html', 'Javascript', 'jQuery', 'CSS', 'ES6', 'Node'],\n    ['Webpack', 'Gulp'],\n    ['Sass'],\n    ['Git', 'SVN'],\n    ['Vue','React'],\n    ['Bootstrap']\n  ],\n\n  devTools: [\n    ['Sublime Text', 'Visual Studio Code', 'Webstorm'],\n    ['Chrome DevTools']\n  ]\n}\n```\n","updated":"2019-01-22T12:09:22.961Z","path":"about/index.html","comments":1,"_id":"cjr8h846o0000egrqdf04gtap","content":"<p>前端开发，Coding,关注前端动态，对新技术的技术有追求。</p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  name: 'meric'</span><br><span class=\"line\">  age: 25,</span><br><span class=\"line\">  gender: '男',</span><br><span class=\"line\">  profession: 'Web Developer &amp; Designer',</span><br><span class=\"line\">  experience: '5年',</span><br><span class=\"line\">  github: 'https://github.com/unclemeric',</span><br><span class=\"line\">  email: 'laisf@hwagain.com',</span><br><span class=\"line\">  description: 'Hwagain Front-End Developer',</span><br><span class=\"line\"></span><br><span class=\"line\">  skills: [</span><br><span class=\"line\">    ['Html', 'Javascript', 'jQuery', 'CSS', 'ES6', 'Node'],</span><br><span class=\"line\">    ['Webpack', 'Gulp'],</span><br><span class=\"line\">    ['Sass'],</span><br><span class=\"line\">    ['Git', 'SVN'],</span><br><span class=\"line\">    ['Vue','React'],</span><br><span class=\"line\">    ['Bootstrap']</span><br><span class=\"line\">  ],</span><br><span class=\"line\"></span><br><span class=\"line\">  devTools: [</span><br><span class=\"line\">    ['Sublime Text', 'Visual Studio Code', 'Webstorm'],</span><br><span class=\"line\">    ['Chrome DevTools']</span><br><span class=\"line\">  ]</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n","site":{"data":{"links":{"创造狮":{"link":"http://chuangzaoshi.com/","avatar":"../images/favatar/chuangzaoshi-logo.png","desc":"为创意工作者而设计"},"腾讯设计导航":{"link":"http://idesign.qq.com/","avatar":"../images/favatar/idesign-logo.png","desc":"网罗全网高逼格的设计站点"}},"gallery":{"Name":{"full_link":"http://example.com/full-image.png","thumb_link":"http://example.com/thumb-image.png","descr":"这是一个描述"}}}},"excerpt":"","more":"<p>前端开发，Coding,关注前端动态，对新技术的技术有追求。</p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  name: 'meric'</span><br><span class=\"line\">  age: 25,</span><br><span class=\"line\">  gender: '男',</span><br><span class=\"line\">  profession: 'Web Developer &amp; Designer',</span><br><span class=\"line\">  experience: '5年',</span><br><span class=\"line\">  github: 'https://github.com/unclemeric',</span><br><span class=\"line\">  email: 'laisf@hwagain.com',</span><br><span class=\"line\">  description: 'Hwagain Front-End Developer',</span><br><span class=\"line\"></span><br><span class=\"line\">  skills: [</span><br><span class=\"line\">    ['Html', 'Javascript', 'jQuery', 'CSS', 'ES6', 'Node'],</span><br><span class=\"line\">    ['Webpack', 'Gulp'],</span><br><span class=\"line\">    ['Sass'],</span><br><span class=\"line\">    ['Git', 'SVN'],</span><br><span class=\"line\">    ['Vue','React'],</span><br><span class=\"line\">    ['Bootstrap']</span><br><span class=\"line\">  ],</span><br><span class=\"line\"></span><br><span class=\"line\">  devTools: [</span><br><span class=\"line\">    ['Sublime Text', 'Visual Studio Code', 'Webstorm'],</span><br><span class=\"line\">    ['Chrome DevTools']</span><br><span class=\"line\">  ]</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n"},{"layout":"repository","title":"项目","date":"2018-10-19T08:52:44.000Z","tags":null,"_content":"","source":"repository/index.md","raw":"---\nlayout: repository\ntitle: 项目\ndate: 2018-10-19 16:52:44\ntags:\n---\n","updated":"2019-01-22T12:09:22.963Z","path":"repository/index.html","comments":1,"_id":"cjr8h846v0002egrquf7ra2jz","content":"","site":{"data":{"links":{"创造狮":{"link":"http://chuangzaoshi.com/","avatar":"../images/favatar/chuangzaoshi-logo.png","desc":"为创意工作者而设计"},"腾讯设计导航":{"link":"http://idesign.qq.com/","avatar":"../images/favatar/idesign-logo.png","desc":"网罗全网高逼格的设计站点"}},"gallery":{"Name":{"full_link":"http://example.com/full-image.png","thumb_link":"http://example.com/thumb-image.png","descr":"这是一个描述"}}}},"excerpt":"","more":""},{"layout":"links","title":"友链","date":"2018-10-19T08:57:03.000Z","tags":null,"_content":"","source":"links/index.md","raw":"---\nlayout: links\ntitle: 友链\ndate: 2018-10-19 16:57:03\ntags:\n---\n","updated":"2019-01-22T12:09:22.963Z","path":"links/index.html","comments":1,"_id":"cjr8h84710005egrqubfxawxl","content":"","site":{"data":{"links":{"创造狮":{"link":"http://chuangzaoshi.com/","avatar":"../images/favatar/chuangzaoshi-logo.png","desc":"为创意工作者而设计"},"腾讯设计导航":{"link":"http://idesign.qq.com/","avatar":"../images/favatar/idesign-logo.png","desc":"网罗全网高逼格的设计站点"}},"gallery":{"Name":{"full_link":"http://example.com/full-image.png","thumb_link":"http://example.com/thumb-image.png","descr":"这是一个描述"}}}},"excerpt":"","more":""},{"layout":"tags","title":"标签","date":"2018-10-19T07:55:50.000Z","tags":null,"_content":"","source":"tags/index.md","raw":"---\nlayout: tags\ntitle: 标签\ndate: 2018-10-19 15:55:50\ntags:\n---\n","updated":"2019-01-22T12:09:22.963Z","path":"tags/index.html","comments":1,"_id":"cjr8h848g001pegrq9ipz124k","content":"","site":{"data":{"links":{"创造狮":{"link":"http://chuangzaoshi.com/","avatar":"../images/favatar/chuangzaoshi-logo.png","desc":"为创意工作者而设计"},"腾讯设计导航":{"link":"http://idesign.qq.com/","avatar":"../images/favatar/idesign-logo.png","desc":"网罗全网高逼格的设计站点"}},"gallery":{"Name":{"full_link":"http://example.com/full-image.png","thumb_link":"http://example.com/thumb-image.png","descr":"这是一个描述"}}}},"excerpt":"","more":""}],"Post":[{"title":"FE-Blog项目说明","date":"2018-10-18T00:39:32.000Z","_content":"\n## 说明\n\n本项目是一个交流与分享经验的博客，记录我们项目开发或者学习中积累的一些经验和技术，分享他人。\n使用`Hexo`框架快速搭建。`Hexo` 是一个快速、简洁且高效的博客框架。`Hexo` 使用 `Markdown`（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。\n\n相关知识技术请查看文档：\nHexo 官网文档：[Hexo 文档说明](https://hexo.io/zh-cn/docs/)\nMarkdown 文档：[Markdown 文档说明](http://www.markdown.cn/)\n\n## hexo-theme-pure\n\n`Hexo`默认带的主题是`landscape`，但本项目使用[`hexo-theme-pure`](https://github.com/cofess/hexo-theme-pure.git)(可点击)主题(此推荐使用[Hexo 主题使用](https://hexo.io/zh-cn/docs/themes))，个人喜好。此项目由于`gitlab`上传失败自定义主题(反正我上传失败了...未知原因)，单单是自定义主题上传失败，系统默认主题成功上传了，所以提交的时候改为了`landscape`。有兴趣的同学可以`clone`下来之后，参照[`Hexo-Theme-Pure`](../../17/hexo-theme-pure)(可点击)这篇文章说明修改主题和相关主题功能配置。\n\n## 项目安装\n\n首先安装 hexo 构建工具(构建项目和页面使用)：\n\n```bash\nnpm install hexo-cli -g //安装全局命令\n```\n\n## 安装依赖\n\n```bash\nnpm install //安装全局命令\n```\n\n## 项目启动\n\n```bash\nhexo server\nor\nhexo s //hexo server的简写\nor\nnpm start (package.json里自定义的启动脚本)\n```\n\n项目启动完毕！\n\n## ftp 一键发布\n\n自己写的一段代码使用`node`一键发布项目(懒人福利)，自带备份功能。通过配置一系列参数之后，执行自定义脚本`npm run deploy`。\n相关文件包括：\n`app.js`\n`sftp.config.js`\n\n### 一键发布相关参数配置说明\n\nsftp.config.js\n\n```\nconst path = require(\"path\");\n\n//服务器项目根路径\nconst remote_path = \"/data/webapps/hwagain-web/blog\";\n\n//存放编译之后资源文件夹 此项目需同_config.yml的public_dir值一样 Vue项目为./dist\nconst assets_path = path.resolve(__dirname, \"./public\");\nmodule.exports = {\n  remote_path,\n  assets_path,\n  options: {\n    host: \"192.168.68.207\",//ftp服务器ip\n    port: \"22\",//端口\n    user: \"portal\",//ftp用户名\n    password: \"portal\",//ftp密码\n    // privateKey: fs.readFileSync(\"C:/Users/laisf/.ssh/id_rsa\"), // 私钥\n    passphrase: \"\" // 私钥密码(为空)\n  },\n  project_remote_path: remote_path, //项目服务器路径\n  public_asset_path: assets_path //指定需要上传的文件夹目录\n};\n```\n\n### 一键发布\n\n```bash\nnpm run deploy (package.json里自定义的启动脚本)\nor\n/**\n* hexo clean: 清除缓存及上次编译生成的静态文件\n* hexo generate: 编译将博客生成静态文件\n* node app.js: 一键发布到ftp服务器\n*/\nhexo clean && hexo generate && node app.js\n```\n","source":"_posts/FE-Blog.md","raw":"---\ntitle: FE-Blog项目说明\ndate: 2018-10-18 08:39:32\ntags: [blog, hexo, hexo-theme, sftp, 一键发布, node]\n---\n\n## 说明\n\n本项目是一个交流与分享经验的博客，记录我们项目开发或者学习中积累的一些经验和技术，分享他人。\n使用`Hexo`框架快速搭建。`Hexo` 是一个快速、简洁且高效的博客框架。`Hexo` 使用 `Markdown`（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。\n\n相关知识技术请查看文档：\nHexo 官网文档：[Hexo 文档说明](https://hexo.io/zh-cn/docs/)\nMarkdown 文档：[Markdown 文档说明](http://www.markdown.cn/)\n\n## hexo-theme-pure\n\n`Hexo`默认带的主题是`landscape`，但本项目使用[`hexo-theme-pure`](https://github.com/cofess/hexo-theme-pure.git)(可点击)主题(此推荐使用[Hexo 主题使用](https://hexo.io/zh-cn/docs/themes))，个人喜好。此项目由于`gitlab`上传失败自定义主题(反正我上传失败了...未知原因)，单单是自定义主题上传失败，系统默认主题成功上传了，所以提交的时候改为了`landscape`。有兴趣的同学可以`clone`下来之后，参照[`Hexo-Theme-Pure`](../../17/hexo-theme-pure)(可点击)这篇文章说明修改主题和相关主题功能配置。\n\n## 项目安装\n\n首先安装 hexo 构建工具(构建项目和页面使用)：\n\n```bash\nnpm install hexo-cli -g //安装全局命令\n```\n\n## 安装依赖\n\n```bash\nnpm install //安装全局命令\n```\n\n## 项目启动\n\n```bash\nhexo server\nor\nhexo s //hexo server的简写\nor\nnpm start (package.json里自定义的启动脚本)\n```\n\n项目启动完毕！\n\n## ftp 一键发布\n\n自己写的一段代码使用`node`一键发布项目(懒人福利)，自带备份功能。通过配置一系列参数之后，执行自定义脚本`npm run deploy`。\n相关文件包括：\n`app.js`\n`sftp.config.js`\n\n### 一键发布相关参数配置说明\n\nsftp.config.js\n\n```\nconst path = require(\"path\");\n\n//服务器项目根路径\nconst remote_path = \"/data/webapps/hwagain-web/blog\";\n\n//存放编译之后资源文件夹 此项目需同_config.yml的public_dir值一样 Vue项目为./dist\nconst assets_path = path.resolve(__dirname, \"./public\");\nmodule.exports = {\n  remote_path,\n  assets_path,\n  options: {\n    host: \"192.168.68.207\",//ftp服务器ip\n    port: \"22\",//端口\n    user: \"portal\",//ftp用户名\n    password: \"portal\",//ftp密码\n    // privateKey: fs.readFileSync(\"C:/Users/laisf/.ssh/id_rsa\"), // 私钥\n    passphrase: \"\" // 私钥密码(为空)\n  },\n  project_remote_path: remote_path, //项目服务器路径\n  public_asset_path: assets_path //指定需要上传的文件夹目录\n};\n```\n\n### 一键发布\n\n```bash\nnpm run deploy (package.json里自定义的启动脚本)\nor\n/**\n* hexo clean: 清除缓存及上次编译生成的静态文件\n* hexo generate: 编译将博客生成静态文件\n* node app.js: 一键发布到ftp服务器\n*/\nhexo clean && hexo generate && node app.js\n```\n","slug":"FE-Blog","published":1,"updated":"2019-01-22T12:09:22.943Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjr8h846q0001egrqwxgahjq9","content":"<h2 id=\"说明\"><a href=\"#说明\" class=\"headerlink\" title=\"说明\"></a>说明</h2><p>本项目是一个交流与分享经验的博客，记录我们项目开发或者学习中积累的一些经验和技术，分享他人。<br>使用<code>Hexo</code>框架快速搭建。<code>Hexo</code> 是一个快速、简洁且高效的博客框架。<code>Hexo</code> 使用 <code>Markdown</code>（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。</p>\n<p>相关知识技术请查看文档：<br>Hexo 官网文档：<a href=\"https://hexo.io/zh-cn/docs/\" target=\"_blank\" rel=\"noopener\">Hexo 文档说明</a><br>Markdown 文档：<a href=\"http://www.markdown.cn/\" target=\"_blank\" rel=\"noopener\">Markdown 文档说明</a></p>\n<h2 id=\"hexo-theme-pure\"><a href=\"#hexo-theme-pure\" class=\"headerlink\" title=\"hexo-theme-pure\"></a>hexo-theme-pure</h2><p><code>Hexo</code>默认带的主题是<code>landscape</code>，但本项目使用<a href=\"https://github.com/cofess/hexo-theme-pure.git\" target=\"_blank\" rel=\"noopener\"><code>hexo-theme-pure</code></a>(可点击)主题(此推荐使用<a href=\"https://hexo.io/zh-cn/docs/themes\" target=\"_blank\" rel=\"noopener\">Hexo 主题使用</a>)，个人喜好。此项目由于<code>gitlab</code>上传失败自定义主题(反正我上传失败了…未知原因)，单单是自定义主题上传失败，系统默认主题成功上传了，所以提交的时候改为了<code>landscape</code>。有兴趣的同学可以<code>clone</code>下来之后，参照<a href=\"../../17/hexo-theme-pure\"><code>Hexo-Theme-Pure</code></a>(可点击)这篇文章说明修改主题和相关主题功能配置。</p>\n<h2 id=\"项目安装\"><a href=\"#项目安装\" class=\"headerlink\" title=\"项目安装\"></a>项目安装</h2><p>首先安装 hexo 构建工具(构建项目和页面使用)：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo-cli -g //安装全局命令</span><br></pre></td></tr></table></figure>\n<h2 id=\"安装依赖\"><a href=\"#安装依赖\" class=\"headerlink\" title=\"安装依赖\"></a>安装依赖</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install //安装全局命令</span><br></pre></td></tr></table></figure>\n<h2 id=\"项目启动\"><a href=\"#项目启动\" class=\"headerlink\" title=\"项目启动\"></a>项目启动</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo server</span><br><span class=\"line\">or</span><br><span class=\"line\">hexo s //hexo server的简写</span><br><span class=\"line\">or</span><br><span class=\"line\">npm start (package.json里自定义的启动脚本)</span><br></pre></td></tr></table></figure>\n<p>项目启动完毕！</p>\n<h2 id=\"ftp-一键发布\"><a href=\"#ftp-一键发布\" class=\"headerlink\" title=\"ftp 一键发布\"></a>ftp 一键发布</h2><p>自己写的一段代码使用<code>node</code>一键发布项目(懒人福利)，自带备份功能。通过配置一系列参数之后，执行自定义脚本<code>npm run deploy</code>。<br>相关文件包括：<br><code>app.js</code><br><code>sftp.config.js</code></p>\n<h3 id=\"一键发布相关参数配置说明\"><a href=\"#一键发布相关参数配置说明\" class=\"headerlink\" title=\"一键发布相关参数配置说明\"></a>一键发布相关参数配置说明</h3><p>sftp.config.js</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">const path = require(&quot;path&quot;);</span><br><span class=\"line\"></span><br><span class=\"line\">//服务器项目根路径</span><br><span class=\"line\">const remote_path = &quot;/data/webapps/hwagain-web/blog&quot;;</span><br><span class=\"line\"></span><br><span class=\"line\">//存放编译之后资源文件夹 此项目需同_config.yml的public_dir值一样 Vue项目为./dist</span><br><span class=\"line\">const assets_path = path.resolve(__dirname, &quot;./public&quot;);</span><br><span class=\"line\">module.exports = &#123;</span><br><span class=\"line\">  remote_path,</span><br><span class=\"line\">  assets_path,</span><br><span class=\"line\">  options: &#123;</span><br><span class=\"line\">    host: &quot;192.168.68.207&quot;,//ftp服务器ip</span><br><span class=\"line\">    port: &quot;22&quot;,//端口</span><br><span class=\"line\">    user: &quot;portal&quot;,//ftp用户名</span><br><span class=\"line\">    password: &quot;portal&quot;,//ftp密码</span><br><span class=\"line\">    // privateKey: fs.readFileSync(&quot;C:/Users/laisf/.ssh/id_rsa&quot;), // 私钥</span><br><span class=\"line\">    passphrase: &quot;&quot; // 私钥密码(为空)</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  project_remote_path: remote_path, //项目服务器路径</span><br><span class=\"line\">  public_asset_path: assets_path //指定需要上传的文件夹目录</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<h3 id=\"一键发布\"><a href=\"#一键发布\" class=\"headerlink\" title=\"一键发布\"></a>一键发布</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm run deploy (package.json里自定义的启动脚本)</span><br><span class=\"line\">or</span><br><span class=\"line\">/**</span><br><span class=\"line\">* hexo clean: 清除缓存及上次编译生成的静态文件</span><br><span class=\"line\">* hexo generate: 编译将博客生成静态文件</span><br><span class=\"line\">* node app.js: 一键发布到ftp服务器</span><br><span class=\"line\">*/</span><br><span class=\"line\">hexo clean &amp;&amp; hexo generate &amp;&amp; node app.js</span><br></pre></td></tr></table></figure>\n","site":{"data":{"links":{"创造狮":{"link":"http://chuangzaoshi.com/","avatar":"../images/favatar/chuangzaoshi-logo.png","desc":"为创意工作者而设计"},"腾讯设计导航":{"link":"http://idesign.qq.com/","avatar":"../images/favatar/idesign-logo.png","desc":"网罗全网高逼格的设计站点"}},"gallery":{"Name":{"full_link":"http://example.com/full-image.png","thumb_link":"http://example.com/thumb-image.png","descr":"这是一个描述"}}}},"excerpt":"","more":"<h2 id=\"说明\"><a href=\"#说明\" class=\"headerlink\" title=\"说明\"></a>说明</h2><p>本项目是一个交流与分享经验的博客，记录我们项目开发或者学习中积累的一些经验和技术，分享他人。<br>使用<code>Hexo</code>框架快速搭建。<code>Hexo</code> 是一个快速、简洁且高效的博客框架。<code>Hexo</code> 使用 <code>Markdown</code>（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。</p>\n<p>相关知识技术请查看文档：<br>Hexo 官网文档：<a href=\"https://hexo.io/zh-cn/docs/\" target=\"_blank\" rel=\"noopener\">Hexo 文档说明</a><br>Markdown 文档：<a href=\"http://www.markdown.cn/\" target=\"_blank\" rel=\"noopener\">Markdown 文档说明</a></p>\n<h2 id=\"hexo-theme-pure\"><a href=\"#hexo-theme-pure\" class=\"headerlink\" title=\"hexo-theme-pure\"></a>hexo-theme-pure</h2><p><code>Hexo</code>默认带的主题是<code>landscape</code>，但本项目使用<a href=\"https://github.com/cofess/hexo-theme-pure.git\" target=\"_blank\" rel=\"noopener\"><code>hexo-theme-pure</code></a>(可点击)主题(此推荐使用<a href=\"https://hexo.io/zh-cn/docs/themes\" target=\"_blank\" rel=\"noopener\">Hexo 主题使用</a>)，个人喜好。此项目由于<code>gitlab</code>上传失败自定义主题(反正我上传失败了…未知原因)，单单是自定义主题上传失败，系统默认主题成功上传了，所以提交的时候改为了<code>landscape</code>。有兴趣的同学可以<code>clone</code>下来之后，参照<a href=\"../../17/hexo-theme-pure\"><code>Hexo-Theme-Pure</code></a>(可点击)这篇文章说明修改主题和相关主题功能配置。</p>\n<h2 id=\"项目安装\"><a href=\"#项目安装\" class=\"headerlink\" title=\"项目安装\"></a>项目安装</h2><p>首先安装 hexo 构建工具(构建项目和页面使用)：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo-cli -g //安装全局命令</span><br></pre></td></tr></table></figure>\n<h2 id=\"安装依赖\"><a href=\"#安装依赖\" class=\"headerlink\" title=\"安装依赖\"></a>安装依赖</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install //安装全局命令</span><br></pre></td></tr></table></figure>\n<h2 id=\"项目启动\"><a href=\"#项目启动\" class=\"headerlink\" title=\"项目启动\"></a>项目启动</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo server</span><br><span class=\"line\">or</span><br><span class=\"line\">hexo s //hexo server的简写</span><br><span class=\"line\">or</span><br><span class=\"line\">npm start (package.json里自定义的启动脚本)</span><br></pre></td></tr></table></figure>\n<p>项目启动完毕！</p>\n<h2 id=\"ftp-一键发布\"><a href=\"#ftp-一键发布\" class=\"headerlink\" title=\"ftp 一键发布\"></a>ftp 一键发布</h2><p>自己写的一段代码使用<code>node</code>一键发布项目(懒人福利)，自带备份功能。通过配置一系列参数之后，执行自定义脚本<code>npm run deploy</code>。<br>相关文件包括：<br><code>app.js</code><br><code>sftp.config.js</code></p>\n<h3 id=\"一键发布相关参数配置说明\"><a href=\"#一键发布相关参数配置说明\" class=\"headerlink\" title=\"一键发布相关参数配置说明\"></a>一键发布相关参数配置说明</h3><p>sftp.config.js</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">const path = require(&quot;path&quot;);</span><br><span class=\"line\"></span><br><span class=\"line\">//服务器项目根路径</span><br><span class=\"line\">const remote_path = &quot;/data/webapps/hwagain-web/blog&quot;;</span><br><span class=\"line\"></span><br><span class=\"line\">//存放编译之后资源文件夹 此项目需同_config.yml的public_dir值一样 Vue项目为./dist</span><br><span class=\"line\">const assets_path = path.resolve(__dirname, &quot;./public&quot;);</span><br><span class=\"line\">module.exports = &#123;</span><br><span class=\"line\">  remote_path,</span><br><span class=\"line\">  assets_path,</span><br><span class=\"line\">  options: &#123;</span><br><span class=\"line\">    host: &quot;192.168.68.207&quot;,//ftp服务器ip</span><br><span class=\"line\">    port: &quot;22&quot;,//端口</span><br><span class=\"line\">    user: &quot;portal&quot;,//ftp用户名</span><br><span class=\"line\">    password: &quot;portal&quot;,//ftp密码</span><br><span class=\"line\">    // privateKey: fs.readFileSync(&quot;C:/Users/laisf/.ssh/id_rsa&quot;), // 私钥</span><br><span class=\"line\">    passphrase: &quot;&quot; // 私钥密码(为空)</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  project_remote_path: remote_path, //项目服务器路径</span><br><span class=\"line\">  public_asset_path: assets_path //指定需要上传的文件夹目录</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<h3 id=\"一键发布\"><a href=\"#一键发布\" class=\"headerlink\" title=\"一键发布\"></a>一键发布</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm run deploy (package.json里自定义的启动脚本)</span><br><span class=\"line\">or</span><br><span class=\"line\">/**</span><br><span class=\"line\">* hexo clean: 清除缓存及上次编译生成的静态文件</span><br><span class=\"line\">* hexo generate: 编译将博客生成静态文件</span><br><span class=\"line\">* node app.js: 一键发布到ftp服务器</span><br><span class=\"line\">*/</span><br><span class=\"line\">hexo clean &amp;&amp; hexo generate &amp;&amp; node app.js</span><br></pre></td></tr></table></figure>\n"},{"title":"VS Code 代码格式化配置","date":"2018-10-19T07:10:43.000Z","_content":"\n## 目的\n\n统一代码格式，美化代码。\n\n## 配置\n\n首先，vetur 默认设置是这个样的。也就是很多是用的 prettier 插件。\n打开`文件 -> 首选项 -> 设置`的`用户设置`加入下列配置信息：\n{% asset_img 20181019154332.png  %}\n\n```\n\"git.autofetch\": false,\n// 控制终端游标是否闪烁。\n\"terminal.integrated.cursorBlinking\": true,\n\"editor.fontFamily\": \"Consolas\",\n\"vetur.format.defaultFormatter.css\": \"prettier\",\n\"vetur.format.defaultFormatter.postcss\": \"prettier\",\n\"vetur.format.defaultFormatter.scss\": \"prettier\",\n\"vetur.format.defaultFormatter.less\": \"prettier\",\n\"vetur.format.defaultFormatter.stylus\": \"stylus-supremacy\",\n\"vetur.format.defaultFormatter.js\": \"prettier\",\n\"vetur.format.defaultFormatter.ts\": \"prettier\",\n// \"[javascript]\": {\n//   \"editor.formatOnSave\": true\n// },\n\"[css]\": {\n    \"editor.formatOnSave\": true\n},\n\"[scss]\": {\n    \"editor.formatOnSave\": true\n},\n\"[vue]\": {\n    \"editor.formatOnSave\": true\n},\n\"prettier.tabWidth\": 2,\n//取消js单引号自动转换成双引号\n\"prettier.semi\": false,\n\"prettier.singleQuote\": true,\n\"[markdown]\": {\n    \"editor.formatOnSave\": true,\n    \"editor.wordWrap\": \"on\",\n    \"editor.renderWhitespace\": \"all\",\n    \"editor.acceptSuggestionOnEnter\": \"off\"\n}\n```\n\n## 编辑器配置\n\n在项目文件中新建`.editorconfig`文件\n为特定类型指定缩进大小、缩进类型(空格或 tab)，是否自动插入末行等。\n{% asset_img 20181019154456.png  %}\n\n```\n# editorconfig.org\n\n\nroot = true\n\n[*]\ncharset = utf-8\nindent_size = 4\nindent_style = space\ninsert_final_newline = true\ntrim_trailing_whitespace = true\n\n\n[*.md]\ntrim_trailing_whitespace = false\n```\n","source":"_posts/about-IDE-format-code.md","raw":"---\ntitle: VS Code 代码格式化配置\ndate: 2018-10-19 15:10:43\ntags: [vs code, formatter, setting]\n---\n\n## 目的\n\n统一代码格式，美化代码。\n\n## 配置\n\n首先，vetur 默认设置是这个样的。也就是很多是用的 prettier 插件。\n打开`文件 -> 首选项 -> 设置`的`用户设置`加入下列配置信息：\n{% asset_img 20181019154332.png  %}\n\n```\n\"git.autofetch\": false,\n// 控制终端游标是否闪烁。\n\"terminal.integrated.cursorBlinking\": true,\n\"editor.fontFamily\": \"Consolas\",\n\"vetur.format.defaultFormatter.css\": \"prettier\",\n\"vetur.format.defaultFormatter.postcss\": \"prettier\",\n\"vetur.format.defaultFormatter.scss\": \"prettier\",\n\"vetur.format.defaultFormatter.less\": \"prettier\",\n\"vetur.format.defaultFormatter.stylus\": \"stylus-supremacy\",\n\"vetur.format.defaultFormatter.js\": \"prettier\",\n\"vetur.format.defaultFormatter.ts\": \"prettier\",\n// \"[javascript]\": {\n//   \"editor.formatOnSave\": true\n// },\n\"[css]\": {\n    \"editor.formatOnSave\": true\n},\n\"[scss]\": {\n    \"editor.formatOnSave\": true\n},\n\"[vue]\": {\n    \"editor.formatOnSave\": true\n},\n\"prettier.tabWidth\": 2,\n//取消js单引号自动转换成双引号\n\"prettier.semi\": false,\n\"prettier.singleQuote\": true,\n\"[markdown]\": {\n    \"editor.formatOnSave\": true,\n    \"editor.wordWrap\": \"on\",\n    \"editor.renderWhitespace\": \"all\",\n    \"editor.acceptSuggestionOnEnter\": \"off\"\n}\n```\n\n## 编辑器配置\n\n在项目文件中新建`.editorconfig`文件\n为特定类型指定缩进大小、缩进类型(空格或 tab)，是否自动插入末行等。\n{% asset_img 20181019154456.png  %}\n\n```\n# editorconfig.org\n\n\nroot = true\n\n[*]\ncharset = utf-8\nindent_size = 4\nindent_style = space\ninsert_final_newline = true\ntrim_trailing_whitespace = true\n\n\n[*.md]\ntrim_trailing_whitespace = false\n```\n","slug":"about-IDE-format-code","published":1,"updated":"2019-01-22T12:09:22.944Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjr8h846w0003egrq6123qvnq","content":"<h2 id=\"目的\"><a href=\"#目的\" class=\"headerlink\" title=\"目的\"></a>目的</h2><p>统一代码格式，美化代码。</p>\n<h2 id=\"配置\"><a href=\"#配置\" class=\"headerlink\" title=\"配置\"></a>配置</h2><p>首先，vetur 默认设置是这个样的。也就是很多是用的 prettier 插件。<br>打开<code>文件 -&gt; 首选项 -&gt; 设置</code>的<code>用户设置</code>加入下列配置信息：<br><img src=\"/blog/2018/10/19/about-IDE-format-code/20181019154332.png\"></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&quot;git.autofetch&quot;: false,</span><br><span class=\"line\">// 控制终端游标是否闪烁。</span><br><span class=\"line\">&quot;terminal.integrated.cursorBlinking&quot;: true,</span><br><span class=\"line\">&quot;editor.fontFamily&quot;: &quot;Consolas&quot;,</span><br><span class=\"line\">&quot;vetur.format.defaultFormatter.css&quot;: &quot;prettier&quot;,</span><br><span class=\"line\">&quot;vetur.format.defaultFormatter.postcss&quot;: &quot;prettier&quot;,</span><br><span class=\"line\">&quot;vetur.format.defaultFormatter.scss&quot;: &quot;prettier&quot;,</span><br><span class=\"line\">&quot;vetur.format.defaultFormatter.less&quot;: &quot;prettier&quot;,</span><br><span class=\"line\">&quot;vetur.format.defaultFormatter.stylus&quot;: &quot;stylus-supremacy&quot;,</span><br><span class=\"line\">&quot;vetur.format.defaultFormatter.js&quot;: &quot;prettier&quot;,</span><br><span class=\"line\">&quot;vetur.format.defaultFormatter.ts&quot;: &quot;prettier&quot;,</span><br><span class=\"line\">// &quot;[javascript]&quot;: &#123;</span><br><span class=\"line\">//   &quot;editor.formatOnSave&quot;: true</span><br><span class=\"line\">// &#125;,</span><br><span class=\"line\">&quot;[css]&quot;: &#123;</span><br><span class=\"line\">    &quot;editor.formatOnSave&quot;: true</span><br><span class=\"line\">&#125;,</span><br><span class=\"line\">&quot;[scss]&quot;: &#123;</span><br><span class=\"line\">    &quot;editor.formatOnSave&quot;: true</span><br><span class=\"line\">&#125;,</span><br><span class=\"line\">&quot;[vue]&quot;: &#123;</span><br><span class=\"line\">    &quot;editor.formatOnSave&quot;: true</span><br><span class=\"line\">&#125;,</span><br><span class=\"line\">&quot;prettier.tabWidth&quot;: 2,</span><br><span class=\"line\">//取消js单引号自动转换成双引号</span><br><span class=\"line\">&quot;prettier.semi&quot;: false,</span><br><span class=\"line\">&quot;prettier.singleQuote&quot;: true,</span><br><span class=\"line\">&quot;[markdown]&quot;: &#123;</span><br><span class=\"line\">    &quot;editor.formatOnSave&quot;: true,</span><br><span class=\"line\">    &quot;editor.wordWrap&quot;: &quot;on&quot;,</span><br><span class=\"line\">    &quot;editor.renderWhitespace&quot;: &quot;all&quot;,</span><br><span class=\"line\">    &quot;editor.acceptSuggestionOnEnter&quot;: &quot;off&quot;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"编辑器配置\"><a href=\"#编辑器配置\" class=\"headerlink\" title=\"编辑器配置\"></a>编辑器配置</h2><p>在项目文件中新建<code>.editorconfig</code>文件<br>为特定类型指定缩进大小、缩进类型(空格或 tab)，是否自动插入末行等。<br><img src=\"/blog/2018/10/19/about-IDE-format-code/20181019154456.png\"></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># editorconfig.org</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">root = true</span><br><span class=\"line\"></span><br><span class=\"line\">[*]</span><br><span class=\"line\">charset = utf-8</span><br><span class=\"line\">indent_size = 4</span><br><span class=\"line\">indent_style = space</span><br><span class=\"line\">insert_final_newline = true</span><br><span class=\"line\">trim_trailing_whitespace = true</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">[*.md]</span><br><span class=\"line\">trim_trailing_whitespace = false</span><br></pre></td></tr></table></figure>\n","site":{"data":{"links":{"创造狮":{"link":"http://chuangzaoshi.com/","avatar":"../images/favatar/chuangzaoshi-logo.png","desc":"为创意工作者而设计"},"腾讯设计导航":{"link":"http://idesign.qq.com/","avatar":"../images/favatar/idesign-logo.png","desc":"网罗全网高逼格的设计站点"}},"gallery":{"Name":{"full_link":"http://example.com/full-image.png","thumb_link":"http://example.com/thumb-image.png","descr":"这是一个描述"}}}},"excerpt":"","more":"<h2 id=\"目的\"><a href=\"#目的\" class=\"headerlink\" title=\"目的\"></a>目的</h2><p>统一代码格式，美化代码。</p>\n<h2 id=\"配置\"><a href=\"#配置\" class=\"headerlink\" title=\"配置\"></a>配置</h2><p>首先，vetur 默认设置是这个样的。也就是很多是用的 prettier 插件。<br>打开<code>文件 -&gt; 首选项 -&gt; 设置</code>的<code>用户设置</code>加入下列配置信息：<br><img src=\"/blog/2018/10/19/about-IDE-format-code/20181019154332.png\"></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&quot;git.autofetch&quot;: false,</span><br><span class=\"line\">// 控制终端游标是否闪烁。</span><br><span class=\"line\">&quot;terminal.integrated.cursorBlinking&quot;: true,</span><br><span class=\"line\">&quot;editor.fontFamily&quot;: &quot;Consolas&quot;,</span><br><span class=\"line\">&quot;vetur.format.defaultFormatter.css&quot;: &quot;prettier&quot;,</span><br><span class=\"line\">&quot;vetur.format.defaultFormatter.postcss&quot;: &quot;prettier&quot;,</span><br><span class=\"line\">&quot;vetur.format.defaultFormatter.scss&quot;: &quot;prettier&quot;,</span><br><span class=\"line\">&quot;vetur.format.defaultFormatter.less&quot;: &quot;prettier&quot;,</span><br><span class=\"line\">&quot;vetur.format.defaultFormatter.stylus&quot;: &quot;stylus-supremacy&quot;,</span><br><span class=\"line\">&quot;vetur.format.defaultFormatter.js&quot;: &quot;prettier&quot;,</span><br><span class=\"line\">&quot;vetur.format.defaultFormatter.ts&quot;: &quot;prettier&quot;,</span><br><span class=\"line\">// &quot;[javascript]&quot;: &#123;</span><br><span class=\"line\">//   &quot;editor.formatOnSave&quot;: true</span><br><span class=\"line\">// &#125;,</span><br><span class=\"line\">&quot;[css]&quot;: &#123;</span><br><span class=\"line\">    &quot;editor.formatOnSave&quot;: true</span><br><span class=\"line\">&#125;,</span><br><span class=\"line\">&quot;[scss]&quot;: &#123;</span><br><span class=\"line\">    &quot;editor.formatOnSave&quot;: true</span><br><span class=\"line\">&#125;,</span><br><span class=\"line\">&quot;[vue]&quot;: &#123;</span><br><span class=\"line\">    &quot;editor.formatOnSave&quot;: true</span><br><span class=\"line\">&#125;,</span><br><span class=\"line\">&quot;prettier.tabWidth&quot;: 2,</span><br><span class=\"line\">//取消js单引号自动转换成双引号</span><br><span class=\"line\">&quot;prettier.semi&quot;: false,</span><br><span class=\"line\">&quot;prettier.singleQuote&quot;: true,</span><br><span class=\"line\">&quot;[markdown]&quot;: &#123;</span><br><span class=\"line\">    &quot;editor.formatOnSave&quot;: true,</span><br><span class=\"line\">    &quot;editor.wordWrap&quot;: &quot;on&quot;,</span><br><span class=\"line\">    &quot;editor.renderWhitespace&quot;: &quot;all&quot;,</span><br><span class=\"line\">    &quot;editor.acceptSuggestionOnEnter&quot;: &quot;off&quot;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"编辑器配置\"><a href=\"#编辑器配置\" class=\"headerlink\" title=\"编辑器配置\"></a>编辑器配置</h2><p>在项目文件中新建<code>.editorconfig</code>文件<br>为特定类型指定缩进大小、缩进类型(空格或 tab)，是否自动插入末行等。<br><img src=\"/blog/2018/10/19/about-IDE-format-code/20181019154456.png\"></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># editorconfig.org</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">root = true</span><br><span class=\"line\"></span><br><span class=\"line\">[*]</span><br><span class=\"line\">charset = utf-8</span><br><span class=\"line\">indent_size = 4</span><br><span class=\"line\">indent_style = space</span><br><span class=\"line\">insert_final_newline = true</span><br><span class=\"line\">trim_trailing_whitespace = true</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">[*.md]</span><br><span class=\"line\">trim_trailing_whitespace = false</span><br></pre></td></tr></table></figure>\n"},{"title":"Hello World","_content":"Welcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/deployment.html)\n","source":"_posts/hello-world.md","raw":"---\ntitle: Hello World\n---\nWelcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/deployment.html)\n","slug":"hello-world","published":1,"date":"2019-01-22T12:09:22.948Z","updated":"2019-01-22T12:09:22.948Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjr8h84710006egrqs15gtwy2","content":"<p>Welcome to <a href=\"https://hexo.io/\" target=\"_blank\" rel=\"noopener\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\" target=\"_blank\" rel=\"noopener\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\" target=\"_blank\" rel=\"noopener\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\" target=\"_blank\" rel=\"noopener\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">\"My New Post\"</span></span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\" target=\"_blank\" rel=\"noopener\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/server.html\" target=\"_blank\" rel=\"noopener\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\" target=\"_blank\" rel=\"noopener\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/deployment.html\" target=\"_blank\" rel=\"noopener\">Deployment</a></p>\n","site":{"data":{"links":{"创造狮":{"link":"http://chuangzaoshi.com/","avatar":"../images/favatar/chuangzaoshi-logo.png","desc":"为创意工作者而设计"},"腾讯设计导航":{"link":"http://idesign.qq.com/","avatar":"../images/favatar/idesign-logo.png","desc":"网罗全网高逼格的设计站点"}},"gallery":{"Name":{"full_link":"http://example.com/full-image.png","thumb_link":"http://example.com/thumb-image.png","descr":"这是一个描述"}}}},"excerpt":"","more":"<p>Welcome to <a href=\"https://hexo.io/\" target=\"_blank\" rel=\"noopener\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\" target=\"_blank\" rel=\"noopener\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\" target=\"_blank\" rel=\"noopener\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\" target=\"_blank\" rel=\"noopener\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">\"My New Post\"</span></span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\" target=\"_blank\" rel=\"noopener\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/server.html\" target=\"_blank\" rel=\"noopener\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\" target=\"_blank\" rel=\"noopener\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/deployment.html\" target=\"_blank\" rel=\"noopener\">Deployment</a></p>\n"},{"title":"layui-router项目介绍","date":"2018-10-31T06:22:05.000Z","_content":"\nLayui 的路由版本。Layui 还有 iframe 版本，iframe 版特点是：\n\n> - 基于 iframe 标签页实现，简单实用\n> - 传统开发模式，撸起袖子直接开干\n> - 交互体验相比“单页版”略有点欠缺\n\n路由版比较 iframe 版，有下列好处:\n\n> - 单页面应用方案，所有操作无需跳转\n> - 采用前后端分离开发模式，上手略难\n> - 更友好的交互体验，减轻浏览器负载\n\n表面上最明显的特点就是浏览器地址栏，iframe 版 url 是这样:\n{% asset_img 20181031143900.png %}\n{% asset_img 20181031144115.png %}\n不同的页面，地址栏居然一样？？？\n\n另一边 router 版的是这样：\n{% asset_img 20181031144844.png %}\n{% asset_img 20181031144909.png %}\n跟想象的一样，每个 url 对应不同的界面。\n\n当我们按浏览器返回或者前进按钮时，iframe 版会出现问题，不能正确的返回或前进页面，而 router 版则没有这种问题。\n\n### 项目结构\n\n```bash\n├─json                          //模拟数据文件(相当于api接口列表)\n│  ├─layim\n│  ├─message\n│  ├─user\n│  └─workorder\n├─layui                         //layui资源文件(插件，里面代码无需理会)\n│  ├─css\n│  ├─font\n│  ├─images\n│  └─lay\n├─pages                         //页面相关文件\n│   ├─controller                //页面控制层\n│   ├─lib                       //插件文件\n│   │  └─extend\n│   ├─pro                       //layui框架文件(与router相关)\n│   ├─style                     //自定义样式文件\n│   │  └─res\n│   └─views                     //页面相关模块存放路径\n│       ├─app                   //app模块界面\n│       │  └─workorder\n│       ├─home                  //home主页模块界面\n│       ├─senior                //...\n│       ├─system                //...\n│       ├─template              //...\n│       ├─user                  //...\n│       ├─config.js             //项目相关配置文件\n│       └─index.js              //router功能代码\n└─index.html                    //index入口文件\n```\n\n### 路由执行过程\n\n{% asset_img 20181031161907.png %}\n\n### 部分代码讲解\n\n- 路由跳转\n\n```javascript\nlocation.hash = '/home/homepage1'\n```\n\n- 页面代码 page/views/home/homepage1.html：\n\n```html\n<title>主页一</title>\n\n<div class=\"layui-card layadmin-header\">\n    <div class=\"layui-breadcrumb\" lay-filter=\"breadcrumb\">\n        <a lay-href=\"\">主页</a>\n        <a><cite>主页一</cite></a>\n    </div>\n</div>\n\n<div class=\"layui-fluid\">\n    <div class=\"layui-row layui-col-space15\">\n        <div class=\"layui-col-md4\">\n            <div class=\"layui-card\">\n                <div class=\"layui-card-header\">八卦新闻</div>\n                <div class=\"layui-card-body\">\n                    <div class=\"layui-carousel layadmin-carousel layadmin-dataview\" data-anim=\"fade\" lay-filter=\"LAY-index-pageone\">\n                        <div carousel-item id=\"LAY-index-pageone\">\n                            <div><i class=\"layui-icon layui-icon-loading1 layadmin-loading\"></i></div>\n                        </div>\n                    </div>\n\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n\n<script>\n    layui.use('sample', layui.factory('sample'));//引入控制层/page/controller/simple.js\n</script>\n```\n\n- js 代码 /page/controller/simple.js\n\n```javascript\nlayui.define(function(e) {\n  var a = layui.admin\n  layui.use(['admin', 'carousel'], function() {\n    ...\n    //渲染跑马灯\n    e('.layadmin-carousel').each(function() {\n      var l = e(this)\n      a.render({\n        elem: this,\n        width: '100%',\n        arrow: 'none',\n        interval: l.data('interval'),\n        autoplay: l.data('autoplay') === !0,\n        trigger: t.ios || t.android ? 'click' : 'hover',\n        anim: l.data('anim')\n      })\n    })\n  }),\n    //渲染图表\n    layui.use(['carousel', 'echarts'], function() {\n      ...\n    }),\n    e('sample', {})//定义controller层名字\n})\n```\n\n### 最后\n\n此 demo 中的各个插件的用法，由于模板是通过手工爬出来的，没有说明文档，但基本的 layui 用法和 iframe 类似，复杂的插件具体用到还需自行琢磨研究。\n","source":"_posts/layui-router.md","raw":"---\ntitle: layui-router项目介绍\ndate: 2018-10-31 14:22:05\ntags: [layui, router]\n---\n\nLayui 的路由版本。Layui 还有 iframe 版本，iframe 版特点是：\n\n> - 基于 iframe 标签页实现，简单实用\n> - 传统开发模式，撸起袖子直接开干\n> - 交互体验相比“单页版”略有点欠缺\n\n路由版比较 iframe 版，有下列好处:\n\n> - 单页面应用方案，所有操作无需跳转\n> - 采用前后端分离开发模式，上手略难\n> - 更友好的交互体验，减轻浏览器负载\n\n表面上最明显的特点就是浏览器地址栏，iframe 版 url 是这样:\n{% asset_img 20181031143900.png %}\n{% asset_img 20181031144115.png %}\n不同的页面，地址栏居然一样？？？\n\n另一边 router 版的是这样：\n{% asset_img 20181031144844.png %}\n{% asset_img 20181031144909.png %}\n跟想象的一样，每个 url 对应不同的界面。\n\n当我们按浏览器返回或者前进按钮时，iframe 版会出现问题，不能正确的返回或前进页面，而 router 版则没有这种问题。\n\n### 项目结构\n\n```bash\n├─json                          //模拟数据文件(相当于api接口列表)\n│  ├─layim\n│  ├─message\n│  ├─user\n│  └─workorder\n├─layui                         //layui资源文件(插件，里面代码无需理会)\n│  ├─css\n│  ├─font\n│  ├─images\n│  └─lay\n├─pages                         //页面相关文件\n│   ├─controller                //页面控制层\n│   ├─lib                       //插件文件\n│   │  └─extend\n│   ├─pro                       //layui框架文件(与router相关)\n│   ├─style                     //自定义样式文件\n│   │  └─res\n│   └─views                     //页面相关模块存放路径\n│       ├─app                   //app模块界面\n│       │  └─workorder\n│       ├─home                  //home主页模块界面\n│       ├─senior                //...\n│       ├─system                //...\n│       ├─template              //...\n│       ├─user                  //...\n│       ├─config.js             //项目相关配置文件\n│       └─index.js              //router功能代码\n└─index.html                    //index入口文件\n```\n\n### 路由执行过程\n\n{% asset_img 20181031161907.png %}\n\n### 部分代码讲解\n\n- 路由跳转\n\n```javascript\nlocation.hash = '/home/homepage1'\n```\n\n- 页面代码 page/views/home/homepage1.html：\n\n```html\n<title>主页一</title>\n\n<div class=\"layui-card layadmin-header\">\n    <div class=\"layui-breadcrumb\" lay-filter=\"breadcrumb\">\n        <a lay-href=\"\">主页</a>\n        <a><cite>主页一</cite></a>\n    </div>\n</div>\n\n<div class=\"layui-fluid\">\n    <div class=\"layui-row layui-col-space15\">\n        <div class=\"layui-col-md4\">\n            <div class=\"layui-card\">\n                <div class=\"layui-card-header\">八卦新闻</div>\n                <div class=\"layui-card-body\">\n                    <div class=\"layui-carousel layadmin-carousel layadmin-dataview\" data-anim=\"fade\" lay-filter=\"LAY-index-pageone\">\n                        <div carousel-item id=\"LAY-index-pageone\">\n                            <div><i class=\"layui-icon layui-icon-loading1 layadmin-loading\"></i></div>\n                        </div>\n                    </div>\n\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n\n<script>\n    layui.use('sample', layui.factory('sample'));//引入控制层/page/controller/simple.js\n</script>\n```\n\n- js 代码 /page/controller/simple.js\n\n```javascript\nlayui.define(function(e) {\n  var a = layui.admin\n  layui.use(['admin', 'carousel'], function() {\n    ...\n    //渲染跑马灯\n    e('.layadmin-carousel').each(function() {\n      var l = e(this)\n      a.render({\n        elem: this,\n        width: '100%',\n        arrow: 'none',\n        interval: l.data('interval'),\n        autoplay: l.data('autoplay') === !0,\n        trigger: t.ios || t.android ? 'click' : 'hover',\n        anim: l.data('anim')\n      })\n    })\n  }),\n    //渲染图表\n    layui.use(['carousel', 'echarts'], function() {\n      ...\n    }),\n    e('sample', {})//定义controller层名字\n})\n```\n\n### 最后\n\n此 demo 中的各个插件的用法，由于模板是通过手工爬出来的，没有说明文档，但基本的 layui 用法和 iframe 类似，复杂的插件具体用到还需自行琢磨研究。\n","slug":"layui-router","published":1,"updated":"2019-01-22T12:09:22.949Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjr8h84730007egrqsfxde4ah","content":"<p>Layui 的路由版本。Layui 还有 iframe 版本，iframe 版特点是：</p>\n<blockquote>\n<ul>\n<li>基于 iframe 标签页实现，简单实用</li>\n<li>传统开发模式，撸起袖子直接开干</li>\n<li>交互体验相比“单页版”略有点欠缺</li>\n</ul>\n</blockquote>\n<p>路由版比较 iframe 版，有下列好处:</p>\n<blockquote>\n<ul>\n<li>单页面应用方案，所有操作无需跳转</li>\n<li>采用前后端分离开发模式，上手略难</li>\n<li>更友好的交互体验，减轻浏览器负载</li>\n</ul>\n</blockquote>\n<p>表面上最明显的特点就是浏览器地址栏，iframe 版 url 是这样:<br><img src=\"/blog/2018/10/31/layui-router/20181031143900.png\"><br><img src=\"/blog/2018/10/31/layui-router/20181031144115.png\"><br>不同的页面，地址栏居然一样？？？</p>\n<p>另一边 router 版的是这样：<br><img src=\"/blog/2018/10/31/layui-router/20181031144844.png\"><br><img src=\"/blog/2018/10/31/layui-router/20181031144909.png\"><br>跟想象的一样，每个 url 对应不同的界面。</p>\n<p>当我们按浏览器返回或者前进按钮时，iframe 版会出现问题，不能正确的返回或前进页面，而 router 版则没有这种问题。</p>\n<h3 id=\"项目结构\"><a href=\"#项目结构\" class=\"headerlink\" title=\"项目结构\"></a>项目结构</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">├─json                          //模拟数据文件(相当于api接口列表)</span><br><span class=\"line\">│  ├─layim</span><br><span class=\"line\">│  ├─message</span><br><span class=\"line\">│  ├─user</span><br><span class=\"line\">│  └─workorder</span><br><span class=\"line\">├─layui                         //layui资源文件(插件，里面代码无需理会)</span><br><span class=\"line\">│  ├─css</span><br><span class=\"line\">│  ├─font</span><br><span class=\"line\">│  ├─images</span><br><span class=\"line\">│  └─lay</span><br><span class=\"line\">├─pages                         //页面相关文件</span><br><span class=\"line\">│   ├─controller                //页面控制层</span><br><span class=\"line\">│   ├─lib                       //插件文件</span><br><span class=\"line\">│   │  └─extend</span><br><span class=\"line\">│   ├─pro                       //layui框架文件(与router相关)</span><br><span class=\"line\">│   ├─style                     //自定义样式文件</span><br><span class=\"line\">│   │  └─res</span><br><span class=\"line\">│   └─views                     //页面相关模块存放路径</span><br><span class=\"line\">│       ├─app                   //app模块界面</span><br><span class=\"line\">│       │  └─workorder</span><br><span class=\"line\">│       ├─home                  //home主页模块界面</span><br><span class=\"line\">│       ├─senior                //...</span><br><span class=\"line\">│       ├─system                //...</span><br><span class=\"line\">│       ├─template              //...</span><br><span class=\"line\">│       ├─user                  //...</span><br><span class=\"line\">│       ├─config.js             //项目相关配置文件</span><br><span class=\"line\">│       └─index.js              //router功能代码</span><br><span class=\"line\">└─index.html                    //index入口文件</span><br></pre></td></tr></table></figure>\n<h3 id=\"路由执行过程\"><a href=\"#路由执行过程\" class=\"headerlink\" title=\"路由执行过程\"></a>路由执行过程</h3><img src=\"/blog/2018/10/31/layui-router/20181031161907.png\">\n<h3 id=\"部分代码讲解\"><a href=\"#部分代码讲解\" class=\"headerlink\" title=\"部分代码讲解\"></a>部分代码讲解</h3><ul>\n<li>路由跳转</li>\n</ul>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">location.hash = <span class=\"string\">'/home/homepage1'</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li>页面代码 page/views/home/homepage1.html：</li>\n</ul>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>主页一<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"layui-card layadmin-header\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"layui-breadcrumb\"</span> <span class=\"attr\">lay-filter</span>=<span class=\"string\">\"breadcrumb\"</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">lay-href</span>=<span class=\"string\">\"\"</span>&gt;</span>主页<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">cite</span>&gt;</span>主页一<span class=\"tag\">&lt;/<span class=\"name\">cite</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"layui-fluid\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"layui-row layui-col-space15\"</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"layui-col-md4\"</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"layui-card\"</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"layui-card-header\"</span>&gt;</span>八卦新闻<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"layui-card-body\"</span>&gt;</span></span><br><span class=\"line\">                    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"layui-carousel layadmin-carousel layadmin-dataview\"</span> <span class=\"attr\">data-anim</span>=<span class=\"string\">\"fade\"</span> <span class=\"attr\">lay-filter</span>=<span class=\"string\">\"LAY-index-pageone\"</span>&gt;</span></span><br><span class=\"line\">                        <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">carousel-item</span> <span class=\"attr\">id</span>=<span class=\"string\">\"LAY-index-pageone\"</span>&gt;</span></span><br><span class=\"line\">                            <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">i</span> <span class=\"attr\">class</span>=<span class=\"string\">\"layui-icon layui-icon-loading1 layadmin-loading\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">i</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">                        <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">                    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">                <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"undefined\"></span></span><br><span class=\"line\"><span class=\"javascript\">    layui.use(<span class=\"string\">'sample'</span>, layui.factory(<span class=\"string\">'sample'</span>));<span class=\"comment\">//引入控制层/page/controller/simple.js</span></span></span><br><span class=\"line\"><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li>js 代码 /page/controller/simple.js</li>\n</ul>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">layui.define(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">e</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> a = layui.admin</span><br><span class=\"line\">  layui.use([<span class=\"string\">'admin'</span>, <span class=\"string\">'carousel'</span>], <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    ...</span><br><span class=\"line\">    <span class=\"comment\">//渲染跑马灯</span></span><br><span class=\"line\">    e(<span class=\"string\">'.layadmin-carousel'</span>).each(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">      <span class=\"keyword\">var</span> l = e(<span class=\"keyword\">this</span>)</span><br><span class=\"line\">      a.render(&#123;</span><br><span class=\"line\">        elem: <span class=\"keyword\">this</span>,</span><br><span class=\"line\">        width: <span class=\"string\">'100%'</span>,</span><br><span class=\"line\">        arrow: <span class=\"string\">'none'</span>,</span><br><span class=\"line\">        interval: l.data(<span class=\"string\">'interval'</span>),</span><br><span class=\"line\">        autoplay: l.data(<span class=\"string\">'autoplay'</span>) === !<span class=\"number\">0</span>,</span><br><span class=\"line\">        trigger: t.ios || t.android ? <span class=\"string\">'click'</span> : <span class=\"string\">'hover'</span>,</span><br><span class=\"line\">        anim: l.data(<span class=\"string\">'anim'</span>)</span><br><span class=\"line\">      &#125;)</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">  &#125;),</span><br><span class=\"line\">    <span class=\"comment\">//渲染图表</span></span><br><span class=\"line\">    layui.use([<span class=\"string\">'carousel'</span>, <span class=\"string\">'echarts'</span>], <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">      ...</span><br><span class=\"line\">    &#125;),</span><br><span class=\"line\">    e(<span class=\"string\">'sample'</span>, &#123;&#125;)<span class=\"comment\">//定义controller层名字</span></span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n<h3 id=\"最后\"><a href=\"#最后\" class=\"headerlink\" title=\"最后\"></a>最后</h3><p>此 demo 中的各个插件的用法，由于模板是通过手工爬出来的，没有说明文档，但基本的 layui 用法和 iframe 类似，复杂的插件具体用到还需自行琢磨研究。</p>\n","site":{"data":{"links":{"创造狮":{"link":"http://chuangzaoshi.com/","avatar":"../images/favatar/chuangzaoshi-logo.png","desc":"为创意工作者而设计"},"腾讯设计导航":{"link":"http://idesign.qq.com/","avatar":"../images/favatar/idesign-logo.png","desc":"网罗全网高逼格的设计站点"}},"gallery":{"Name":{"full_link":"http://example.com/full-image.png","thumb_link":"http://example.com/thumb-image.png","descr":"这是一个描述"}}}},"excerpt":"","more":"<p>Layui 的路由版本。Layui 还有 iframe 版本，iframe 版特点是：</p>\n<blockquote>\n<ul>\n<li>基于 iframe 标签页实现，简单实用</li>\n<li>传统开发模式，撸起袖子直接开干</li>\n<li>交互体验相比“单页版”略有点欠缺</li>\n</ul>\n</blockquote>\n<p>路由版比较 iframe 版，有下列好处:</p>\n<blockquote>\n<ul>\n<li>单页面应用方案，所有操作无需跳转</li>\n<li>采用前后端分离开发模式，上手略难</li>\n<li>更友好的交互体验，减轻浏览器负载</li>\n</ul>\n</blockquote>\n<p>表面上最明显的特点就是浏览器地址栏，iframe 版 url 是这样:<br><img src=\"/blog/2018/10/31/layui-router/20181031143900.png\"><br><img src=\"/blog/2018/10/31/layui-router/20181031144115.png\"><br>不同的页面，地址栏居然一样？？？</p>\n<p>另一边 router 版的是这样：<br><img src=\"/blog/2018/10/31/layui-router/20181031144844.png\"><br><img src=\"/blog/2018/10/31/layui-router/20181031144909.png\"><br>跟想象的一样，每个 url 对应不同的界面。</p>\n<p>当我们按浏览器返回或者前进按钮时，iframe 版会出现问题，不能正确的返回或前进页面，而 router 版则没有这种问题。</p>\n<h3 id=\"项目结构\"><a href=\"#项目结构\" class=\"headerlink\" title=\"项目结构\"></a>项目结构</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">├─json                          //模拟数据文件(相当于api接口列表)</span><br><span class=\"line\">│  ├─layim</span><br><span class=\"line\">│  ├─message</span><br><span class=\"line\">│  ├─user</span><br><span class=\"line\">│  └─workorder</span><br><span class=\"line\">├─layui                         //layui资源文件(插件，里面代码无需理会)</span><br><span class=\"line\">│  ├─css</span><br><span class=\"line\">│  ├─font</span><br><span class=\"line\">│  ├─images</span><br><span class=\"line\">│  └─lay</span><br><span class=\"line\">├─pages                         //页面相关文件</span><br><span class=\"line\">│   ├─controller                //页面控制层</span><br><span class=\"line\">│   ├─lib                       //插件文件</span><br><span class=\"line\">│   │  └─extend</span><br><span class=\"line\">│   ├─pro                       //layui框架文件(与router相关)</span><br><span class=\"line\">│   ├─style                     //自定义样式文件</span><br><span class=\"line\">│   │  └─res</span><br><span class=\"line\">│   └─views                     //页面相关模块存放路径</span><br><span class=\"line\">│       ├─app                   //app模块界面</span><br><span class=\"line\">│       │  └─workorder</span><br><span class=\"line\">│       ├─home                  //home主页模块界面</span><br><span class=\"line\">│       ├─senior                //...</span><br><span class=\"line\">│       ├─system                //...</span><br><span class=\"line\">│       ├─template              //...</span><br><span class=\"line\">│       ├─user                  //...</span><br><span class=\"line\">│       ├─config.js             //项目相关配置文件</span><br><span class=\"line\">│       └─index.js              //router功能代码</span><br><span class=\"line\">└─index.html                    //index入口文件</span><br></pre></td></tr></table></figure>\n<h3 id=\"路由执行过程\"><a href=\"#路由执行过程\" class=\"headerlink\" title=\"路由执行过程\"></a>路由执行过程</h3><img src=\"/blog/2018/10/31/layui-router/20181031161907.png\">\n<h3 id=\"部分代码讲解\"><a href=\"#部分代码讲解\" class=\"headerlink\" title=\"部分代码讲解\"></a>部分代码讲解</h3><ul>\n<li>路由跳转</li>\n</ul>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">location.hash = <span class=\"string\">'/home/homepage1'</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li>页面代码 page/views/home/homepage1.html：</li>\n</ul>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>主页一<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"layui-card layadmin-header\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"layui-breadcrumb\"</span> <span class=\"attr\">lay-filter</span>=<span class=\"string\">\"breadcrumb\"</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">lay-href</span>=<span class=\"string\">\"\"</span>&gt;</span>主页<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">cite</span>&gt;</span>主页一<span class=\"tag\">&lt;/<span class=\"name\">cite</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"layui-fluid\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"layui-row layui-col-space15\"</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"layui-col-md4\"</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"layui-card\"</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"layui-card-header\"</span>&gt;</span>八卦新闻<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"layui-card-body\"</span>&gt;</span></span><br><span class=\"line\">                    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"layui-carousel layadmin-carousel layadmin-dataview\"</span> <span class=\"attr\">data-anim</span>=<span class=\"string\">\"fade\"</span> <span class=\"attr\">lay-filter</span>=<span class=\"string\">\"LAY-index-pageone\"</span>&gt;</span></span><br><span class=\"line\">                        <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">carousel-item</span> <span class=\"attr\">id</span>=<span class=\"string\">\"LAY-index-pageone\"</span>&gt;</span></span><br><span class=\"line\">                            <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">i</span> <span class=\"attr\">class</span>=<span class=\"string\">\"layui-icon layui-icon-loading1 layadmin-loading\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">i</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">                        <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">                    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">                <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"undefined\"></span></span><br><span class=\"line\"><span class=\"javascript\">    layui.use(<span class=\"string\">'sample'</span>, layui.factory(<span class=\"string\">'sample'</span>));<span class=\"comment\">//引入控制层/page/controller/simple.js</span></span></span><br><span class=\"line\"><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li>js 代码 /page/controller/simple.js</li>\n</ul>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">layui.define(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">e</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> a = layui.admin</span><br><span class=\"line\">  layui.use([<span class=\"string\">'admin'</span>, <span class=\"string\">'carousel'</span>], <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    ...</span><br><span class=\"line\">    <span class=\"comment\">//渲染跑马灯</span></span><br><span class=\"line\">    e(<span class=\"string\">'.layadmin-carousel'</span>).each(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">      <span class=\"keyword\">var</span> l = e(<span class=\"keyword\">this</span>)</span><br><span class=\"line\">      a.render(&#123;</span><br><span class=\"line\">        elem: <span class=\"keyword\">this</span>,</span><br><span class=\"line\">        width: <span class=\"string\">'100%'</span>,</span><br><span class=\"line\">        arrow: <span class=\"string\">'none'</span>,</span><br><span class=\"line\">        interval: l.data(<span class=\"string\">'interval'</span>),</span><br><span class=\"line\">        autoplay: l.data(<span class=\"string\">'autoplay'</span>) === !<span class=\"number\">0</span>,</span><br><span class=\"line\">        trigger: t.ios || t.android ? <span class=\"string\">'click'</span> : <span class=\"string\">'hover'</span>,</span><br><span class=\"line\">        anim: l.data(<span class=\"string\">'anim'</span>)</span><br><span class=\"line\">      &#125;)</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">  &#125;),</span><br><span class=\"line\">    <span class=\"comment\">//渲染图表</span></span><br><span class=\"line\">    layui.use([<span class=\"string\">'carousel'</span>, <span class=\"string\">'echarts'</span>], <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">      ...</span><br><span class=\"line\">    &#125;),</span><br><span class=\"line\">    e(<span class=\"string\">'sample'</span>, &#123;&#125;)<span class=\"comment\">//定义controller层名字</span></span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n<h3 id=\"最后\"><a href=\"#最后\" class=\"headerlink\" title=\"最后\"></a>最后</h3><p>此 demo 中的各个插件的用法，由于模板是通过手工爬出来的，没有说明文档，但基本的 layui 用法和 iframe 类似，复杂的插件具体用到还需自行琢磨研究。</p>\n"},{"title":"Layui项目常见错误及解决方式","date":"2018-10-17T02:46:37.000Z","_content":"\n1. try running: npm install xxx\n   {% asset_img 20181015155613.png try running: npm install xxx %}\n\n   > 错误提示`try running: npm install gulp`，表示未安装相关依赖，按照提示执行命令安装相关依赖。\n\n1. layui.js:2 GET http://xxx/xx.xx net::ERR_ABORTED 404 (Not Found)\n   {% asset_img 20181015164139.png layui.js:2 GET http://xxx/xx.xx net::ERR_ABORTED 404 (Not Found) %}\n   {% asset_img 20181015164428.png  %}\n\n   > 1.当页面显示异常或者自己觉得出错了，首先打开浏览器控制台 console（F12）查看有没有报错，然后根据报错去判断引发问题的每一个点。例如这个错误，按 F12 打开控制台,发现`console`报了两个错，一个是 js 的`404`错误，首先想一下在什么地方引入了`index1.js`这个文件，然后确定一下文件存不存在。打开`index.html`，可以看到引入了`index1`文件，然是左边文件夹里并没有这个文件，所以这个问题是由于文件名写错了。  \n   > 2.有的人可能会发现图 1 的控制台报了两个错误，第一个可能知道是文件路径不对，但是第 2 个报错并不清楚是因为什么引起的。这里特别提醒找错误不要从下往上看，先解决第一个出现的错误，解决完刷新页面再看后面的错误，也不要纠结一定所有问题一次解决。这里我们把第一个问题解决之后，发现第二个问题是由于第一个问题引起的，解决了第一个问题第二个问题也没有再出现\n\n1. 打包编译事项注意\n   > 发布的时候注意 config.js 的两个变量`isProduction:false，isDevelopment:false`，测试环境的时候只需把`isDevelopment`改为`true`，正式环境只需把`isProduction`改为`true`，本地开发的时候把两个都设置成`false`。\n\n> 请求无法回数据或者返回失败，看看是不是未登录或者跨域问题。\n","source":"_posts/layui-template-error-collection.md","raw":"---\ntitle: Layui项目常见错误及解决方式\ndate: 2018-10-17 10:46:37\ntags: [layui, javascript, js, error]\n---\n\n1. try running: npm install xxx\n   {% asset_img 20181015155613.png try running: npm install xxx %}\n\n   > 错误提示`try running: npm install gulp`，表示未安装相关依赖，按照提示执行命令安装相关依赖。\n\n1. layui.js:2 GET http://xxx/xx.xx net::ERR_ABORTED 404 (Not Found)\n   {% asset_img 20181015164139.png layui.js:2 GET http://xxx/xx.xx net::ERR_ABORTED 404 (Not Found) %}\n   {% asset_img 20181015164428.png  %}\n\n   > 1.当页面显示异常或者自己觉得出错了，首先打开浏览器控制台 console（F12）查看有没有报错，然后根据报错去判断引发问题的每一个点。例如这个错误，按 F12 打开控制台,发现`console`报了两个错，一个是 js 的`404`错误，首先想一下在什么地方引入了`index1.js`这个文件，然后确定一下文件存不存在。打开`index.html`，可以看到引入了`index1`文件，然是左边文件夹里并没有这个文件，所以这个问题是由于文件名写错了。  \n   > 2.有的人可能会发现图 1 的控制台报了两个错误，第一个可能知道是文件路径不对，但是第 2 个报错并不清楚是因为什么引起的。这里特别提醒找错误不要从下往上看，先解决第一个出现的错误，解决完刷新页面再看后面的错误，也不要纠结一定所有问题一次解决。这里我们把第一个问题解决之后，发现第二个问题是由于第一个问题引起的，解决了第一个问题第二个问题也没有再出现\n\n1. 打包编译事项注意\n   > 发布的时候注意 config.js 的两个变量`isProduction:false，isDevelopment:false`，测试环境的时候只需把`isDevelopment`改为`true`，正式环境只需把`isProduction`改为`true`，本地开发的时候把两个都设置成`false`。\n\n> 请求无法回数据或者返回失败，看看是不是未登录或者跨域问题。\n","slug":"layui-template-error-collection","published":1,"updated":"2019-01-22T12:09:22.955Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjr8h84750008egrqycowy5we","content":"<ol>\n<li><p>try running: npm install xxx</p>\n<img src=\"/blog/2018/10/17/layui-template-error-collection/20181015155613.png\" title=\"try running: npm install xxx\">\n<blockquote>\n<p>错误提示<code>try running: npm install gulp</code>，表示未安装相关依赖，按照提示执行命令安装相关依赖。</p>\n</blockquote>\n</li>\n<li><p>layui.js:2 GET <a href=\"http://xxx/xx.xx\" target=\"_blank\" rel=\"noopener\">http://xxx/xx.xx</a> net::ERR_ABORTED 404 (Not Found)</p>\n<img src=\"/blog/2018/10/17/layui-template-error-collection/20181015164139.png\" title=\"layui.js:2 GET http://xxx/xx.xx net::ERR_ABORTED 404 (Not Found)\">\n<img src=\"/blog/2018/10/17/layui-template-error-collection/20181015164428.png\">\n<blockquote>\n<p>1.当页面显示异常或者自己觉得出错了，首先打开浏览器控制台 console（F12）查看有没有报错，然后根据报错去判断引发问题的每一个点。例如这个错误，按 F12 打开控制台,发现<code>console</code>报了两个错，一个是 js 的<code>404</code>错误，首先想一下在什么地方引入了<code>index1.js</code>这个文件，然后确定一下文件存不存在。打开<code>index.html</code>，可以看到引入了<code>index1</code>文件，然是左边文件夹里并没有这个文件，所以这个问题是由于文件名写错了。<br>2.有的人可能会发现图 1 的控制台报了两个错误，第一个可能知道是文件路径不对，但是第 2 个报错并不清楚是因为什么引起的。这里特别提醒找错误不要从下往上看，先解决第一个出现的错误，解决完刷新页面再看后面的错误，也不要纠结一定所有问题一次解决。这里我们把第一个问题解决之后，发现第二个问题是由于第一个问题引起的，解决了第一个问题第二个问题也没有再出现</p>\n</blockquote>\n</li>\n<li><p>打包编译事项注意</p>\n<blockquote>\n<p>发布的时候注意 config.js 的两个变量<code>isProduction:false，isDevelopment:false</code>，测试环境的时候只需把<code>isDevelopment</code>改为<code>true</code>，正式环境只需把<code>isProduction</code>改为<code>true</code>，本地开发的时候把两个都设置成<code>false</code>。</p>\n</blockquote>\n</li>\n</ol>\n<blockquote>\n<p>请求无法回数据或者返回失败，看看是不是未登录或者跨域问题。</p>\n</blockquote>\n","site":{"data":{"links":{"创造狮":{"link":"http://chuangzaoshi.com/","avatar":"../images/favatar/chuangzaoshi-logo.png","desc":"为创意工作者而设计"},"腾讯设计导航":{"link":"http://idesign.qq.com/","avatar":"../images/favatar/idesign-logo.png","desc":"网罗全网高逼格的设计站点"}},"gallery":{"Name":{"full_link":"http://example.com/full-image.png","thumb_link":"http://example.com/thumb-image.png","descr":"这是一个描述"}}}},"excerpt":"","more":"<ol>\n<li><p>try running: npm install xxx</p>\n<img src=\"/blog/2018/10/17/layui-template-error-collection/20181015155613.png\" title=\"try running: npm install xxx\">\n<blockquote>\n<p>错误提示<code>try running: npm install gulp</code>，表示未安装相关依赖，按照提示执行命令安装相关依赖。</p>\n</blockquote>\n</li>\n<li><p>layui.js:2 GET <a href=\"http://xxx/xx.xx\" target=\"_blank\" rel=\"noopener\">http://xxx/xx.xx</a> net::ERR_ABORTED 404 (Not Found)</p>\n<img src=\"/blog/2018/10/17/layui-template-error-collection/20181015164139.png\" title=\"layui.js:2 GET http://xxx/xx.xx net::ERR_ABORTED 404 (Not Found)\">\n<img src=\"/blog/2018/10/17/layui-template-error-collection/20181015164428.png\">\n<blockquote>\n<p>1.当页面显示异常或者自己觉得出错了，首先打开浏览器控制台 console（F12）查看有没有报错，然后根据报错去判断引发问题的每一个点。例如这个错误，按 F12 打开控制台,发现<code>console</code>报了两个错，一个是 js 的<code>404</code>错误，首先想一下在什么地方引入了<code>index1.js</code>这个文件，然后确定一下文件存不存在。打开<code>index.html</code>，可以看到引入了<code>index1</code>文件，然是左边文件夹里并没有这个文件，所以这个问题是由于文件名写错了。<br>2.有的人可能会发现图 1 的控制台报了两个错误，第一个可能知道是文件路径不对，但是第 2 个报错并不清楚是因为什么引起的。这里特别提醒找错误不要从下往上看，先解决第一个出现的错误，解决完刷新页面再看后面的错误，也不要纠结一定所有问题一次解决。这里我们把第一个问题解决之后，发现第二个问题是由于第一个问题引起的，解决了第一个问题第二个问题也没有再出现</p>\n</blockquote>\n</li>\n<li><p>打包编译事项注意</p>\n<blockquote>\n<p>发布的时候注意 config.js 的两个变量<code>isProduction:false，isDevelopment:false</code>，测试环境的时候只需把<code>isDevelopment</code>改为<code>true</code>，正式环境只需把<code>isProduction</code>改为<code>true</code>，本地开发的时候把两个都设置成<code>false</code>。</p>\n</blockquote>\n</li>\n</ol>\n<blockquote>\n<p>请求无法回数据或者返回失败，看看是不是未登录或者跨域问题。</p>\n</blockquote>\n"},{"title":"Use-Hacker-theme","date":"2018-10-17T02:45:19.000Z","_content":"\n# Hacker | [English Docs](/README.md)\n\n[![Open Source Love](https://badges.frapsoft.com/os/v1/open-source.svg?v=103)](https://github.com/ellerbrock/open-source-badge/) [![GPL Licence](https://badges.frapsoft.com/os/gpl/gpl.svg?v=103)](https://opensource.org/licenses/GPL-2.0)\n\n**Hacker 是一款专注于写作的简洁博客主题。在如此讲究复杂排版的趋势下，选择回归本源，专注于写作这件事。**\n\n一开始是[moyo](http://liuxinyu.me/)为 Wordpress 所创作的一个主题，由 DaraW 移植到 Hexo。\n\n## Demo\n\n参考我的博客：[DaraW](http://blog.daraw.cn/)\n\n![](https://ooo.0o0.ooo/2016/08/04/57a306f56bee2.png)\n\n## 安装\n\n获得主题文件， `git clone`或者`download zip`均可；\n\n在`themes`文件夹中创建文件夹`Hacker`，将主题文件都复制粘贴至`Hacker`文件夹；\n\n然后在 hexo 全局配置文件`_config.yml`中应用主题：\n\n```yaml\ntheme: Hacker\n```\n\n这样就安装好了，开始享受吧~\n\n**注意：版本更新后建议在 hexo 生成前执行一次`hexo clean`，清除以前的缓存，避免带来的一些莫名其妙的问题。**\n\n## 配置\n\n### 启用评论和谷歌分析\n\n在主题配置文件`_config.yml`中：\n\n```yaml\n# gitment\ngitment: false\ngitment_owner:\ngitment_repo:\ngitment_client_id:\ngitment_client_secret:\n\n# disqus comment\ndisqus: false\ndisqus_shortname:\n\n# google analytics\ngoogleTrackId:\n```\n\n`gitment`: `boolean`，是否开启 gitment 评论  \n`gitment_owner`: `string`，你的 GitHub ID  \n`gitment_repo`: `string`，存储评论的 repo  \n`gitment_client_id`: `string`，你的 client ID  \n`gitment_client_secret`: `string`，你的 client secret\n\n`disqus`: `boolean`，是否开启 disqus 评论；  \n`disqus_shortname`: `string`，你的 disqus site shortname。\n\n`googleTrackId`: `string`，为谷歌分析的个人 ID，留空则为不使用谷歌分析。\n\n### 启用分类和标签页面\n\n分类功能：执行`hexo new page categories`，然后修改生成的`source/categories/index.md`：\n\n```markdown\ntitle: categories\ndate: 2017-01-30 19:16:17\nlayout: \"categories\"\n\n---\n```\n\n如果你需要关闭该页的评论，可以添加一行`comments: false`；`title`对应的则是该页的标题。\n\n标签功能：同理，执行`hexo new page tags`，然后修改生成的`source/tags/index.md`：\n\n```markdown\ntitle: tags\ndate: 2017-01-30 19:16:17\nlayout: \"tags\"\n\n---\n```\n\n配置同分类功能。\n\n在菜单中添加链接：编辑主题的`_config.yml`，在`menu`中添加`Categories: /categories`和`Tags: /tags`，如下：\n\n```yml\nmenu:\n  Home: /\n  Archives: /archives\n  Categories: /categories\n  Tags: /tags\n```\n\n## 更新\n\n### v1.2.0\n\n- 增加`gitment`支持\n- 移除多说\n\n### v1.1.0\n\n- 增加对关闭文章评论的支持([issue#14](https://github.com/CodeDaraW/Hacker/issues/14))\n- 增加对分类和标签的支持([issue#7](https://github.com/CodeDaraW/Hacker/issues/7))\n\n### v1.0.1\n\n- 修复了主页上错误的评论链接\n\n### v1.0\n\n- 修复从文件夹导致的 bug([issue#10](https://github.com/CodeDaraW/Hacker/issues/10))\n- 修复`code`标签的显示效果\n\n### v0.3\n\n- 重构 ejs 模板\n- 改用 stylus\n- 添加英文文档\n\n### v0.2\n\n- 去除部分无用 css 和重复 css\n- 修复无分类/标签依然出现 icon 的 bug\n- 重写归档列表页面\n- 修改代码块样式\n\n## 协议\n\nGNU GPL(General Public License) v2.0\n","source":"_posts/use-Hacker-theme.md","raw":"---\ntitle: Use-Hacker-theme\ndate: 2018-10-17 10:45:19\ntags: [hexo-theme-Hacker]\n---\n\n# Hacker | [English Docs](/README.md)\n\n[![Open Source Love](https://badges.frapsoft.com/os/v1/open-source.svg?v=103)](https://github.com/ellerbrock/open-source-badge/) [![GPL Licence](https://badges.frapsoft.com/os/gpl/gpl.svg?v=103)](https://opensource.org/licenses/GPL-2.0)\n\n**Hacker 是一款专注于写作的简洁博客主题。在如此讲究复杂排版的趋势下，选择回归本源，专注于写作这件事。**\n\n一开始是[moyo](http://liuxinyu.me/)为 Wordpress 所创作的一个主题，由 DaraW 移植到 Hexo。\n\n## Demo\n\n参考我的博客：[DaraW](http://blog.daraw.cn/)\n\n![](https://ooo.0o0.ooo/2016/08/04/57a306f56bee2.png)\n\n## 安装\n\n获得主题文件， `git clone`或者`download zip`均可；\n\n在`themes`文件夹中创建文件夹`Hacker`，将主题文件都复制粘贴至`Hacker`文件夹；\n\n然后在 hexo 全局配置文件`_config.yml`中应用主题：\n\n```yaml\ntheme: Hacker\n```\n\n这样就安装好了，开始享受吧~\n\n**注意：版本更新后建议在 hexo 生成前执行一次`hexo clean`，清除以前的缓存，避免带来的一些莫名其妙的问题。**\n\n## 配置\n\n### 启用评论和谷歌分析\n\n在主题配置文件`_config.yml`中：\n\n```yaml\n# gitment\ngitment: false\ngitment_owner:\ngitment_repo:\ngitment_client_id:\ngitment_client_secret:\n\n# disqus comment\ndisqus: false\ndisqus_shortname:\n\n# google analytics\ngoogleTrackId:\n```\n\n`gitment`: `boolean`，是否开启 gitment 评论  \n`gitment_owner`: `string`，你的 GitHub ID  \n`gitment_repo`: `string`，存储评论的 repo  \n`gitment_client_id`: `string`，你的 client ID  \n`gitment_client_secret`: `string`，你的 client secret\n\n`disqus`: `boolean`，是否开启 disqus 评论；  \n`disqus_shortname`: `string`，你的 disqus site shortname。\n\n`googleTrackId`: `string`，为谷歌分析的个人 ID，留空则为不使用谷歌分析。\n\n### 启用分类和标签页面\n\n分类功能：执行`hexo new page categories`，然后修改生成的`source/categories/index.md`：\n\n```markdown\ntitle: categories\ndate: 2017-01-30 19:16:17\nlayout: \"categories\"\n\n---\n```\n\n如果你需要关闭该页的评论，可以添加一行`comments: false`；`title`对应的则是该页的标题。\n\n标签功能：同理，执行`hexo new page tags`，然后修改生成的`source/tags/index.md`：\n\n```markdown\ntitle: tags\ndate: 2017-01-30 19:16:17\nlayout: \"tags\"\n\n---\n```\n\n配置同分类功能。\n\n在菜单中添加链接：编辑主题的`_config.yml`，在`menu`中添加`Categories: /categories`和`Tags: /tags`，如下：\n\n```yml\nmenu:\n  Home: /\n  Archives: /archives\n  Categories: /categories\n  Tags: /tags\n```\n\n## 更新\n\n### v1.2.0\n\n- 增加`gitment`支持\n- 移除多说\n\n### v1.1.0\n\n- 增加对关闭文章评论的支持([issue#14](https://github.com/CodeDaraW/Hacker/issues/14))\n- 增加对分类和标签的支持([issue#7](https://github.com/CodeDaraW/Hacker/issues/7))\n\n### v1.0.1\n\n- 修复了主页上错误的评论链接\n\n### v1.0\n\n- 修复从文件夹导致的 bug([issue#10](https://github.com/CodeDaraW/Hacker/issues/10))\n- 修复`code`标签的显示效果\n\n### v0.3\n\n- 重构 ejs 模板\n- 改用 stylus\n- 添加英文文档\n\n### v0.2\n\n- 去除部分无用 css 和重复 css\n- 修复无分类/标签依然出现 icon 的 bug\n- 重写归档列表页面\n- 修改代码块样式\n\n## 协议\n\nGNU GPL(General Public License) v2.0\n","slug":"use-Hacker-theme","published":1,"updated":"2019-01-22T12:09:22.958Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjr8h8476000aegrq3dzdhwqn","content":"<h1 id=\"Hacker-English-Docs\"><a href=\"#Hacker-English-Docs\" class=\"headerlink\" title=\"Hacker | English Docs\"></a>Hacker | <a href=\"/README.md\">English Docs</a></h1><p><a href=\"https://github.com/ellerbrock/open-source-badge/\" target=\"_blank\" rel=\"noopener\"><img src=\"https://badges.frapsoft.com/os/v1/open-source.svg?v=103\" alt=\"Open Source Love\"></a> <a href=\"https://opensource.org/licenses/GPL-2.0\" target=\"_blank\" rel=\"noopener\"><img src=\"https://badges.frapsoft.com/os/gpl/gpl.svg?v=103\" alt=\"GPL Licence\"></a></p>\n<p><strong>Hacker 是一款专注于写作的简洁博客主题。在如此讲究复杂排版的趋势下，选择回归本源，专注于写作这件事。</strong></p>\n<p>一开始是<a href=\"http://liuxinyu.me/\" target=\"_blank\" rel=\"noopener\">moyo</a>为 Wordpress 所创作的一个主题，由 DaraW 移植到 Hexo。</p>\n<h2 id=\"Demo\"><a href=\"#Demo\" class=\"headerlink\" title=\"Demo\"></a>Demo</h2><p>参考我的博客：<a href=\"http://blog.daraw.cn/\" target=\"_blank\" rel=\"noopener\">DaraW</a></p>\n<p><img src=\"https://ooo.0o0.ooo/2016/08/04/57a306f56bee2.png\" alt=\"\"></p>\n<h2 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h2><p>获得主题文件， <code>git clone</code>或者<code>download zip</code>均可；</p>\n<p>在<code>themes</code>文件夹中创建文件夹<code>Hacker</code>，将主题文件都复制粘贴至<code>Hacker</code>文件夹；</p>\n<p>然后在 hexo 全局配置文件<code>_config.yml</code>中应用主题：</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">theme:</span> <span class=\"string\">Hacker</span></span><br></pre></td></tr></table></figure>\n<p>这样就安装好了，开始享受吧~</p>\n<p><strong>注意：版本更新后建议在 hexo 生成前执行一次<code>hexo clean</code>，清除以前的缓存，避免带来的一些莫名其妙的问题。</strong></p>\n<h2 id=\"配置\"><a href=\"#配置\" class=\"headerlink\" title=\"配置\"></a>配置</h2><h3 id=\"启用评论和谷歌分析\"><a href=\"#启用评论和谷歌分析\" class=\"headerlink\" title=\"启用评论和谷歌分析\"></a>启用评论和谷歌分析</h3><p>在主题配置文件<code>_config.yml</code>中：</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># gitment</span></span><br><span class=\"line\"><span class=\"attr\">gitment:</span> <span class=\"literal\">false</span></span><br><span class=\"line\"><span class=\"attr\">gitment_owner:</span></span><br><span class=\"line\"><span class=\"attr\">gitment_repo:</span></span><br><span class=\"line\"><span class=\"attr\">gitment_client_id:</span></span><br><span class=\"line\"><span class=\"attr\">gitment_client_secret:</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># disqus comment</span></span><br><span class=\"line\"><span class=\"attr\">disqus:</span> <span class=\"literal\">false</span></span><br><span class=\"line\"><span class=\"attr\">disqus_shortname:</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># google analytics</span></span><br><span class=\"line\"><span class=\"attr\">googleTrackId:</span></span><br></pre></td></tr></table></figure>\n<p><code>gitment</code>: <code>boolean</code>，是否开启 gitment 评论<br><code>gitment_owner</code>: <code>string</code>，你的 GitHub ID<br><code>gitment_repo</code>: <code>string</code>，存储评论的 repo<br><code>gitment_client_id</code>: <code>string</code>，你的 client ID<br><code>gitment_client_secret</code>: <code>string</code>，你的 client secret</p>\n<p><code>disqus</code>: <code>boolean</code>，是否开启 disqus 评论；<br><code>disqus_shortname</code>: <code>string</code>，你的 disqus site shortname。</p>\n<p><code>googleTrackId</code>: <code>string</code>，为谷歌分析的个人 ID，留空则为不使用谷歌分析。</p>\n<h3 id=\"启用分类和标签页面\"><a href=\"#启用分类和标签页面\" class=\"headerlink\" title=\"启用分类和标签页面\"></a>启用分类和标签页面</h3><p>分类功能：执行<code>hexo new page categories</code>，然后修改生成的<code>source/categories/index.md</code>：</p>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">title: categories</span><br><span class=\"line\">date: 2017-01-30 19:16:17</span><br><span class=\"line\">layout: \"categories\"</span><br><span class=\"line\"></span><br><span class=\"line\">---</span><br></pre></td></tr></table></figure>\n<p>如果你需要关闭该页的评论，可以添加一行<code>comments: false</code>；<code>title</code>对应的则是该页的标题。</p>\n<p>标签功能：同理，执行<code>hexo new page tags</code>，然后修改生成的<code>source/tags/index.md</code>：</p>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">title: tags</span><br><span class=\"line\">date: 2017-01-30 19:16:17</span><br><span class=\"line\">layout: \"tags\"</span><br><span class=\"line\"></span><br><span class=\"line\">---</span><br></pre></td></tr></table></figure>\n<p>配置同分类功能。</p>\n<p>在菜单中添加链接：编辑主题的<code>_config.yml</code>，在<code>menu</code>中添加<code>Categories: /categories</code>和<code>Tags: /tags</code>，如下：</p>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">menu:</span></span><br><span class=\"line\"><span class=\"attr\">  Home:</span> <span class=\"string\">/</span></span><br><span class=\"line\"><span class=\"attr\">  Archives:</span> <span class=\"string\">/archives</span></span><br><span class=\"line\"><span class=\"attr\">  Categories:</span> <span class=\"string\">/categories</span></span><br><span class=\"line\"><span class=\"attr\">  Tags:</span> <span class=\"string\">/tags</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"更新\"><a href=\"#更新\" class=\"headerlink\" title=\"更新\"></a>更新</h2><h3 id=\"v1-2-0\"><a href=\"#v1-2-0\" class=\"headerlink\" title=\"v1.2.0\"></a>v1.2.0</h3><ul>\n<li>增加<code>gitment</code>支持</li>\n<li>移除多说</li>\n</ul>\n<h3 id=\"v1-1-0\"><a href=\"#v1-1-0\" class=\"headerlink\" title=\"v1.1.0\"></a>v1.1.0</h3><ul>\n<li>增加对关闭文章评论的支持(<a href=\"https://github.com/CodeDaraW/Hacker/issues/14\" target=\"_blank\" rel=\"noopener\">issue#14</a>)</li>\n<li>增加对分类和标签的支持(<a href=\"https://github.com/CodeDaraW/Hacker/issues/7\" target=\"_blank\" rel=\"noopener\">issue#7</a>)</li>\n</ul>\n<h3 id=\"v1-0-1\"><a href=\"#v1-0-1\" class=\"headerlink\" title=\"v1.0.1\"></a>v1.0.1</h3><ul>\n<li>修复了主页上错误的评论链接</li>\n</ul>\n<h3 id=\"v1-0\"><a href=\"#v1-0\" class=\"headerlink\" title=\"v1.0\"></a>v1.0</h3><ul>\n<li>修复从文件夹导致的 bug(<a href=\"https://github.com/CodeDaraW/Hacker/issues/10\" target=\"_blank\" rel=\"noopener\">issue#10</a>)</li>\n<li>修复<code>code</code>标签的显示效果</li>\n</ul>\n<h3 id=\"v0-3\"><a href=\"#v0-3\" class=\"headerlink\" title=\"v0.3\"></a>v0.3</h3><ul>\n<li>重构 ejs 模板</li>\n<li>改用 stylus</li>\n<li>添加英文文档</li>\n</ul>\n<h3 id=\"v0-2\"><a href=\"#v0-2\" class=\"headerlink\" title=\"v0.2\"></a>v0.2</h3><ul>\n<li>去除部分无用 css 和重复 css</li>\n<li>修复无分类/标签依然出现 icon 的 bug</li>\n<li>重写归档列表页面</li>\n<li>修改代码块样式</li>\n</ul>\n<h2 id=\"协议\"><a href=\"#协议\" class=\"headerlink\" title=\"协议\"></a>协议</h2><p>GNU GPL(General Public License) v2.0</p>\n","site":{"data":{"links":{"创造狮":{"link":"http://chuangzaoshi.com/","avatar":"../images/favatar/chuangzaoshi-logo.png","desc":"为创意工作者而设计"},"腾讯设计导航":{"link":"http://idesign.qq.com/","avatar":"../images/favatar/idesign-logo.png","desc":"网罗全网高逼格的设计站点"}},"gallery":{"Name":{"full_link":"http://example.com/full-image.png","thumb_link":"http://example.com/thumb-image.png","descr":"这是一个描述"}}}},"excerpt":"","more":"<h1 id=\"Hacker-English-Docs\"><a href=\"#Hacker-English-Docs\" class=\"headerlink\" title=\"Hacker | English Docs\"></a>Hacker | <a href=\"/README.md\">English Docs</a></h1><p><a href=\"https://github.com/ellerbrock/open-source-badge/\" target=\"_blank\" rel=\"noopener\"><img src=\"https://badges.frapsoft.com/os/v1/open-source.svg?v=103\" alt=\"Open Source Love\"></a> <a href=\"https://opensource.org/licenses/GPL-2.0\" target=\"_blank\" rel=\"noopener\"><img src=\"https://badges.frapsoft.com/os/gpl/gpl.svg?v=103\" alt=\"GPL Licence\"></a></p>\n<p><strong>Hacker 是一款专注于写作的简洁博客主题。在如此讲究复杂排版的趋势下，选择回归本源，专注于写作这件事。</strong></p>\n<p>一开始是<a href=\"http://liuxinyu.me/\" target=\"_blank\" rel=\"noopener\">moyo</a>为 Wordpress 所创作的一个主题，由 DaraW 移植到 Hexo。</p>\n<h2 id=\"Demo\"><a href=\"#Demo\" class=\"headerlink\" title=\"Demo\"></a>Demo</h2><p>参考我的博客：<a href=\"http://blog.daraw.cn/\" target=\"_blank\" rel=\"noopener\">DaraW</a></p>\n<p><img src=\"https://ooo.0o0.ooo/2016/08/04/57a306f56bee2.png\" alt=\"\"></p>\n<h2 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h2><p>获得主题文件， <code>git clone</code>或者<code>download zip</code>均可；</p>\n<p>在<code>themes</code>文件夹中创建文件夹<code>Hacker</code>，将主题文件都复制粘贴至<code>Hacker</code>文件夹；</p>\n<p>然后在 hexo 全局配置文件<code>_config.yml</code>中应用主题：</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">theme:</span> <span class=\"string\">Hacker</span></span><br></pre></td></tr></table></figure>\n<p>这样就安装好了，开始享受吧~</p>\n<p><strong>注意：版本更新后建议在 hexo 生成前执行一次<code>hexo clean</code>，清除以前的缓存，避免带来的一些莫名其妙的问题。</strong></p>\n<h2 id=\"配置\"><a href=\"#配置\" class=\"headerlink\" title=\"配置\"></a>配置</h2><h3 id=\"启用评论和谷歌分析\"><a href=\"#启用评论和谷歌分析\" class=\"headerlink\" title=\"启用评论和谷歌分析\"></a>启用评论和谷歌分析</h3><p>在主题配置文件<code>_config.yml</code>中：</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># gitment</span></span><br><span class=\"line\"><span class=\"attr\">gitment:</span> <span class=\"literal\">false</span></span><br><span class=\"line\"><span class=\"attr\">gitment_owner:</span></span><br><span class=\"line\"><span class=\"attr\">gitment_repo:</span></span><br><span class=\"line\"><span class=\"attr\">gitment_client_id:</span></span><br><span class=\"line\"><span class=\"attr\">gitment_client_secret:</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># disqus comment</span></span><br><span class=\"line\"><span class=\"attr\">disqus:</span> <span class=\"literal\">false</span></span><br><span class=\"line\"><span class=\"attr\">disqus_shortname:</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># google analytics</span></span><br><span class=\"line\"><span class=\"attr\">googleTrackId:</span></span><br></pre></td></tr></table></figure>\n<p><code>gitment</code>: <code>boolean</code>，是否开启 gitment 评论<br><code>gitment_owner</code>: <code>string</code>，你的 GitHub ID<br><code>gitment_repo</code>: <code>string</code>，存储评论的 repo<br><code>gitment_client_id</code>: <code>string</code>，你的 client ID<br><code>gitment_client_secret</code>: <code>string</code>，你的 client secret</p>\n<p><code>disqus</code>: <code>boolean</code>，是否开启 disqus 评论；<br><code>disqus_shortname</code>: <code>string</code>，你的 disqus site shortname。</p>\n<p><code>googleTrackId</code>: <code>string</code>，为谷歌分析的个人 ID，留空则为不使用谷歌分析。</p>\n<h3 id=\"启用分类和标签页面\"><a href=\"#启用分类和标签页面\" class=\"headerlink\" title=\"启用分类和标签页面\"></a>启用分类和标签页面</h3><p>分类功能：执行<code>hexo new page categories</code>，然后修改生成的<code>source/categories/index.md</code>：</p>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">title: categories</span><br><span class=\"line\">date: 2017-01-30 19:16:17</span><br><span class=\"line\">layout: \"categories\"</span><br><span class=\"line\"></span><br><span class=\"line\">---</span><br></pre></td></tr></table></figure>\n<p>如果你需要关闭该页的评论，可以添加一行<code>comments: false</code>；<code>title</code>对应的则是该页的标题。</p>\n<p>标签功能：同理，执行<code>hexo new page tags</code>，然后修改生成的<code>source/tags/index.md</code>：</p>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">title: tags</span><br><span class=\"line\">date: 2017-01-30 19:16:17</span><br><span class=\"line\">layout: \"tags\"</span><br><span class=\"line\"></span><br><span class=\"line\">---</span><br></pre></td></tr></table></figure>\n<p>配置同分类功能。</p>\n<p>在菜单中添加链接：编辑主题的<code>_config.yml</code>，在<code>menu</code>中添加<code>Categories: /categories</code>和<code>Tags: /tags</code>，如下：</p>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">menu:</span></span><br><span class=\"line\"><span class=\"attr\">  Home:</span> <span class=\"string\">/</span></span><br><span class=\"line\"><span class=\"attr\">  Archives:</span> <span class=\"string\">/archives</span></span><br><span class=\"line\"><span class=\"attr\">  Categories:</span> <span class=\"string\">/categories</span></span><br><span class=\"line\"><span class=\"attr\">  Tags:</span> <span class=\"string\">/tags</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"更新\"><a href=\"#更新\" class=\"headerlink\" title=\"更新\"></a>更新</h2><h3 id=\"v1-2-0\"><a href=\"#v1-2-0\" class=\"headerlink\" title=\"v1.2.0\"></a>v1.2.0</h3><ul>\n<li>增加<code>gitment</code>支持</li>\n<li>移除多说</li>\n</ul>\n<h3 id=\"v1-1-0\"><a href=\"#v1-1-0\" class=\"headerlink\" title=\"v1.1.0\"></a>v1.1.0</h3><ul>\n<li>增加对关闭文章评论的支持(<a href=\"https://github.com/CodeDaraW/Hacker/issues/14\" target=\"_blank\" rel=\"noopener\">issue#14</a>)</li>\n<li>增加对分类和标签的支持(<a href=\"https://github.com/CodeDaraW/Hacker/issues/7\" target=\"_blank\" rel=\"noopener\">issue#7</a>)</li>\n</ul>\n<h3 id=\"v1-0-1\"><a href=\"#v1-0-1\" class=\"headerlink\" title=\"v1.0.1\"></a>v1.0.1</h3><ul>\n<li>修复了主页上错误的评论链接</li>\n</ul>\n<h3 id=\"v1-0\"><a href=\"#v1-0\" class=\"headerlink\" title=\"v1.0\"></a>v1.0</h3><ul>\n<li>修复从文件夹导致的 bug(<a href=\"https://github.com/CodeDaraW/Hacker/issues/10\" target=\"_blank\" rel=\"noopener\">issue#10</a>)</li>\n<li>修复<code>code</code>标签的显示效果</li>\n</ul>\n<h3 id=\"v0-3\"><a href=\"#v0-3\" class=\"headerlink\" title=\"v0.3\"></a>v0.3</h3><ul>\n<li>重构 ejs 模板</li>\n<li>改用 stylus</li>\n<li>添加英文文档</li>\n</ul>\n<h3 id=\"v0-2\"><a href=\"#v0-2\" class=\"headerlink\" title=\"v0.2\"></a>v0.2</h3><ul>\n<li>去除部分无用 css 和重复 css</li>\n<li>修复无分类/标签依然出现 icon 的 bug</li>\n<li>重写归档列表页面</li>\n<li>修改代码块样式</li>\n</ul>\n<h2 id=\"协议\"><a href=\"#协议\" class=\"headerlink\" title=\"协议\"></a>协议</h2><p>GNU GPL(General Public License) v2.0</p>\n"},{"title":"vue-cli使用build命令编译css顺序错乱问题","date":"2018-10-26T09:37:24.000Z","_content":"\n最近用 vue-cli 做一个项目引入了 bootstrap 的 css 本来是想组件内的 css 覆盖掉 bootstrap 的 css，但是打包了之后 bootstrpa 的 css 样式被打包到我所写样式的后面，原因是因为在 main.css 引入 bootstrap 顺序的原因\n\n## 解决办法\n\n{% asset_img 20181026174132.png %}\n","source":"_posts/vue-cli-load-css-confusion.md","raw":"---\ntitle: vue-cli使用build命令编译css顺序错乱问题\ndate: 2018-10-26 17:37:24\ntags:\n---\n\n最近用 vue-cli 做一个项目引入了 bootstrap 的 css 本来是想组件内的 css 覆盖掉 bootstrap 的 css，但是打包了之后 bootstrpa 的 css 样式被打包到我所写样式的后面，原因是因为在 main.css 引入 bootstrap 顺序的原因\n\n## 解决办法\n\n{% asset_img 20181026174132.png %}\n","slug":"vue-cli-load-css-confusion","published":1,"updated":"2019-01-22T12:09:22.959Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjr8h8479000begrq3o43k1qn","content":"<p>最近用 vue-cli 做一个项目引入了 bootstrap 的 css 本来是想组件内的 css 覆盖掉 bootstrap 的 css，但是打包了之后 bootstrpa 的 css 样式被打包到我所写样式的后面，原因是因为在 main.css 引入 bootstrap 顺序的原因</p>\n<h2 id=\"解决办法\"><a href=\"#解决办法\" class=\"headerlink\" title=\"解决办法\"></a>解决办法</h2><img src=\"/blog/2018/10/26/vue-cli-load-css-confusion/20181026174132.png\">\n","site":{"data":{"links":{"创造狮":{"link":"http://chuangzaoshi.com/","avatar":"../images/favatar/chuangzaoshi-logo.png","desc":"为创意工作者而设计"},"腾讯设计导航":{"link":"http://idesign.qq.com/","avatar":"../images/favatar/idesign-logo.png","desc":"网罗全网高逼格的设计站点"}},"gallery":{"Name":{"full_link":"http://example.com/full-image.png","thumb_link":"http://example.com/thumb-image.png","descr":"这是一个描述"}}}},"excerpt":"","more":"<p>最近用 vue-cli 做一个项目引入了 bootstrap 的 css 本来是想组件内的 css 覆盖掉 bootstrap 的 css，但是打包了之后 bootstrpa 的 css 样式被打包到我所写样式的后面，原因是因为在 main.css 引入 bootstrap 顺序的原因</p>\n<h2 id=\"解决办法\"><a href=\"#解决办法\" class=\"headerlink\" title=\"解决办法\"></a>解决办法</h2><img src=\"/blog/2018/10/26/vue-cli-load-css-confusion/20181026174132.png\">\n"},{"title":"Vue项目常见错误及解决方式","date":"2018-10-17T03:47:43.000Z","_content":"\n1. 安装超时(install timeout)\n\n- cnpm : 国内对 npm 的镜像版本\n\n```bash\nnpm install -g cnpm --registry=https://registry.npm.taobao.org\n// cnpm 的大多命令跟 npm 的是一致的,比如安装,卸载这些复制代码\n```\n\n- yarn 和 npm 改源\n\n```javascript\n使用 nrm 模块 : www.npmjs.com/package/nrm\nnpm config : npm config set registry https://registry.npm.taobao.org\nyarn config : yarn config set registry https://registry.npm.taobao.org\n```\n\n---\n\n2. can't not find 'xxModule' - 找不到某些依赖或者模块\n   > 这种情况一般报错信息可以看到是哪个包抛出的信息.\n   > 一般卸载这个模块,安装重新安装下即可.\n\n---\n\n3. data functions should return an object\n   > 这个问题是 Vue 实例内,单组件的 data 必须返回一个对象;如下\n\n```javascript\nexport default {\n  name: 'page-router-view',\n  data() {\n    return {\n      tabs: [\n        {\n          title: '帐号信息',\n          url: '/userinfo/base'\n        }\n      ]\n    }\n  }\n}\n```\n\n> 为什么要 return 一个数据对象呢?\n> 官方解释如下: data 必须声明为返回一个初始数据对象的函数，因为组件可能被用来创建多个实例。如果 data 仍然是一个纯粹的对象，则所有的实例将共享引用同一个数据对象！\n> 简言之,组件复用下,不会造成数据同时指向一处,造出牵一发而动全身的问题\n\n4. 在函数内用了 this.xxx=,为什么抛出 Cannot set property 'xxx' of undefined;\n   > 这又是 this 的套路了..this 是和当前运行的上下文绑定的...\n   > 一般你在 axios 或者其他 promise , 或者 setInterval 这些默认都是指向最外层的全局钩子.\n   > 简单点说:\"最外层的上下文就是 window,vue 内则是 Vue 对象而不是实例!\";\n   > 解决方案:\n\n> 暂存法: 函数内先缓存 this , let that = this;(let 是 es6, es5 用 var)\n> 箭头函数: 会强行关联当前运行区域为 this 的上下文;\n\n5. Component template shold contain exactly one root element.If you are useing v-if on multiple elements , xxxxx\n\n   > 单组件渲染 DOM 区域必须要有一个根元素,不能出现同级元素.可以用 v-if 和 v-else-if 指令来控制其他元素达到并存的状态\n   > 换个直白的解释,就是有一个唯一的父类,包裹者;\n   > 比如一个 div(父包含块) 内部多少个同级或者嵌套都行,但是最外层元素不能出现同级元素!!!!\n\n6. No 'Access-Control-Allow-Origin' header is present on the requested resource.\n\n- nginx 反向代理\n- webpack proxy 配置(开发环境下)\n\n```javascript\n// 在 config 目录下的index.js\n\nproxyTable: {\n \"/bp-api\": {\n   target: \"http://new.d.st.cn\",\n   changeOrigin: true,\n   // pathRewrite: {\n   //   \"^/bp-api\": \"/\"\n   // }\n }\n}\n```\n\n- 修改本地 host 文件 改成相同的二级域名例如 `xxx.hwagain.com`\n- 后台设置可跨域\n- jsonp，不过局限性比较多,比较适合一些特殊的信息获取!\n\n7. Error in render function:\"Type Error: Cannot read property 'xxx' of undefined\"\n\n8. Uncaught ReferenceError: xxx is not define\n\n9. TypeError: xxx is not a function\n\n10. 安装模块时命令窗口输出 unsupported platform xxx\n\n    > 一般两种情况,node 版本不兼容,系统不兼容;\n\n11. Failed to mount component: template or render function not defined\n\n- 组件没有正确引入(或组件文件内容为空)\n- 挂载点顺序错了\n\n12. Unknown custom element: `<xxx>` - did you register the component correctly?\n\n    > 组件未导入对应的组件或者组件引入了但是未在 components 声明注册\n\n13. axios 的 post 请求后台接受不到\n\n    > axios 默认是 json 格式提交,确认后台是否做了对应的支持;\n    > 若是只能接受传统的表单序列化,就需要自己写一个转义的方法.当然还有一个更加省事的方案,引入`qs`，使用`qs.stringify(params)`转义参数\n\n14. Module not found: Error : Can't resolve xxx-loader in xxxx\n\n    > 这里问题一般就是 webpack 的配置文件你改动了或对应的 loader 没有装上\n\n15. npm run dev 报端口错误!Error: listen EADDRINUSE :::8080\n\n    > 端口被占用，在 config/index.js 修改开发环境下的端口号\n    > {% asset_img ./images/20181016105228.png %}\n\n16. 什么时候用 v-if,什么用 v-show\n\n    > 我们先来说说两者的核心差异;  \n    > v-if : DOM 区域没有生成,没有插入文档..等条件成立的时候才动态插入到页面!\n    > 有些需要遍历的数组对象或者值,最好用这货控制,等到拿到值才处理遍历,不然一些操作过快的情况会报错,比如数据还没请求到!  \n    > v-show: DOM 区域在组件渲染的时候同时渲染了,只是单纯用 css 隐藏了\n    > 对于下拉菜单,折叠菜单这些数据基本不怎么变动.用这个最合适了..而且可以改善用户体验,因为它不会导致页面的重绘,DOM 操作会!  \n    > 简言之: DOM 结构不怎么变化的用 v-show, 数据需要改动很大或者布局改动的用 v-if\n\n17. 单组件中里面的 import xxx from '@/components/layout/xxx'中的@是什么\n    > webpack 可以配置 alias(也就是路径别名),\n    > 文件名: `build -> webpack.base.conf.js`\n\n```javascript\nresolve: {\n    extensions: [\".js\", \".vue\", \".json\"], // 可以导入的时候忽略的拓展名范围\n    alias: {\n      vue$: \"vue/dist/vue.esm.js\",\n      \"@\": resolve(\"src\"),  // 这里就是别名了,比如@就代表直接从/src 下开始找起!!!\n      \"~\": resolve(\"src/components\")\n    }\n  }\n```\n\n18. SyntaxError: Unexpected identifier;\n    > 语法错误,看错误信息去找到对应的页面排查\n","source":"_posts/vue-template-error-collection.md","raw":"---\ntitle: Vue项目常见错误及解决方式\ndate: 2018-10-17 11:47:43\ntags: [vue, error, npm, webpack]\n---\n\n1. 安装超时(install timeout)\n\n- cnpm : 国内对 npm 的镜像版本\n\n```bash\nnpm install -g cnpm --registry=https://registry.npm.taobao.org\n// cnpm 的大多命令跟 npm 的是一致的,比如安装,卸载这些复制代码\n```\n\n- yarn 和 npm 改源\n\n```javascript\n使用 nrm 模块 : www.npmjs.com/package/nrm\nnpm config : npm config set registry https://registry.npm.taobao.org\nyarn config : yarn config set registry https://registry.npm.taobao.org\n```\n\n---\n\n2. can't not find 'xxModule' - 找不到某些依赖或者模块\n   > 这种情况一般报错信息可以看到是哪个包抛出的信息.\n   > 一般卸载这个模块,安装重新安装下即可.\n\n---\n\n3. data functions should return an object\n   > 这个问题是 Vue 实例内,单组件的 data 必须返回一个对象;如下\n\n```javascript\nexport default {\n  name: 'page-router-view',\n  data() {\n    return {\n      tabs: [\n        {\n          title: '帐号信息',\n          url: '/userinfo/base'\n        }\n      ]\n    }\n  }\n}\n```\n\n> 为什么要 return 一个数据对象呢?\n> 官方解释如下: data 必须声明为返回一个初始数据对象的函数，因为组件可能被用来创建多个实例。如果 data 仍然是一个纯粹的对象，则所有的实例将共享引用同一个数据对象！\n> 简言之,组件复用下,不会造成数据同时指向一处,造出牵一发而动全身的问题\n\n4. 在函数内用了 this.xxx=,为什么抛出 Cannot set property 'xxx' of undefined;\n   > 这又是 this 的套路了..this 是和当前运行的上下文绑定的...\n   > 一般你在 axios 或者其他 promise , 或者 setInterval 这些默认都是指向最外层的全局钩子.\n   > 简单点说:\"最外层的上下文就是 window,vue 内则是 Vue 对象而不是实例!\";\n   > 解决方案:\n\n> 暂存法: 函数内先缓存 this , let that = this;(let 是 es6, es5 用 var)\n> 箭头函数: 会强行关联当前运行区域为 this 的上下文;\n\n5. Component template shold contain exactly one root element.If you are useing v-if on multiple elements , xxxxx\n\n   > 单组件渲染 DOM 区域必须要有一个根元素,不能出现同级元素.可以用 v-if 和 v-else-if 指令来控制其他元素达到并存的状态\n   > 换个直白的解释,就是有一个唯一的父类,包裹者;\n   > 比如一个 div(父包含块) 内部多少个同级或者嵌套都行,但是最外层元素不能出现同级元素!!!!\n\n6. No 'Access-Control-Allow-Origin' header is present on the requested resource.\n\n- nginx 反向代理\n- webpack proxy 配置(开发环境下)\n\n```javascript\n// 在 config 目录下的index.js\n\nproxyTable: {\n \"/bp-api\": {\n   target: \"http://new.d.st.cn\",\n   changeOrigin: true,\n   // pathRewrite: {\n   //   \"^/bp-api\": \"/\"\n   // }\n }\n}\n```\n\n- 修改本地 host 文件 改成相同的二级域名例如 `xxx.hwagain.com`\n- 后台设置可跨域\n- jsonp，不过局限性比较多,比较适合一些特殊的信息获取!\n\n7. Error in render function:\"Type Error: Cannot read property 'xxx' of undefined\"\n\n8. Uncaught ReferenceError: xxx is not define\n\n9. TypeError: xxx is not a function\n\n10. 安装模块时命令窗口输出 unsupported platform xxx\n\n    > 一般两种情况,node 版本不兼容,系统不兼容;\n\n11. Failed to mount component: template or render function not defined\n\n- 组件没有正确引入(或组件文件内容为空)\n- 挂载点顺序错了\n\n12. Unknown custom element: `<xxx>` - did you register the component correctly?\n\n    > 组件未导入对应的组件或者组件引入了但是未在 components 声明注册\n\n13. axios 的 post 请求后台接受不到\n\n    > axios 默认是 json 格式提交,确认后台是否做了对应的支持;\n    > 若是只能接受传统的表单序列化,就需要自己写一个转义的方法.当然还有一个更加省事的方案,引入`qs`，使用`qs.stringify(params)`转义参数\n\n14. Module not found: Error : Can't resolve xxx-loader in xxxx\n\n    > 这里问题一般就是 webpack 的配置文件你改动了或对应的 loader 没有装上\n\n15. npm run dev 报端口错误!Error: listen EADDRINUSE :::8080\n\n    > 端口被占用，在 config/index.js 修改开发环境下的端口号\n    > {% asset_img ./images/20181016105228.png %}\n\n16. 什么时候用 v-if,什么用 v-show\n\n    > 我们先来说说两者的核心差异;  \n    > v-if : DOM 区域没有生成,没有插入文档..等条件成立的时候才动态插入到页面!\n    > 有些需要遍历的数组对象或者值,最好用这货控制,等到拿到值才处理遍历,不然一些操作过快的情况会报错,比如数据还没请求到!  \n    > v-show: DOM 区域在组件渲染的时候同时渲染了,只是单纯用 css 隐藏了\n    > 对于下拉菜单,折叠菜单这些数据基本不怎么变动.用这个最合适了..而且可以改善用户体验,因为它不会导致页面的重绘,DOM 操作会!  \n    > 简言之: DOM 结构不怎么变化的用 v-show, 数据需要改动很大或者布局改动的用 v-if\n\n17. 单组件中里面的 import xxx from '@/components/layout/xxx'中的@是什么\n    > webpack 可以配置 alias(也就是路径别名),\n    > 文件名: `build -> webpack.base.conf.js`\n\n```javascript\nresolve: {\n    extensions: [\".js\", \".vue\", \".json\"], // 可以导入的时候忽略的拓展名范围\n    alias: {\n      vue$: \"vue/dist/vue.esm.js\",\n      \"@\": resolve(\"src\"),  // 这里就是别名了,比如@就代表直接从/src 下开始找起!!!\n      \"~\": resolve(\"src/components\")\n    }\n  }\n```\n\n18. SyntaxError: Unexpected identifier;\n    > 语法错误,看错误信息去找到对应的页面排查\n","slug":"vue-template-error-collection","published":1,"updated":"2019-01-22T12:09:22.960Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjr8h847b000degrqgr8vco7b","content":"<ol>\n<li>安装超时(install timeout)</li>\n</ol>\n<ul>\n<li>cnpm : 国内对 npm 的镜像版本</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install -g cnpm --registry=https://registry.npm.taobao.org</span><br><span class=\"line\">// cnpm 的大多命令跟 npm 的是一致的,比如安装,卸载这些复制代码</span><br></pre></td></tr></table></figure>\n<ul>\n<li>yarn 和 npm 改源</li>\n</ul>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">使用 nrm 模块 : www.npmjs.com/package/nrm</span><br><span class=\"line\">npm config : npm config set registry https:<span class=\"comment\">//registry.npm.taobao.org</span></span><br><span class=\"line\">yarn config : yarn config set registry https:<span class=\"comment\">//registry.npm.taobao.org</span></span><br></pre></td></tr></table></figure>\n<hr>\n<ol start=\"2\">\n<li>can’t not find ‘xxModule’ - 找不到某些依赖或者模块<blockquote>\n<p>这种情况一般报错信息可以看到是哪个包抛出的信息.<br>一般卸载这个模块,安装重新安装下即可.</p>\n</blockquote>\n</li>\n</ol>\n<hr>\n<ol start=\"3\">\n<li>data functions should return an object<blockquote>\n<p>这个问题是 Vue 实例内,单组件的 data 必须返回一个对象;如下</p>\n</blockquote>\n</li>\n</ol>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> &#123;</span><br><span class=\"line\">  name: <span class=\"string\">'page-router-view'</span>,</span><br><span class=\"line\">  data() &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">      tabs: [</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">          title: <span class=\"string\">'帐号信息'</span>,</span><br><span class=\"line\">          url: <span class=\"string\">'/userinfo/base'</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      ]</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>为什么要 return 一个数据对象呢?<br>官方解释如下: data 必须声明为返回一个初始数据对象的函数，因为组件可能被用来创建多个实例。如果 data 仍然是一个纯粹的对象，则所有的实例将共享引用同一个数据对象！<br>简言之,组件复用下,不会造成数据同时指向一处,造出牵一发而动全身的问题</p>\n</blockquote>\n<ol start=\"4\">\n<li>在函数内用了 this.xxx=,为什么抛出 Cannot set property ‘xxx’ of undefined;<blockquote>\n<p>这又是 this 的套路了..this 是和当前运行的上下文绑定的…<br>一般你在 axios 或者其他 promise , 或者 setInterval 这些默认都是指向最外层的全局钩子.<br>简单点说:”最外层的上下文就是 window,vue 内则是 Vue 对象而不是实例!”;<br>解决方案:</p>\n</blockquote>\n</li>\n</ol>\n<blockquote>\n<p>暂存法: 函数内先缓存 this , let that = this;(let 是 es6, es5 用 var)<br>箭头函数: 会强行关联当前运行区域为 this 的上下文;</p>\n</blockquote>\n<ol start=\"5\">\n<li><p>Component template shold contain exactly one root element.If you are useing v-if on multiple elements , xxxxx</p>\n<blockquote>\n<p>单组件渲染 DOM 区域必须要有一个根元素,不能出现同级元素.可以用 v-if 和 v-else-if 指令来控制其他元素达到并存的状态<br>换个直白的解释,就是有一个唯一的父类,包裹者;<br>比如一个 div(父包含块) 内部多少个同级或者嵌套都行,但是最外层元素不能出现同级元素!!!!</p>\n</blockquote>\n</li>\n<li><p>No ‘Access-Control-Allow-Origin’ header is present on the requested resource.</p>\n</li>\n</ol>\n<ul>\n<li>nginx 反向代理</li>\n<li>webpack proxy 配置(开发环境下)</li>\n</ul>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 在 config 目录下的index.js</span></span><br><span class=\"line\"></span><br><span class=\"line\">proxyTable: &#123;</span><br><span class=\"line\"> <span class=\"string\">\"/bp-api\"</span>: &#123;</span><br><span class=\"line\">   target: <span class=\"string\">\"http://new.d.st.cn\"</span>,</span><br><span class=\"line\">   changeOrigin: <span class=\"literal\">true</span>,</span><br><span class=\"line\">   <span class=\"comment\">// pathRewrite: &#123;</span></span><br><span class=\"line\">   <span class=\"comment\">//   \"^/bp-api\": \"/\"</span></span><br><span class=\"line\">   <span class=\"comment\">// &#125;</span></span><br><span class=\"line\"> &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>修改本地 host 文件 改成相同的二级域名例如 <code>xxx.hwagain.com</code></li>\n<li>后台设置可跨域</li>\n<li>jsonp，不过局限性比较多,比较适合一些特殊的信息获取!</li>\n</ul>\n<ol start=\"7\">\n<li><p>Error in render function:”Type Error: Cannot read property ‘xxx’ of undefined”</p>\n</li>\n<li><p>Uncaught ReferenceError: xxx is not define</p>\n</li>\n<li><p>TypeError: xxx is not a function</p>\n</li>\n<li><p>安装模块时命令窗口输出 unsupported platform xxx</p>\n<blockquote>\n<p>一般两种情况,node 版本不兼容,系统不兼容;</p>\n</blockquote>\n</li>\n<li><p>Failed to mount component: template or render function not defined</p>\n</li>\n</ol>\n<ul>\n<li>组件没有正确引入(或组件文件内容为空)</li>\n<li>挂载点顺序错了</li>\n</ul>\n<ol start=\"12\">\n<li><p>Unknown custom element: <code>&lt;xxx&gt;</code> - did you register the component correctly?</p>\n<blockquote>\n<p>组件未导入对应的组件或者组件引入了但是未在 components 声明注册</p>\n</blockquote>\n</li>\n<li><p>axios 的 post 请求后台接受不到</p>\n<blockquote>\n<p>axios 默认是 json 格式提交,确认后台是否做了对应的支持;<br>若是只能接受传统的表单序列化,就需要自己写一个转义的方法.当然还有一个更加省事的方案,引入<code>qs</code>，使用<code>qs.stringify(params)</code>转义参数</p>\n</blockquote>\n</li>\n<li><p>Module not found: Error : Can’t resolve xxx-loader in xxxx</p>\n<blockquote>\n<p>这里问题一般就是 webpack 的配置文件你改动了或对应的 loader 没有装上</p>\n</blockquote>\n</li>\n<li><p>npm run dev 报端口错误!Error: listen EADDRINUSE :::8080</p>\n<blockquote>\n<p>端口被占用，在 config/index.js 修改开发环境下的端口号</p>\n\n</blockquote>\n</li>\n<li><p>什么时候用 v-if,什么用 v-show</p>\n<blockquote>\n<p>我们先来说说两者的核心差异;<br>v-if : DOM 区域没有生成,没有插入文档..等条件成立的时候才动态插入到页面!<br>有些需要遍历的数组对象或者值,最好用这货控制,等到拿到值才处理遍历,不然一些操作过快的情况会报错,比如数据还没请求到!<br>v-show: DOM 区域在组件渲染的时候同时渲染了,只是单纯用 css 隐藏了<br>对于下拉菜单,折叠菜单这些数据基本不怎么变动.用这个最合适了..而且可以改善用户体验,因为它不会导致页面的重绘,DOM 操作会!<br>简言之: DOM 结构不怎么变化的用 v-show, 数据需要改动很大或者布局改动的用 v-if</p>\n</blockquote>\n</li>\n<li><p>单组件中里面的 import xxx from ‘@/components/layout/xxx’中的@是什么</p>\n<blockquote>\n<p>webpack 可以配置 alias(也就是路径别名),<br>文件名: <code>build -&gt; webpack.base.conf.js</code></p>\n</blockquote>\n</li>\n</ol>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">resolve: &#123;</span><br><span class=\"line\">    extensions: [<span class=\"string\">\".js\"</span>, <span class=\"string\">\".vue\"</span>, <span class=\"string\">\".json\"</span>], <span class=\"comment\">// 可以导入的时候忽略的拓展名范围</span></span><br><span class=\"line\">    alias: &#123;</span><br><span class=\"line\">      vue$: <span class=\"string\">\"vue/dist/vue.esm.js\"</span>,</span><br><span class=\"line\">      <span class=\"string\">\"@\"</span>: resolve(<span class=\"string\">\"src\"</span>),  <span class=\"comment\">// 这里就是别名了,比如@就代表直接从/src 下开始找起!!!</span></span><br><span class=\"line\">      <span class=\"string\">\"~\"</span>: resolve(<span class=\"string\">\"src/components\"</span>)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br></pre></td></tr></table></figure>\n<ol start=\"18\">\n<li>SyntaxError: Unexpected identifier;<blockquote>\n<p>语法错误,看错误信息去找到对应的页面排查</p>\n</blockquote>\n</li>\n</ol>\n","site":{"data":{"links":{"创造狮":{"link":"http://chuangzaoshi.com/","avatar":"../images/favatar/chuangzaoshi-logo.png","desc":"为创意工作者而设计"},"腾讯设计导航":{"link":"http://idesign.qq.com/","avatar":"../images/favatar/idesign-logo.png","desc":"网罗全网高逼格的设计站点"}},"gallery":{"Name":{"full_link":"http://example.com/full-image.png","thumb_link":"http://example.com/thumb-image.png","descr":"这是一个描述"}}}},"excerpt":"","more":"<ol>\n<li>安装超时(install timeout)</li>\n</ol>\n<ul>\n<li>cnpm : 国内对 npm 的镜像版本</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install -g cnpm --registry=https://registry.npm.taobao.org</span><br><span class=\"line\">// cnpm 的大多命令跟 npm 的是一致的,比如安装,卸载这些复制代码</span><br></pre></td></tr></table></figure>\n<ul>\n<li>yarn 和 npm 改源</li>\n</ul>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">使用 nrm 模块 : www.npmjs.com/package/nrm</span><br><span class=\"line\">npm config : npm config set registry https:<span class=\"comment\">//registry.npm.taobao.org</span></span><br><span class=\"line\">yarn config : yarn config set registry https:<span class=\"comment\">//registry.npm.taobao.org</span></span><br></pre></td></tr></table></figure>\n<hr>\n<ol start=\"2\">\n<li>can’t not find ‘xxModule’ - 找不到某些依赖或者模块<blockquote>\n<p>这种情况一般报错信息可以看到是哪个包抛出的信息.<br>一般卸载这个模块,安装重新安装下即可.</p>\n</blockquote>\n</li>\n</ol>\n<hr>\n<ol start=\"3\">\n<li>data functions should return an object<blockquote>\n<p>这个问题是 Vue 实例内,单组件的 data 必须返回一个对象;如下</p>\n</blockquote>\n</li>\n</ol>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> &#123;</span><br><span class=\"line\">  name: <span class=\"string\">'page-router-view'</span>,</span><br><span class=\"line\">  data() &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">      tabs: [</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">          title: <span class=\"string\">'帐号信息'</span>,</span><br><span class=\"line\">          url: <span class=\"string\">'/userinfo/base'</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      ]</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>为什么要 return 一个数据对象呢?<br>官方解释如下: data 必须声明为返回一个初始数据对象的函数，因为组件可能被用来创建多个实例。如果 data 仍然是一个纯粹的对象，则所有的实例将共享引用同一个数据对象！<br>简言之,组件复用下,不会造成数据同时指向一处,造出牵一发而动全身的问题</p>\n</blockquote>\n<ol start=\"4\">\n<li>在函数内用了 this.xxx=,为什么抛出 Cannot set property ‘xxx’ of undefined;<blockquote>\n<p>这又是 this 的套路了..this 是和当前运行的上下文绑定的…<br>一般你在 axios 或者其他 promise , 或者 setInterval 这些默认都是指向最外层的全局钩子.<br>简单点说:”最外层的上下文就是 window,vue 内则是 Vue 对象而不是实例!”;<br>解决方案:</p>\n</blockquote>\n</li>\n</ol>\n<blockquote>\n<p>暂存法: 函数内先缓存 this , let that = this;(let 是 es6, es5 用 var)<br>箭头函数: 会强行关联当前运行区域为 this 的上下文;</p>\n</blockquote>\n<ol start=\"5\">\n<li><p>Component template shold contain exactly one root element.If you are useing v-if on multiple elements , xxxxx</p>\n<blockquote>\n<p>单组件渲染 DOM 区域必须要有一个根元素,不能出现同级元素.可以用 v-if 和 v-else-if 指令来控制其他元素达到并存的状态<br>换个直白的解释,就是有一个唯一的父类,包裹者;<br>比如一个 div(父包含块) 内部多少个同级或者嵌套都行,但是最外层元素不能出现同级元素!!!!</p>\n</blockquote>\n</li>\n<li><p>No ‘Access-Control-Allow-Origin’ header is present on the requested resource.</p>\n</li>\n</ol>\n<ul>\n<li>nginx 反向代理</li>\n<li>webpack proxy 配置(开发环境下)</li>\n</ul>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 在 config 目录下的index.js</span></span><br><span class=\"line\"></span><br><span class=\"line\">proxyTable: &#123;</span><br><span class=\"line\"> <span class=\"string\">\"/bp-api\"</span>: &#123;</span><br><span class=\"line\">   target: <span class=\"string\">\"http://new.d.st.cn\"</span>,</span><br><span class=\"line\">   changeOrigin: <span class=\"literal\">true</span>,</span><br><span class=\"line\">   <span class=\"comment\">// pathRewrite: &#123;</span></span><br><span class=\"line\">   <span class=\"comment\">//   \"^/bp-api\": \"/\"</span></span><br><span class=\"line\">   <span class=\"comment\">// &#125;</span></span><br><span class=\"line\"> &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>修改本地 host 文件 改成相同的二级域名例如 <code>xxx.hwagain.com</code></li>\n<li>后台设置可跨域</li>\n<li>jsonp，不过局限性比较多,比较适合一些特殊的信息获取!</li>\n</ul>\n<ol start=\"7\">\n<li><p>Error in render function:”Type Error: Cannot read property ‘xxx’ of undefined”</p>\n</li>\n<li><p>Uncaught ReferenceError: xxx is not define</p>\n</li>\n<li><p>TypeError: xxx is not a function</p>\n</li>\n<li><p>安装模块时命令窗口输出 unsupported platform xxx</p>\n<blockquote>\n<p>一般两种情况,node 版本不兼容,系统不兼容;</p>\n</blockquote>\n</li>\n<li><p>Failed to mount component: template or render function not defined</p>\n</li>\n</ol>\n<ul>\n<li>组件没有正确引入(或组件文件内容为空)</li>\n<li>挂载点顺序错了</li>\n</ul>\n<ol start=\"12\">\n<li><p>Unknown custom element: <code>&lt;xxx&gt;</code> - did you register the component correctly?</p>\n<blockquote>\n<p>组件未导入对应的组件或者组件引入了但是未在 components 声明注册</p>\n</blockquote>\n</li>\n<li><p>axios 的 post 请求后台接受不到</p>\n<blockquote>\n<p>axios 默认是 json 格式提交,确认后台是否做了对应的支持;<br>若是只能接受传统的表单序列化,就需要自己写一个转义的方法.当然还有一个更加省事的方案,引入<code>qs</code>，使用<code>qs.stringify(params)</code>转义参数</p>\n</blockquote>\n</li>\n<li><p>Module not found: Error : Can’t resolve xxx-loader in xxxx</p>\n<blockquote>\n<p>这里问题一般就是 webpack 的配置文件你改动了或对应的 loader 没有装上</p>\n</blockquote>\n</li>\n<li><p>npm run dev 报端口错误!Error: listen EADDRINUSE :::8080</p>\n<blockquote>\n<p>端口被占用，在 config/index.js 修改开发环境下的端口号</p>\n\n</blockquote>\n</li>\n<li><p>什么时候用 v-if,什么用 v-show</p>\n<blockquote>\n<p>我们先来说说两者的核心差异;<br>v-if : DOM 区域没有生成,没有插入文档..等条件成立的时候才动态插入到页面!<br>有些需要遍历的数组对象或者值,最好用这货控制,等到拿到值才处理遍历,不然一些操作过快的情况会报错,比如数据还没请求到!<br>v-show: DOM 区域在组件渲染的时候同时渲染了,只是单纯用 css 隐藏了<br>对于下拉菜单,折叠菜单这些数据基本不怎么变动.用这个最合适了..而且可以改善用户体验,因为它不会导致页面的重绘,DOM 操作会!<br>简言之: DOM 结构不怎么变化的用 v-show, 数据需要改动很大或者布局改动的用 v-if</p>\n</blockquote>\n</li>\n<li><p>单组件中里面的 import xxx from ‘@/components/layout/xxx’中的@是什么</p>\n<blockquote>\n<p>webpack 可以配置 alias(也就是路径别名),<br>文件名: <code>build -&gt; webpack.base.conf.js</code></p>\n</blockquote>\n</li>\n</ol>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">resolve: &#123;</span><br><span class=\"line\">    extensions: [<span class=\"string\">\".js\"</span>, <span class=\"string\">\".vue\"</span>, <span class=\"string\">\".json\"</span>], <span class=\"comment\">// 可以导入的时候忽略的拓展名范围</span></span><br><span class=\"line\">    alias: &#123;</span><br><span class=\"line\">      vue$: <span class=\"string\">\"vue/dist/vue.esm.js\"</span>,</span><br><span class=\"line\">      <span class=\"string\">\"@\"</span>: resolve(<span class=\"string\">\"src\"</span>),  <span class=\"comment\">// 这里就是别名了,比如@就代表直接从/src 下开始找起!!!</span></span><br><span class=\"line\">      <span class=\"string\">\"~\"</span>: resolve(<span class=\"string\">\"src/components\"</span>)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br></pre></td></tr></table></figure>\n<ol start=\"18\">\n<li>SyntaxError: Unexpected identifier;<blockquote>\n<p>语法错误,看错误信息去找到对应的页面排查</p>\n</blockquote>\n</li>\n</ol>\n"},{"title":"Vuex状态持久化存储之vuex-persistedstate","date":"2018-11-13T07:09:26.000Z","_content":"\n# vuex-persistedstate\n\nPersist and rehydrate your [Vuex](http://vuex.vuejs.org/) state between page reloads.\n\n<hr />\n\n[![Build Status](https://img.shields.io/travis/robinvdvleuten/vuex-persistedstate.svg)](https://travis-ci.org/robinvdvleuten/vuex-persistedstate)\n[![NPM version](https://img.shields.io/npm/v/vuex-persistedstate.svg)](https://www.npmjs.com/package/vuex-persistedstate)\n[![NPM downloads](https://img.shields.io/npm/dm/vuex-persistedstate.svg)](https://www.npmjs.com/package/vuex-persistedstate)\n[![Prettier](https://img.shields.io/badge/code_style-prettier-ff69b4.svg)](https://github.com/prettier/prettier)\n[![MIT license](https://img.shields.io/github/license/robinvdvleuten/vuex-persistedstate.svg)](https://github.com/robinvdvleuten/vuex-persistedstate/blob/master/LICENSE)\n\n[![PRs Welcome](https://img.shields.io/badge/PRs-welcome-brightgreen.svg)](http://makeapullrequest.com)\n[![Code Of Conduct](https://img.shields.io/badge/code%20of-conduct-ff69b4.svg)](https://github.com/robinvdvleuten/vuex-persistedstate/blob/master/.github/code_of_conduct.md)\n\n## Requirements\n\n- [Vue.js](https://vuejs.org) (v2.0.0+)\n- [Vuex](http://vuex.vuejs.org) (v2.0.0+)\n\n## Installation\n\n```bash\n$ npm install vuex-persistedstate\n```\n\n## Usage\n\n[![Edit vuex-persistedstate](https://codesandbox.io/static/img/play-codesandbox.svg)](https://codesandbox.io/s/80k4m2598?autoresize=1)\n\n```js\nimport createPersistedState from 'vuex-persistedstate'\n\nconst store = new Vuex.Store({\n  // ...\n  plugins: [createPersistedState()]\n})\n```\n\n### Nuxt.js\n\nIt is possible to use vuex-persistedstate with Nuxt.js. Due to the order code is loaded in, vuex-persistedstate must be included as a NuxtJS plugin:\n\n```javascript\n// nuxt.config.js\n\n...\nplugins: [{ src: '~/plugins/localStorage.js', ssr: false }]\n...\n```\n\n```javascript\n// ~/plugins/localStorage.js\n\nimport createPersistedState from 'vuex-persistedstate'\n\nexport default ({store}) => {\n  window.onNuxtReady(() => {\n    createPersistedState({\n        key: 'yourkey',\n        paths: [...]\n        ...\n    })(store)\n  })\n}\n```\n\n## API\n\n### `createPersistedState([options])`\n\nCreates a new instance of the plugin with the given options. The following options\ncan be provided to configure the plugin for your specific needs:\n\n- `key <String>`: The key to store the persisted state under. (default: **vuex**)\n- `paths <Array>`: An array of any paths to partially persist the state. If no paths are given, the complete state is persisted. (default: **[]**)\n- `reducer <Function>`: A function that will be called to reduce the state to persist based on the given paths. Defaults to include the values.\n- `subscriber <Function>`: A function called to setup mutation subscription. Defaults to `store => handler => store.subscribe(handler)`\n\n- `storage <Object>`: Instead for (or in combination with) `getState` and `setState`. Defaults to localStorage.\n- `getState <Function>`: A function that will be called to rehydrate a previously persisted state. Defaults to using `storage`.\n- `setState <Function>`: A function that will be called to persist the given state. Defaults to using `storage`.\n- `filter <Function>`: A function that will be called to filter any mutations which will trigger `setState` on storage eventually. Defaults to `() => true`\n- `arrayMerger <Function>`: A function for merging arrays when rehydrating state. Defaults to `function (store, saved) { return saved }` (saved state replaces supplied state).\n\n## Customize Storage\n\nIf it's not ideal to have the state of the Vuex store inside localstorage. One can easily implement the functionality to use [cookies](https://github.com/js-cookie/js-cookie) for that (or any other you can think of);\n\n[![Edit vuex-persistedstate with js-cookie](https://codesandbox.io/static/img/play-codesandbox.svg)](https://codesandbox.io/s/xl356qvvkz?autoresize=1)\n\n```js\nimport { Store } from 'vuex'\nimport createPersistedState from 'vuex-persistedstate'\nimport * as Cookies from 'js-cookie'\n\nconst store = new Store({\n  // ...\n  plugins: [\n    createPersistedState({\n      storage: {\n        getItem: key => Cookies.get(key),\n        // Please see https://github.com/js-cookie/js-cookie#json, on how to handle JSON.\n        setItem: (key, value) =>\n          Cookies.set(key, value, { expires: 3, secure: true }),\n        removeItem: key => Cookies.remove(key)\n      }\n    })\n  ]\n})\n```\n\nIn fact, any object following the Storage protocol (getItem, setItem, removeItem, etc) could be passed:\n\n```js\ncreatePersistedState({ storage: window.sessionStorage })\n```\n\nThis is especially useful when you are using this plugin in combination with server-side rendering, where one could pass an instance of [dom-storage](https://www.npmjs.com/package/dom-storage).\n\n### ⚠️ LocalForage ⚠️\n\nAs it maybe seems at first sight, it's not possible to pass a [LocalForage](https://github.com/localForage/localForage) instance as `storage` property. This is due the fact that all getters and setters must be synchronous and [LocalForage's methods](https://github.com/localForage/localForage#callbacks-vs-promises) are asynchronous.\n\n## License\n\n[MIT](https://github.com/robinvdvleuten/vuex-persistedstate/blob/master/LICENSE) © [Robin van der Vleuten](https://www.robinvdvleuten.nl)\n","source":"_posts/vuex-persistedstate.md","raw":"---\ntitle: Vuex状态持久化存储之vuex-persistedstate\ndate: 2018-11-13 15:09:26\ntags: [vue, vuex, localstorage, plugins]\n---\n\n# vuex-persistedstate\n\nPersist and rehydrate your [Vuex](http://vuex.vuejs.org/) state between page reloads.\n\n<hr />\n\n[![Build Status](https://img.shields.io/travis/robinvdvleuten/vuex-persistedstate.svg)](https://travis-ci.org/robinvdvleuten/vuex-persistedstate)\n[![NPM version](https://img.shields.io/npm/v/vuex-persistedstate.svg)](https://www.npmjs.com/package/vuex-persistedstate)\n[![NPM downloads](https://img.shields.io/npm/dm/vuex-persistedstate.svg)](https://www.npmjs.com/package/vuex-persistedstate)\n[![Prettier](https://img.shields.io/badge/code_style-prettier-ff69b4.svg)](https://github.com/prettier/prettier)\n[![MIT license](https://img.shields.io/github/license/robinvdvleuten/vuex-persistedstate.svg)](https://github.com/robinvdvleuten/vuex-persistedstate/blob/master/LICENSE)\n\n[![PRs Welcome](https://img.shields.io/badge/PRs-welcome-brightgreen.svg)](http://makeapullrequest.com)\n[![Code Of Conduct](https://img.shields.io/badge/code%20of-conduct-ff69b4.svg)](https://github.com/robinvdvleuten/vuex-persistedstate/blob/master/.github/code_of_conduct.md)\n\n## Requirements\n\n- [Vue.js](https://vuejs.org) (v2.0.0+)\n- [Vuex](http://vuex.vuejs.org) (v2.0.0+)\n\n## Installation\n\n```bash\n$ npm install vuex-persistedstate\n```\n\n## Usage\n\n[![Edit vuex-persistedstate](https://codesandbox.io/static/img/play-codesandbox.svg)](https://codesandbox.io/s/80k4m2598?autoresize=1)\n\n```js\nimport createPersistedState from 'vuex-persistedstate'\n\nconst store = new Vuex.Store({\n  // ...\n  plugins: [createPersistedState()]\n})\n```\n\n### Nuxt.js\n\nIt is possible to use vuex-persistedstate with Nuxt.js. Due to the order code is loaded in, vuex-persistedstate must be included as a NuxtJS plugin:\n\n```javascript\n// nuxt.config.js\n\n...\nplugins: [{ src: '~/plugins/localStorage.js', ssr: false }]\n...\n```\n\n```javascript\n// ~/plugins/localStorage.js\n\nimport createPersistedState from 'vuex-persistedstate'\n\nexport default ({store}) => {\n  window.onNuxtReady(() => {\n    createPersistedState({\n        key: 'yourkey',\n        paths: [...]\n        ...\n    })(store)\n  })\n}\n```\n\n## API\n\n### `createPersistedState([options])`\n\nCreates a new instance of the plugin with the given options. The following options\ncan be provided to configure the plugin for your specific needs:\n\n- `key <String>`: The key to store the persisted state under. (default: **vuex**)\n- `paths <Array>`: An array of any paths to partially persist the state. If no paths are given, the complete state is persisted. (default: **[]**)\n- `reducer <Function>`: A function that will be called to reduce the state to persist based on the given paths. Defaults to include the values.\n- `subscriber <Function>`: A function called to setup mutation subscription. Defaults to `store => handler => store.subscribe(handler)`\n\n- `storage <Object>`: Instead for (or in combination with) `getState` and `setState`. Defaults to localStorage.\n- `getState <Function>`: A function that will be called to rehydrate a previously persisted state. Defaults to using `storage`.\n- `setState <Function>`: A function that will be called to persist the given state. Defaults to using `storage`.\n- `filter <Function>`: A function that will be called to filter any mutations which will trigger `setState` on storage eventually. Defaults to `() => true`\n- `arrayMerger <Function>`: A function for merging arrays when rehydrating state. Defaults to `function (store, saved) { return saved }` (saved state replaces supplied state).\n\n## Customize Storage\n\nIf it's not ideal to have the state of the Vuex store inside localstorage. One can easily implement the functionality to use [cookies](https://github.com/js-cookie/js-cookie) for that (or any other you can think of);\n\n[![Edit vuex-persistedstate with js-cookie](https://codesandbox.io/static/img/play-codesandbox.svg)](https://codesandbox.io/s/xl356qvvkz?autoresize=1)\n\n```js\nimport { Store } from 'vuex'\nimport createPersistedState from 'vuex-persistedstate'\nimport * as Cookies from 'js-cookie'\n\nconst store = new Store({\n  // ...\n  plugins: [\n    createPersistedState({\n      storage: {\n        getItem: key => Cookies.get(key),\n        // Please see https://github.com/js-cookie/js-cookie#json, on how to handle JSON.\n        setItem: (key, value) =>\n          Cookies.set(key, value, { expires: 3, secure: true }),\n        removeItem: key => Cookies.remove(key)\n      }\n    })\n  ]\n})\n```\n\nIn fact, any object following the Storage protocol (getItem, setItem, removeItem, etc) could be passed:\n\n```js\ncreatePersistedState({ storage: window.sessionStorage })\n```\n\nThis is especially useful when you are using this plugin in combination with server-side rendering, where one could pass an instance of [dom-storage](https://www.npmjs.com/package/dom-storage).\n\n### ⚠️ LocalForage ⚠️\n\nAs it maybe seems at first sight, it's not possible to pass a [LocalForage](https://github.com/localForage/localForage) instance as `storage` property. This is due the fact that all getters and setters must be synchronous and [LocalForage's methods](https://github.com/localForage/localForage#callbacks-vs-promises) are asynchronous.\n\n## License\n\n[MIT](https://github.com/robinvdvleuten/vuex-persistedstate/blob/master/LICENSE) © [Robin van der Vleuten](https://www.robinvdvleuten.nl)\n","slug":"vuex-persistedstate","published":1,"updated":"2019-01-22T12:09:22.961Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjr8h847d000eegrq29z9nl2u","content":"<h1 id=\"vuex-persistedstate\"><a href=\"#vuex-persistedstate\" class=\"headerlink\" title=\"vuex-persistedstate\"></a>vuex-persistedstate</h1><p>Persist and rehydrate your <a href=\"http://vuex.vuejs.org/\" target=\"_blank\" rel=\"noopener\">Vuex</a> state between page reloads.</p>\n<hr>\n\n<p><a href=\"https://travis-ci.org/robinvdvleuten/vuex-persistedstate\" target=\"_blank\" rel=\"noopener\"><img src=\"https://img.shields.io/travis/robinvdvleuten/vuex-persistedstate.svg\" alt=\"Build Status\"></a><br><a href=\"https://www.npmjs.com/package/vuex-persistedstate\" target=\"_blank\" rel=\"noopener\"><img src=\"https://img.shields.io/npm/v/vuex-persistedstate.svg\" alt=\"NPM version\"></a><br><a href=\"https://www.npmjs.com/package/vuex-persistedstate\" target=\"_blank\" rel=\"noopener\"><img src=\"https://img.shields.io/npm/dm/vuex-persistedstate.svg\" alt=\"NPM downloads\"></a><br><a href=\"https://github.com/prettier/prettier\" target=\"_blank\" rel=\"noopener\"><img src=\"https://img.shields.io/badge/code_style-prettier-ff69b4.svg\" alt=\"Prettier\"></a><br><a href=\"https://github.com/robinvdvleuten/vuex-persistedstate/blob/master/LICENSE\" target=\"_blank\" rel=\"noopener\"><img src=\"https://img.shields.io/github/license/robinvdvleuten/vuex-persistedstate.svg\" alt=\"MIT license\"></a></p>\n<p><a href=\"http://makeapullrequest.com\" target=\"_blank\" rel=\"noopener\"><img src=\"https://img.shields.io/badge/PRs-welcome-brightgreen.svg\" alt=\"PRs Welcome\"></a><br><a href=\"https://github.com/robinvdvleuten/vuex-persistedstate/blob/master/.github/code_of_conduct.md\" target=\"_blank\" rel=\"noopener\"><img src=\"https://img.shields.io/badge/code%20of-conduct-ff69b4.svg\" alt=\"Code Of Conduct\"></a></p>\n<h2 id=\"Requirements\"><a href=\"#Requirements\" class=\"headerlink\" title=\"Requirements\"></a>Requirements</h2><ul>\n<li><a href=\"https://vuejs.org\" target=\"_blank\" rel=\"noopener\">Vue.js</a> (v2.0.0+)</li>\n<li><a href=\"http://vuex.vuejs.org\" target=\"_blank\" rel=\"noopener\">Vuex</a> (v2.0.0+)</li>\n</ul>\n<h2 id=\"Installation\"><a href=\"#Installation\" class=\"headerlink\" title=\"Installation\"></a>Installation</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ npm install vuex-persistedstate</span><br></pre></td></tr></table></figure>\n<h2 id=\"Usage\"><a href=\"#Usage\" class=\"headerlink\" title=\"Usage\"></a>Usage</h2><p><a href=\"https://codesandbox.io/s/80k4m2598?autoresize=1\" target=\"_blank\" rel=\"noopener\"><img src=\"https://codesandbox.io/static/img/play-codesandbox.svg\" alt=\"Edit vuex-persistedstate\"></a></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> createPersistedState <span class=\"keyword\">from</span> <span class=\"string\">'vuex-persistedstate'</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> store = <span class=\"keyword\">new</span> Vuex.Store(&#123;</span><br><span class=\"line\">  <span class=\"comment\">// ...</span></span><br><span class=\"line\">  plugins: [createPersistedState()]</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n<h3 id=\"Nuxt-js\"><a href=\"#Nuxt-js\" class=\"headerlink\" title=\"Nuxt.js\"></a>Nuxt.js</h3><p>It is possible to use vuex-persistedstate with Nuxt.js. Due to the order code is loaded in, vuex-persistedstate must be included as a NuxtJS plugin:</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// nuxt.config.js</span></span><br><span class=\"line\"></span><br><span class=\"line\">...</span><br><span class=\"line\">plugins: [&#123; <span class=\"attr\">src</span>: <span class=\"string\">'~/plugins/localStorage.js'</span>, <span class=\"attr\">ssr</span>: <span class=\"literal\">false</span> &#125;]</span><br><span class=\"line\">...</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// ~/plugins/localStorage.js</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> createPersistedState <span class=\"keyword\">from</span> <span class=\"string\">'vuex-persistedstate'</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> (&#123;store&#125;) =&gt; &#123;</span><br><span class=\"line\">  <span class=\"built_in\">window</span>.onNuxtReady(<span class=\"function\"><span class=\"params\">()</span> =&gt;</span> &#123;</span><br><span class=\"line\">    createPersistedState(&#123;</span><br><span class=\"line\">        key: <span class=\"string\">'yourkey'</span>,</span><br><span class=\"line\">        paths: [...]</span><br><span class=\"line\">        ...</span><br><span class=\"line\">    &#125;)(store)</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"API\"><a href=\"#API\" class=\"headerlink\" title=\"API\"></a>API</h2><h3 id=\"createPersistedState-options\"><a href=\"#createPersistedState-options\" class=\"headerlink\" title=\"createPersistedState([options])\"></a><code>createPersistedState([options])</code></h3><p>Creates a new instance of the plugin with the given options. The following options<br>can be provided to configure the plugin for your specific needs:</p>\n<ul>\n<li><code>key &lt;String&gt;</code>: The key to store the persisted state under. (default: <strong>vuex</strong>)</li>\n<li><code>paths &lt;Array&gt;</code>: An array of any paths to partially persist the state. If no paths are given, the complete state is persisted. (default: <strong>[]</strong>)</li>\n<li><code>reducer &lt;Function&gt;</code>: A function that will be called to reduce the state to persist based on the given paths. Defaults to include the values.</li>\n<li><p><code>subscriber &lt;Function&gt;</code>: A function called to setup mutation subscription. Defaults to <code>store =&gt; handler =&gt; store.subscribe(handler)</code></p>\n</li>\n<li><p><code>storage &lt;Object&gt;</code>: Instead for (or in combination with) <code>getState</code> and <code>setState</code>. Defaults to localStorage.</p>\n</li>\n<li><code>getState &lt;Function&gt;</code>: A function that will be called to rehydrate a previously persisted state. Defaults to using <code>storage</code>.</li>\n<li><code>setState &lt;Function&gt;</code>: A function that will be called to persist the given state. Defaults to using <code>storage</code>.</li>\n<li><code>filter &lt;Function&gt;</code>: A function that will be called to filter any mutations which will trigger <code>setState</code> on storage eventually. Defaults to <code>() =&gt; true</code></li>\n<li><code>arrayMerger &lt;Function&gt;</code>: A function for merging arrays when rehydrating state. Defaults to <code>function (store, saved) { return saved }</code> (saved state replaces supplied state).</li>\n</ul>\n<h2 id=\"Customize-Storage\"><a href=\"#Customize-Storage\" class=\"headerlink\" title=\"Customize Storage\"></a>Customize Storage</h2><p>If it’s not ideal to have the state of the Vuex store inside localstorage. One can easily implement the functionality to use <a href=\"https://github.com/js-cookie/js-cookie\" target=\"_blank\" rel=\"noopener\">cookies</a> for that (or any other you can think of);</p>\n<p><a href=\"https://codesandbox.io/s/xl356qvvkz?autoresize=1\" target=\"_blank\" rel=\"noopener\"><img src=\"https://codesandbox.io/static/img/play-codesandbox.svg\" alt=\"Edit vuex-persistedstate with js-cookie\"></a></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> &#123; Store &#125; <span class=\"keyword\">from</span> <span class=\"string\">'vuex'</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> createPersistedState <span class=\"keyword\">from</span> <span class=\"string\">'vuex-persistedstate'</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> * <span class=\"keyword\">as</span> Cookies <span class=\"keyword\">from</span> <span class=\"string\">'js-cookie'</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> store = <span class=\"keyword\">new</span> Store(&#123;</span><br><span class=\"line\">  <span class=\"comment\">// ...</span></span><br><span class=\"line\">  plugins: [</span><br><span class=\"line\">    createPersistedState(&#123;</span><br><span class=\"line\">      storage: &#123;</span><br><span class=\"line\">        getItem: <span class=\"function\"><span class=\"params\">key</span> =&gt;</span> Cookies.get(key),</span><br><span class=\"line\">        <span class=\"comment\">// Please see https://github.com/js-cookie/js-cookie#json, on how to handle JSON.</span></span><br><span class=\"line\">        setItem: <span class=\"function\">(<span class=\"params\">key, value</span>) =&gt;</span></span><br><span class=\"line\">          Cookies.set(key, value, &#123; <span class=\"attr\">expires</span>: <span class=\"number\">3</span>, <span class=\"attr\">secure</span>: <span class=\"literal\">true</span> &#125;),</span><br><span class=\"line\">        removeItem: <span class=\"function\"><span class=\"params\">key</span> =&gt;</span> Cookies.remove(key)</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">  ]</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n<p>In fact, any object following the Storage protocol (getItem, setItem, removeItem, etc) could be passed:</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">createPersistedState(&#123; <span class=\"attr\">storage</span>: <span class=\"built_in\">window</span>.sessionStorage &#125;)</span><br></pre></td></tr></table></figure>\n<p>This is especially useful when you are using this plugin in combination with server-side rendering, where one could pass an instance of <a href=\"https://www.npmjs.com/package/dom-storage\" target=\"_blank\" rel=\"noopener\">dom-storage</a>.</p>\n<h3 id=\"⚠️-LocalForage-⚠️\"><a href=\"#⚠️-LocalForage-⚠️\" class=\"headerlink\" title=\"⚠️ LocalForage ⚠️\"></a>⚠️ LocalForage ⚠️</h3><p>As it maybe seems at first sight, it’s not possible to pass a <a href=\"https://github.com/localForage/localForage\" target=\"_blank\" rel=\"noopener\">LocalForage</a> instance as <code>storage</code> property. This is due the fact that all getters and setters must be synchronous and <a href=\"https://github.com/localForage/localForage#callbacks-vs-promises\" target=\"_blank\" rel=\"noopener\">LocalForage’s methods</a> are asynchronous.</p>\n<h2 id=\"License\"><a href=\"#License\" class=\"headerlink\" title=\"License\"></a>License</h2><p><a href=\"https://github.com/robinvdvleuten/vuex-persistedstate/blob/master/LICENSE\" target=\"_blank\" rel=\"noopener\">MIT</a> © <a href=\"https://www.robinvdvleuten.nl\" target=\"_blank\" rel=\"noopener\">Robin van der Vleuten</a></p>\n","site":{"data":{"links":{"创造狮":{"link":"http://chuangzaoshi.com/","avatar":"../images/favatar/chuangzaoshi-logo.png","desc":"为创意工作者而设计"},"腾讯设计导航":{"link":"http://idesign.qq.com/","avatar":"../images/favatar/idesign-logo.png","desc":"网罗全网高逼格的设计站点"}},"gallery":{"Name":{"full_link":"http://example.com/full-image.png","thumb_link":"http://example.com/thumb-image.png","descr":"这是一个描述"}}}},"excerpt":"","more":"<h1 id=\"vuex-persistedstate\"><a href=\"#vuex-persistedstate\" class=\"headerlink\" title=\"vuex-persistedstate\"></a>vuex-persistedstate</h1><p>Persist and rehydrate your <a href=\"http://vuex.vuejs.org/\" target=\"_blank\" rel=\"noopener\">Vuex</a> state between page reloads.</p>\n<hr>\n\n<p><a href=\"https://travis-ci.org/robinvdvleuten/vuex-persistedstate\" target=\"_blank\" rel=\"noopener\"><img src=\"https://img.shields.io/travis/robinvdvleuten/vuex-persistedstate.svg\" alt=\"Build Status\"></a><br><a href=\"https://www.npmjs.com/package/vuex-persistedstate\" target=\"_blank\" rel=\"noopener\"><img src=\"https://img.shields.io/npm/v/vuex-persistedstate.svg\" alt=\"NPM version\"></a><br><a href=\"https://www.npmjs.com/package/vuex-persistedstate\" target=\"_blank\" rel=\"noopener\"><img src=\"https://img.shields.io/npm/dm/vuex-persistedstate.svg\" alt=\"NPM downloads\"></a><br><a href=\"https://github.com/prettier/prettier\" target=\"_blank\" rel=\"noopener\"><img src=\"https://img.shields.io/badge/code_style-prettier-ff69b4.svg\" alt=\"Prettier\"></a><br><a href=\"https://github.com/robinvdvleuten/vuex-persistedstate/blob/master/LICENSE\" target=\"_blank\" rel=\"noopener\"><img src=\"https://img.shields.io/github/license/robinvdvleuten/vuex-persistedstate.svg\" alt=\"MIT license\"></a></p>\n<p><a href=\"http://makeapullrequest.com\" target=\"_blank\" rel=\"noopener\"><img src=\"https://img.shields.io/badge/PRs-welcome-brightgreen.svg\" alt=\"PRs Welcome\"></a><br><a href=\"https://github.com/robinvdvleuten/vuex-persistedstate/blob/master/.github/code_of_conduct.md\" target=\"_blank\" rel=\"noopener\"><img src=\"https://img.shields.io/badge/code%20of-conduct-ff69b4.svg\" alt=\"Code Of Conduct\"></a></p>\n<h2 id=\"Requirements\"><a href=\"#Requirements\" class=\"headerlink\" title=\"Requirements\"></a>Requirements</h2><ul>\n<li><a href=\"https://vuejs.org\" target=\"_blank\" rel=\"noopener\">Vue.js</a> (v2.0.0+)</li>\n<li><a href=\"http://vuex.vuejs.org\" target=\"_blank\" rel=\"noopener\">Vuex</a> (v2.0.0+)</li>\n</ul>\n<h2 id=\"Installation\"><a href=\"#Installation\" class=\"headerlink\" title=\"Installation\"></a>Installation</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ npm install vuex-persistedstate</span><br></pre></td></tr></table></figure>\n<h2 id=\"Usage\"><a href=\"#Usage\" class=\"headerlink\" title=\"Usage\"></a>Usage</h2><p><a href=\"https://codesandbox.io/s/80k4m2598?autoresize=1\" target=\"_blank\" rel=\"noopener\"><img src=\"https://codesandbox.io/static/img/play-codesandbox.svg\" alt=\"Edit vuex-persistedstate\"></a></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> createPersistedState <span class=\"keyword\">from</span> <span class=\"string\">'vuex-persistedstate'</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> store = <span class=\"keyword\">new</span> Vuex.Store(&#123;</span><br><span class=\"line\">  <span class=\"comment\">// ...</span></span><br><span class=\"line\">  plugins: [createPersistedState()]</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n<h3 id=\"Nuxt-js\"><a href=\"#Nuxt-js\" class=\"headerlink\" title=\"Nuxt.js\"></a>Nuxt.js</h3><p>It is possible to use vuex-persistedstate with Nuxt.js. Due to the order code is loaded in, vuex-persistedstate must be included as a NuxtJS plugin:</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// nuxt.config.js</span></span><br><span class=\"line\"></span><br><span class=\"line\">...</span><br><span class=\"line\">plugins: [&#123; <span class=\"attr\">src</span>: <span class=\"string\">'~/plugins/localStorage.js'</span>, <span class=\"attr\">ssr</span>: <span class=\"literal\">false</span> &#125;]</span><br><span class=\"line\">...</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// ~/plugins/localStorage.js</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> createPersistedState <span class=\"keyword\">from</span> <span class=\"string\">'vuex-persistedstate'</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> (&#123;store&#125;) =&gt; &#123;</span><br><span class=\"line\">  <span class=\"built_in\">window</span>.onNuxtReady(<span class=\"function\"><span class=\"params\">()</span> =&gt;</span> &#123;</span><br><span class=\"line\">    createPersistedState(&#123;</span><br><span class=\"line\">        key: <span class=\"string\">'yourkey'</span>,</span><br><span class=\"line\">        paths: [...]</span><br><span class=\"line\">        ...</span><br><span class=\"line\">    &#125;)(store)</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"API\"><a href=\"#API\" class=\"headerlink\" title=\"API\"></a>API</h2><h3 id=\"createPersistedState-options\"><a href=\"#createPersistedState-options\" class=\"headerlink\" title=\"createPersistedState([options])\"></a><code>createPersistedState([options])</code></h3><p>Creates a new instance of the plugin with the given options. The following options<br>can be provided to configure the plugin for your specific needs:</p>\n<ul>\n<li><code>key &lt;String&gt;</code>: The key to store the persisted state under. (default: <strong>vuex</strong>)</li>\n<li><code>paths &lt;Array&gt;</code>: An array of any paths to partially persist the state. If no paths are given, the complete state is persisted. (default: <strong>[]</strong>)</li>\n<li><code>reducer &lt;Function&gt;</code>: A function that will be called to reduce the state to persist based on the given paths. Defaults to include the values.</li>\n<li><p><code>subscriber &lt;Function&gt;</code>: A function called to setup mutation subscription. Defaults to <code>store =&gt; handler =&gt; store.subscribe(handler)</code></p>\n</li>\n<li><p><code>storage &lt;Object&gt;</code>: Instead for (or in combination with) <code>getState</code> and <code>setState</code>. Defaults to localStorage.</p>\n</li>\n<li><code>getState &lt;Function&gt;</code>: A function that will be called to rehydrate a previously persisted state. Defaults to using <code>storage</code>.</li>\n<li><code>setState &lt;Function&gt;</code>: A function that will be called to persist the given state. Defaults to using <code>storage</code>.</li>\n<li><code>filter &lt;Function&gt;</code>: A function that will be called to filter any mutations which will trigger <code>setState</code> on storage eventually. Defaults to <code>() =&gt; true</code></li>\n<li><code>arrayMerger &lt;Function&gt;</code>: A function for merging arrays when rehydrating state. Defaults to <code>function (store, saved) { return saved }</code> (saved state replaces supplied state).</li>\n</ul>\n<h2 id=\"Customize-Storage\"><a href=\"#Customize-Storage\" class=\"headerlink\" title=\"Customize Storage\"></a>Customize Storage</h2><p>If it’s not ideal to have the state of the Vuex store inside localstorage. One can easily implement the functionality to use <a href=\"https://github.com/js-cookie/js-cookie\" target=\"_blank\" rel=\"noopener\">cookies</a> for that (or any other you can think of);</p>\n<p><a href=\"https://codesandbox.io/s/xl356qvvkz?autoresize=1\" target=\"_blank\" rel=\"noopener\"><img src=\"https://codesandbox.io/static/img/play-codesandbox.svg\" alt=\"Edit vuex-persistedstate with js-cookie\"></a></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> &#123; Store &#125; <span class=\"keyword\">from</span> <span class=\"string\">'vuex'</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> createPersistedState <span class=\"keyword\">from</span> <span class=\"string\">'vuex-persistedstate'</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> * <span class=\"keyword\">as</span> Cookies <span class=\"keyword\">from</span> <span class=\"string\">'js-cookie'</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> store = <span class=\"keyword\">new</span> Store(&#123;</span><br><span class=\"line\">  <span class=\"comment\">// ...</span></span><br><span class=\"line\">  plugins: [</span><br><span class=\"line\">    createPersistedState(&#123;</span><br><span class=\"line\">      storage: &#123;</span><br><span class=\"line\">        getItem: <span class=\"function\"><span class=\"params\">key</span> =&gt;</span> Cookies.get(key),</span><br><span class=\"line\">        <span class=\"comment\">// Please see https://github.com/js-cookie/js-cookie#json, on how to handle JSON.</span></span><br><span class=\"line\">        setItem: <span class=\"function\">(<span class=\"params\">key, value</span>) =&gt;</span></span><br><span class=\"line\">          Cookies.set(key, value, &#123; <span class=\"attr\">expires</span>: <span class=\"number\">3</span>, <span class=\"attr\">secure</span>: <span class=\"literal\">true</span> &#125;),</span><br><span class=\"line\">        removeItem: <span class=\"function\"><span class=\"params\">key</span> =&gt;</span> Cookies.remove(key)</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">  ]</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n<p>In fact, any object following the Storage protocol (getItem, setItem, removeItem, etc) could be passed:</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">createPersistedState(&#123; <span class=\"attr\">storage</span>: <span class=\"built_in\">window</span>.sessionStorage &#125;)</span><br></pre></td></tr></table></figure>\n<p>This is especially useful when you are using this plugin in combination with server-side rendering, where one could pass an instance of <a href=\"https://www.npmjs.com/package/dom-storage\" target=\"_blank\" rel=\"noopener\">dom-storage</a>.</p>\n<h3 id=\"⚠️-LocalForage-⚠️\"><a href=\"#⚠️-LocalForage-⚠️\" class=\"headerlink\" title=\"⚠️ LocalForage ⚠️\"></a>⚠️ LocalForage ⚠️</h3><p>As it maybe seems at first sight, it’s not possible to pass a <a href=\"https://github.com/localForage/localForage\" target=\"_blank\" rel=\"noopener\">LocalForage</a> instance as <code>storage</code> property. This is due the fact that all getters and setters must be synchronous and <a href=\"https://github.com/localForage/localForage#callbacks-vs-promises\" target=\"_blank\" rel=\"noopener\">LocalForage’s methods</a> are asynchronous.</p>\n<h2 id=\"License\"><a href=\"#License\" class=\"headerlink\" title=\"License\"></a>License</h2><p><a href=\"https://github.com/robinvdvleuten/vuex-persistedstate/blob/master/LICENSE\" target=\"_blank\" rel=\"noopener\">MIT</a> © <a href=\"https://www.robinvdvleuten.nl\" target=\"_blank\" rel=\"noopener\">Robin van der Vleuten</a></p>\n"},{"title":"Hexo-Theme-Pure","date":"2018-10-17T06:31:57.000Z","_content":"\n# pure\n\nA brand new default theme for [[Hexo](https://hexo.io)]. [Preview](http://cofess.github.io/) | [English documentation](README.md) | [iconfont](http://blog.cofess.com/hexo-theme-pure/iconfont/demo_fontclass.html)\n\n![](screenshot/pure.png)\n\n## 特色\n\n- 多语言\n- 第三方评论框（友言、来必力、gitment、gitalk）\n- 可展示个人豆瓣书单\n- 可展示个人 github 托管项目\n- 可设置支付宝、微信打赏\n\n## 页面展示\n\n[首页](http://cofess.github.io/) | [归档](http://cofess.github.io/archives/) | [分类](http://cofess.github.io/categories/) | [标签](http://cofess.github.io/tags/) | [项目](http://cofess.github.io/repository/) | [书单](http://cofess.github.io/books/) | [友链](http://cofess.github.io/links/) | [关于](http://cofess.github.io/about/)\n\n## 配置说明\n\n在 Hexo 中有两份主要的配置文件，其名称都是 \\_config.yml。 其中，一份位于站点根目录下，主要包含 Hexo 本身的配置；另一份位于主题目录下，这份配置由主题作者提供，主要用于配置主题相关的选项。为了描述方便，在以下说明中，将前者称为站点配置文件， 后者称为主题配置文件\n\n## 安装主题\n\n```\ngit clone https://github.com/cofess/hexo-theme-pure.git themes/pure\n```\n\n## 更新主题\n\n```\ncd themes/pure\ngit pull\n```\n\n## 启用 pure 主题\n\n打开站点配置文件，找到 theme 字段，将其值更改为 pure\n\n```\ntheme: pure\n```\n\n到此，主题安装完成。然后启动 Hexo 服务验证主题是否正确启用。\n\n```\nhexo s\n```\n\n## 安装插件\n\n### [hexo-wordcount](https://github.com/willin/hexo-wordcount)\n\n```\nnpm install hexo-wordcount --save\n```\n\n### [hexo-generator-json-content](https://github.com/alexbruno/hexo-generator-json-content)\n\n```\nnpm install hexo-generator-json-content --save\n```\n\n### [hexo-generator-feed](https://github.com/hexojs/hexo-generator-feed)\n\n```\nnpm install hexo-generator-feed --save\n```\n\n### [hexo-generator-sitemap](https://github.com/hexojs/hexo-generator-sitemap)\n\n```\nnpm install hexo-generator-sitemap --save\n```\n\n### [hexo-generator-baidu-sitemap](https://github.com/coneycode/hexo-generator-baidu-sitemap)\n\n```\nnpm install hexo-generator-baidu-sitemap --save\n```\n\n## 主题配置\n\n### 设置语言\n\n打开站点配置文件, 将 language 设置成你所需要的语言。建议明确设置你所需要的语言,可选值对应 themes\\pure\\languages 目录下语言文件，简体中文配置如下：\n\n```\nlanguage: zh-CN\n```\n\n### 主题颜色\n\n定制了五套颜色，默认白，黑:theme-black，蓝:theme-blue，绿:theme-green，紫:theme-purple\n\n```\n# config\nconfig:\n  skin: # 主题颜色 theme-black theme-blue theme-green theme-purple\n```\n\n### 导航菜单\n\n```\n# 导航菜单\nmenu:\n  Home: .\n  Archives: archives # 归档\n  Categories: categories # 分类\n  Tags: tags # 标签\n  Repository: repository # github repositories\n  Books: books     # 书单\n  Links: links # 友链\n  About: about # 关于\n\n# 导航菜单图标（font awesome）\nmenu_icons:\n  enable: true # 是否启用菜单图标\n  home: icon-home-fill\n  archives: icon-archives-fill\n  categories: icon-folder\n  tags: icon-tags\n  repository: icon-project\n  books: icon-book-fill\n  links: icon-friendship\n  about: icon-cup-fill\n```\n\n### 设置个人信息\n\n```\n头像在themes\\pure\\source\\images 目录下替换图片即可，捐献的二维码同理。\n\n个人信息大部分都在 主题配置文件 中设置\n```\n\n### 搜索\n\n主题内置三种站内搜索方式：insight、swiftype、baidu\n\n```\n# Search\nsearch:\n  insight: true # you need to install `hexo-generator-json-content` before using Insight Search\n  swiftype: # enter swiftype install key here\n  baidu: false # you need to disable other search engines to use Baidu search\n```\n\n### 分享\n\n支持`weibo,qq,qzone,wechat,tencent,douban,diandian,facebook,twitter,google,linkedin`\n\n```\n# Share\n# weibo,qq,qzone,wechat,tencent,douban,diandian,facebook,twitter,google,linkedin\nshare:\n  enable: true  # 是否启用分享\n  sites: weibo,qq,wechat,facebook,twitter  # PC端显示的分享图标\n  mobile_sites: weibo,qq,qzone  # 移动端显示的分享图标\n```\n\n### 评论\n\n主题集成了[disqus](https://disqus.com/)、[友言](http://www.uyan.cc/)、[来必力](https://livere.com/)、[gitment](https://github.com/imsun/gitment)、[gitalk](https://github.com/gitalk/gitalk)评论系统，选择其中一种即可\n\n```\n# Comment\n# Gitment\n# Introduction: https://imsun.net/posts/gitment-introduction/\ncomment:\n  type: livere # 启用哪种评论系统\n  disqus:  # enter disqus shortname here\n  youyan:\n    uid: *** # enter youyan uid\n  livere:\n    uid: *** # enter livere uid\n  gitment:\n    githubID: username\n    repo: username.github.io\n    ClientID: ***\n    ClientSecret: ***\n    lazy: false\n```\n\n### 文章浏览量统计\n\n主题内置了不蒜子和 leancloud 来统计文章浏览量，启用其中之一即可，注意 leancloud 需要到其官网申请 APP ID 和 APP Key。\n\n比如，启用不蒜子来统计文章浏览量，在主题配置文件中把 busuanzi 设置为 true 即可：\n\n```\npv:\n  busuanzi:\n    enable: true  # 不蒜子统计\n```\n\n如果不需要第三方来统计浏览量，只需将相应设置改为 false 即可（设置为 false 后不会加载第三方 JS 脚本）\n\n### Github respostory\n\n复制`theme/pure/_source/` 目录下`repository`文件夹到`blog path/source/` 目录下\n\n```\n# Github\ngithub:\n  username: ***  # github username\n```\n\n### 豆瓣书单\n\n复制`theme/pure/_source/` 目录下`books`文件夹到`blog path/source/` 目录下\n\n```\n# douban 豆瓣书单\ndouban:\n  user: *** # 豆瓣用户名\n  start: 0 # 从哪一条记录开始\n  count: 100 # 获取豆瓣书单数据条数\n```\n\n### 友情链接\n\n复制`theme/pure/_source/` 目录下`links`文件夹到`blog path/source/` 目录下\n\n在 hexo 目录下的 source 文件夹内创建一个名为 \\_data（禁止改名）的文件夹。\n\n然后在文件内创建一个名为 links.yml 的文件,在其中添加相关数据即可。\n\n单个友情链接的格式为：\n\n```\nName:\n    link: http://example.com\n    avatar: http://example.com/avatar.png\n    desc: \"这是一个描述\"\n```\n\n添加多个友情链接，我们只需要根据上面的格式重复填写即可。\n\n. 将 Name 改为友情链接的名字，例如 Cofess。\n\n. http://example.com 为友情链接的地址。\n\n. http://example.com/avatar.png 为友情链接的头像。\n\n. 这是一个描述 为友情链接描述。\n\n### 文章索引目录\n\n```\ntitle: 文章标题\ncategories:\n  - 文章分类\ntags:\n  - 文章标签\ntoc: true # 是否启用内容索引\n```\n\n### sidebar 侧边栏\n\n文章侧边栏默认为开启状态，如果某篇文章不想开启侧边栏，在文章开头配置加入“sidebar: none”即可：\n\n```\ntitle: 文章标题\ncategories:\n  - 文章分类\ntags:\n  - 文章标签\nsidebar: none # 是否启用sidebar侧边栏，none：不启用\n```\n\n## 博客优化\n\n### [hexo-neat](https://github.com/rozbo/hexo-neat)\n\n> auto Minify html、js、css and make it neat\n\n```\nnpm install hexo-neat --save\n```\n\n在博客配置文件`_config.yml`中添加\n\n```\n# hexo-neat\nneat_enable: true\nneat_html:\n  enable: true\n  exclude:\nneat_css:\n  enable: true\n  exclude:\n    - '*.min.css'\nneat_js:\n  enable: true\n  mangle: true\n  output:\n  compress:\n  exclude:\n    - '*.min.js'\n```\n\n### [hexo-baidu-url-submit](https://github.com/huiwang/hexo-baidu-url-submit)\n\n```\nnpm install hexo-baidu-url-submit --save\n```\n\n### [hexo-translate-title](https://github.com/cometlj/hexo-translate-title)\n\n> 使用 Google 翻译，百度翻译和有道翻译将 Hexo 中的汉字标题转成英文标题\n\n安装\n\n```\nnpm install hexo-translate-title --save\n```\n\n在博客配置文件`_config.yml`中添加\n\n```yml\ntranslate_title:\n  translate_way: google #google | baidu | youdao\n  youdao_api_key: XXX\n  youdao_keyfrom: XXX\n  is_need_proxy: true #true | false\n  proxy_url: http://localhost:8123\n```\n\n**注意**：判断是否需要配置 google 本地代理，因为我在本地是开启时才能访问 google 翻译的，如果没有被墙，请将`_config.yml` 下的`is_need_proxy: true`改为 false。如果设置为 true,请设置本地代理地址\n\n## 数学公式\n\n> Hexo 默认使用\"hexo-renderer-marked\"引擎渲染网页，该引擎会把一些特殊的 markdown 符号转换为相应的 html 标签\n\n### 解决方案\n\n解决方案有很多，可以网上搜下，为了节省大家的时间，这里只提供亲身测试过的方法。\n\n更换 Hexo 的 markdown 渲染引擎，[hexo-renderer-markdown-it-plus](https://github.com/CHENXCHEN/hexo-renderer-markdown-it-plus)引擎替换默认的渲染引擎[hexo-renderer-marked](https://github.com/hexojs/hexo-renderer-marked)即可。\n\n### 安装 hexo-renderer-markdown-it-plus 插件\n\n```\nnpm un hexo-renderer-marked --save\nnpm i hexo-renderer-markdown-it-plus --save\n```\n\n### 配置\n\n安装插件后，如果未正常渲染 LaTeX 数学公式，在博客配置文件`_config.yml`中添加\n\n```\nmarkdown_it_plus:\n  highlight: true\n  html: true\n  xhtmlOut: true\n  breaks: true\n  langPrefix:\n  linkify: true\n  typographer:\n  quotes: “”‘’\n  plugins:\n    - plugin:\n        name: markdown-it-katex\n        enable: true\n    - plugin:\n        name: markdown-it-mark\n        enable: false\n```\n\n### 文章启用 mathjax\n\n```\ntitle: Hello World\nmathjax: true\n```\n","source":"_posts/hexo-theme-pure.md","raw":"---\ntitle: Hexo-Theme-Pure\ndate: 2018-10-17 14:31:57\ntags: [hexo-theme-pure]\n---\n\n# pure\n\nA brand new default theme for [[Hexo](https://hexo.io)]. [Preview](http://cofess.github.io/) | [English documentation](README.md) | [iconfont](http://blog.cofess.com/hexo-theme-pure/iconfont/demo_fontclass.html)\n\n![](screenshot/pure.png)\n\n## 特色\n\n- 多语言\n- 第三方评论框（友言、来必力、gitment、gitalk）\n- 可展示个人豆瓣书单\n- 可展示个人 github 托管项目\n- 可设置支付宝、微信打赏\n\n## 页面展示\n\n[首页](http://cofess.github.io/) | [归档](http://cofess.github.io/archives/) | [分类](http://cofess.github.io/categories/) | [标签](http://cofess.github.io/tags/) | [项目](http://cofess.github.io/repository/) | [书单](http://cofess.github.io/books/) | [友链](http://cofess.github.io/links/) | [关于](http://cofess.github.io/about/)\n\n## 配置说明\n\n在 Hexo 中有两份主要的配置文件，其名称都是 \\_config.yml。 其中，一份位于站点根目录下，主要包含 Hexo 本身的配置；另一份位于主题目录下，这份配置由主题作者提供，主要用于配置主题相关的选项。为了描述方便，在以下说明中，将前者称为站点配置文件， 后者称为主题配置文件\n\n## 安装主题\n\n```\ngit clone https://github.com/cofess/hexo-theme-pure.git themes/pure\n```\n\n## 更新主题\n\n```\ncd themes/pure\ngit pull\n```\n\n## 启用 pure 主题\n\n打开站点配置文件，找到 theme 字段，将其值更改为 pure\n\n```\ntheme: pure\n```\n\n到此，主题安装完成。然后启动 Hexo 服务验证主题是否正确启用。\n\n```\nhexo s\n```\n\n## 安装插件\n\n### [hexo-wordcount](https://github.com/willin/hexo-wordcount)\n\n```\nnpm install hexo-wordcount --save\n```\n\n### [hexo-generator-json-content](https://github.com/alexbruno/hexo-generator-json-content)\n\n```\nnpm install hexo-generator-json-content --save\n```\n\n### [hexo-generator-feed](https://github.com/hexojs/hexo-generator-feed)\n\n```\nnpm install hexo-generator-feed --save\n```\n\n### [hexo-generator-sitemap](https://github.com/hexojs/hexo-generator-sitemap)\n\n```\nnpm install hexo-generator-sitemap --save\n```\n\n### [hexo-generator-baidu-sitemap](https://github.com/coneycode/hexo-generator-baidu-sitemap)\n\n```\nnpm install hexo-generator-baidu-sitemap --save\n```\n\n## 主题配置\n\n### 设置语言\n\n打开站点配置文件, 将 language 设置成你所需要的语言。建议明确设置你所需要的语言,可选值对应 themes\\pure\\languages 目录下语言文件，简体中文配置如下：\n\n```\nlanguage: zh-CN\n```\n\n### 主题颜色\n\n定制了五套颜色，默认白，黑:theme-black，蓝:theme-blue，绿:theme-green，紫:theme-purple\n\n```\n# config\nconfig:\n  skin: # 主题颜色 theme-black theme-blue theme-green theme-purple\n```\n\n### 导航菜单\n\n```\n# 导航菜单\nmenu:\n  Home: .\n  Archives: archives # 归档\n  Categories: categories # 分类\n  Tags: tags # 标签\n  Repository: repository # github repositories\n  Books: books     # 书单\n  Links: links # 友链\n  About: about # 关于\n\n# 导航菜单图标（font awesome）\nmenu_icons:\n  enable: true # 是否启用菜单图标\n  home: icon-home-fill\n  archives: icon-archives-fill\n  categories: icon-folder\n  tags: icon-tags\n  repository: icon-project\n  books: icon-book-fill\n  links: icon-friendship\n  about: icon-cup-fill\n```\n\n### 设置个人信息\n\n```\n头像在themes\\pure\\source\\images 目录下替换图片即可，捐献的二维码同理。\n\n个人信息大部分都在 主题配置文件 中设置\n```\n\n### 搜索\n\n主题内置三种站内搜索方式：insight、swiftype、baidu\n\n```\n# Search\nsearch:\n  insight: true # you need to install `hexo-generator-json-content` before using Insight Search\n  swiftype: # enter swiftype install key here\n  baidu: false # you need to disable other search engines to use Baidu search\n```\n\n### 分享\n\n支持`weibo,qq,qzone,wechat,tencent,douban,diandian,facebook,twitter,google,linkedin`\n\n```\n# Share\n# weibo,qq,qzone,wechat,tencent,douban,diandian,facebook,twitter,google,linkedin\nshare:\n  enable: true  # 是否启用分享\n  sites: weibo,qq,wechat,facebook,twitter  # PC端显示的分享图标\n  mobile_sites: weibo,qq,qzone  # 移动端显示的分享图标\n```\n\n### 评论\n\n主题集成了[disqus](https://disqus.com/)、[友言](http://www.uyan.cc/)、[来必力](https://livere.com/)、[gitment](https://github.com/imsun/gitment)、[gitalk](https://github.com/gitalk/gitalk)评论系统，选择其中一种即可\n\n```\n# Comment\n# Gitment\n# Introduction: https://imsun.net/posts/gitment-introduction/\ncomment:\n  type: livere # 启用哪种评论系统\n  disqus:  # enter disqus shortname here\n  youyan:\n    uid: *** # enter youyan uid\n  livere:\n    uid: *** # enter livere uid\n  gitment:\n    githubID: username\n    repo: username.github.io\n    ClientID: ***\n    ClientSecret: ***\n    lazy: false\n```\n\n### 文章浏览量统计\n\n主题内置了不蒜子和 leancloud 来统计文章浏览量，启用其中之一即可，注意 leancloud 需要到其官网申请 APP ID 和 APP Key。\n\n比如，启用不蒜子来统计文章浏览量，在主题配置文件中把 busuanzi 设置为 true 即可：\n\n```\npv:\n  busuanzi:\n    enable: true  # 不蒜子统计\n```\n\n如果不需要第三方来统计浏览量，只需将相应设置改为 false 即可（设置为 false 后不会加载第三方 JS 脚本）\n\n### Github respostory\n\n复制`theme/pure/_source/` 目录下`repository`文件夹到`blog path/source/` 目录下\n\n```\n# Github\ngithub:\n  username: ***  # github username\n```\n\n### 豆瓣书单\n\n复制`theme/pure/_source/` 目录下`books`文件夹到`blog path/source/` 目录下\n\n```\n# douban 豆瓣书单\ndouban:\n  user: *** # 豆瓣用户名\n  start: 0 # 从哪一条记录开始\n  count: 100 # 获取豆瓣书单数据条数\n```\n\n### 友情链接\n\n复制`theme/pure/_source/` 目录下`links`文件夹到`blog path/source/` 目录下\n\n在 hexo 目录下的 source 文件夹内创建一个名为 \\_data（禁止改名）的文件夹。\n\n然后在文件内创建一个名为 links.yml 的文件,在其中添加相关数据即可。\n\n单个友情链接的格式为：\n\n```\nName:\n    link: http://example.com\n    avatar: http://example.com/avatar.png\n    desc: \"这是一个描述\"\n```\n\n添加多个友情链接，我们只需要根据上面的格式重复填写即可。\n\n. 将 Name 改为友情链接的名字，例如 Cofess。\n\n. http://example.com 为友情链接的地址。\n\n. http://example.com/avatar.png 为友情链接的头像。\n\n. 这是一个描述 为友情链接描述。\n\n### 文章索引目录\n\n```\ntitle: 文章标题\ncategories:\n  - 文章分类\ntags:\n  - 文章标签\ntoc: true # 是否启用内容索引\n```\n\n### sidebar 侧边栏\n\n文章侧边栏默认为开启状态，如果某篇文章不想开启侧边栏，在文章开头配置加入“sidebar: none”即可：\n\n```\ntitle: 文章标题\ncategories:\n  - 文章分类\ntags:\n  - 文章标签\nsidebar: none # 是否启用sidebar侧边栏，none：不启用\n```\n\n## 博客优化\n\n### [hexo-neat](https://github.com/rozbo/hexo-neat)\n\n> auto Minify html、js、css and make it neat\n\n```\nnpm install hexo-neat --save\n```\n\n在博客配置文件`_config.yml`中添加\n\n```\n# hexo-neat\nneat_enable: true\nneat_html:\n  enable: true\n  exclude:\nneat_css:\n  enable: true\n  exclude:\n    - '*.min.css'\nneat_js:\n  enable: true\n  mangle: true\n  output:\n  compress:\n  exclude:\n    - '*.min.js'\n```\n\n### [hexo-baidu-url-submit](https://github.com/huiwang/hexo-baidu-url-submit)\n\n```\nnpm install hexo-baidu-url-submit --save\n```\n\n### [hexo-translate-title](https://github.com/cometlj/hexo-translate-title)\n\n> 使用 Google 翻译，百度翻译和有道翻译将 Hexo 中的汉字标题转成英文标题\n\n安装\n\n```\nnpm install hexo-translate-title --save\n```\n\n在博客配置文件`_config.yml`中添加\n\n```yml\ntranslate_title:\n  translate_way: google #google | baidu | youdao\n  youdao_api_key: XXX\n  youdao_keyfrom: XXX\n  is_need_proxy: true #true | false\n  proxy_url: http://localhost:8123\n```\n\n**注意**：判断是否需要配置 google 本地代理，因为我在本地是开启时才能访问 google 翻译的，如果没有被墙，请将`_config.yml` 下的`is_need_proxy: true`改为 false。如果设置为 true,请设置本地代理地址\n\n## 数学公式\n\n> Hexo 默认使用\"hexo-renderer-marked\"引擎渲染网页，该引擎会把一些特殊的 markdown 符号转换为相应的 html 标签\n\n### 解决方案\n\n解决方案有很多，可以网上搜下，为了节省大家的时间，这里只提供亲身测试过的方法。\n\n更换 Hexo 的 markdown 渲染引擎，[hexo-renderer-markdown-it-plus](https://github.com/CHENXCHEN/hexo-renderer-markdown-it-plus)引擎替换默认的渲染引擎[hexo-renderer-marked](https://github.com/hexojs/hexo-renderer-marked)即可。\n\n### 安装 hexo-renderer-markdown-it-plus 插件\n\n```\nnpm un hexo-renderer-marked --save\nnpm i hexo-renderer-markdown-it-plus --save\n```\n\n### 配置\n\n安装插件后，如果未正常渲染 LaTeX 数学公式，在博客配置文件`_config.yml`中添加\n\n```\nmarkdown_it_plus:\n  highlight: true\n  html: true\n  xhtmlOut: true\n  breaks: true\n  langPrefix:\n  linkify: true\n  typographer:\n  quotes: “”‘’\n  plugins:\n    - plugin:\n        name: markdown-it-katex\n        enable: true\n    - plugin:\n        name: markdown-it-mark\n        enable: false\n```\n\n### 文章启用 mathjax\n\n```\ntitle: Hello World\nmathjax: true\n```\n","slug":"hexo-theme-pure","published":1,"updated":"2019-01-22T12:09:22.948Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjr8h848e001oegrqxgijzihb","content":"<h1 id=\"pure\"><a href=\"#pure\" class=\"headerlink\" title=\"pure\"></a>pure</h1><p>A brand new default theme for [<a href=\"https://hexo.io\" target=\"_blank\" rel=\"noopener\">Hexo</a>]. <a href=\"http://cofess.github.io/\" target=\"_blank\" rel=\"noopener\">Preview</a> | <a href=\"README.md\">English documentation</a> | <a href=\"http://blog.cofess.com/hexo-theme-pure/iconfont/demo_fontclass.html\" target=\"_blank\" rel=\"noopener\">iconfont</a></p>\n<p><img src=\"screenshot/pure.png\" alt=\"\"></p>\n<h2 id=\"特色\"><a href=\"#特色\" class=\"headerlink\" title=\"特色\"></a>特色</h2><ul>\n<li>多语言</li>\n<li>第三方评论框（友言、来必力、gitment、gitalk）</li>\n<li>可展示个人豆瓣书单</li>\n<li>可展示个人 github 托管项目</li>\n<li>可设置支付宝、微信打赏</li>\n</ul>\n<h2 id=\"页面展示\"><a href=\"#页面展示\" class=\"headerlink\" title=\"页面展示\"></a>页面展示</h2><p><a href=\"http://cofess.github.io/\" target=\"_blank\" rel=\"noopener\">首页</a> | <a href=\"http://cofess.github.io/archives/\" target=\"_blank\" rel=\"noopener\">归档</a> | <a href=\"http://cofess.github.io/categories/\" target=\"_blank\" rel=\"noopener\">分类</a> | <a href=\"http://cofess.github.io/tags/\" target=\"_blank\" rel=\"noopener\">标签</a> | <a href=\"http://cofess.github.io/repository/\" target=\"_blank\" rel=\"noopener\">项目</a> | <a href=\"http://cofess.github.io/books/\" target=\"_blank\" rel=\"noopener\">书单</a> | <a href=\"http://cofess.github.io/links/\" target=\"_blank\" rel=\"noopener\">友链</a> | <a href=\"http://cofess.github.io/about/\" target=\"_blank\" rel=\"noopener\">关于</a></p>\n<h2 id=\"配置说明\"><a href=\"#配置说明\" class=\"headerlink\" title=\"配置说明\"></a>配置说明</h2><p>在 Hexo 中有两份主要的配置文件，其名称都是 _config.yml。 其中，一份位于站点根目录下，主要包含 Hexo 本身的配置；另一份位于主题目录下，这份配置由主题作者提供，主要用于配置主题相关的选项。为了描述方便，在以下说明中，将前者称为站点配置文件， 后者称为主题配置文件</p>\n<h2 id=\"安装主题\"><a href=\"#安装主题\" class=\"headerlink\" title=\"安装主题\"></a>安装主题</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git clone https://github.com/cofess/hexo-theme-pure.git themes/pure</span><br></pre></td></tr></table></figure>\n<h2 id=\"更新主题\"><a href=\"#更新主题\" class=\"headerlink\" title=\"更新主题\"></a>更新主题</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd themes/pure</span><br><span class=\"line\">git pull</span><br></pre></td></tr></table></figure>\n<h2 id=\"启用-pure-主题\"><a href=\"#启用-pure-主题\" class=\"headerlink\" title=\"启用 pure 主题\"></a>启用 pure 主题</h2><p>打开站点配置文件，找到 theme 字段，将其值更改为 pure</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">theme: pure</span><br></pre></td></tr></table></figure>\n<p>到此，主题安装完成。然后启动 Hexo 服务验证主题是否正确启用。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo s</span><br></pre></td></tr></table></figure>\n<h2 id=\"安装插件\"><a href=\"#安装插件\" class=\"headerlink\" title=\"安装插件\"></a>安装插件</h2><h3 id=\"hexo-wordcount\"><a href=\"#hexo-wordcount\" class=\"headerlink\" title=\"hexo-wordcount\"></a><a href=\"https://github.com/willin/hexo-wordcount\" target=\"_blank\" rel=\"noopener\">hexo-wordcount</a></h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo-wordcount --save</span><br></pre></td></tr></table></figure>\n<h3 id=\"hexo-generator-json-content\"><a href=\"#hexo-generator-json-content\" class=\"headerlink\" title=\"hexo-generator-json-content\"></a><a href=\"https://github.com/alexbruno/hexo-generator-json-content\" target=\"_blank\" rel=\"noopener\">hexo-generator-json-content</a></h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo-generator-json-content --save</span><br></pre></td></tr></table></figure>\n<h3 id=\"hexo-generator-feed\"><a href=\"#hexo-generator-feed\" class=\"headerlink\" title=\"hexo-generator-feed\"></a><a href=\"https://github.com/hexojs/hexo-generator-feed\" target=\"_blank\" rel=\"noopener\">hexo-generator-feed</a></h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo-generator-feed --save</span><br></pre></td></tr></table></figure>\n<h3 id=\"hexo-generator-sitemap\"><a href=\"#hexo-generator-sitemap\" class=\"headerlink\" title=\"hexo-generator-sitemap\"></a><a href=\"https://github.com/hexojs/hexo-generator-sitemap\" target=\"_blank\" rel=\"noopener\">hexo-generator-sitemap</a></h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo-generator-sitemap --save</span><br></pre></td></tr></table></figure>\n<h3 id=\"hexo-generator-baidu-sitemap\"><a href=\"#hexo-generator-baidu-sitemap\" class=\"headerlink\" title=\"hexo-generator-baidu-sitemap\"></a><a href=\"https://github.com/coneycode/hexo-generator-baidu-sitemap\" target=\"_blank\" rel=\"noopener\">hexo-generator-baidu-sitemap</a></h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo-generator-baidu-sitemap --save</span><br></pre></td></tr></table></figure>\n<h2 id=\"主题配置\"><a href=\"#主题配置\" class=\"headerlink\" title=\"主题配置\"></a>主题配置</h2><h3 id=\"设置语言\"><a href=\"#设置语言\" class=\"headerlink\" title=\"设置语言\"></a>设置语言</h3><p>打开站点配置文件, 将 language 设置成你所需要的语言。建议明确设置你所需要的语言,可选值对应 themes\\pure\\languages 目录下语言文件，简体中文配置如下：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">language: zh-CN</span><br></pre></td></tr></table></figure>\n<h3 id=\"主题颜色\"><a href=\"#主题颜色\" class=\"headerlink\" title=\"主题颜色\"></a>主题颜色</h3><p>定制了五套颜色，默认白，黑:theme-black，蓝:theme-blue，绿:theme-green，紫:theme-purple</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># config</span><br><span class=\"line\">config:</span><br><span class=\"line\">  skin: # 主题颜色 theme-black theme-blue theme-green theme-purple</span><br></pre></td></tr></table></figure>\n<h3 id=\"导航菜单\"><a href=\"#导航菜单\" class=\"headerlink\" title=\"导航菜单\"></a>导航菜单</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 导航菜单</span><br><span class=\"line\">menu:</span><br><span class=\"line\">  Home: .</span><br><span class=\"line\">  Archives: archives # 归档</span><br><span class=\"line\">  Categories: categories # 分类</span><br><span class=\"line\">  Tags: tags # 标签</span><br><span class=\"line\">  Repository: repository # github repositories</span><br><span class=\"line\">  Books: books     # 书单</span><br><span class=\"line\">  Links: links # 友链</span><br><span class=\"line\">  About: about # 关于</span><br><span class=\"line\"></span><br><span class=\"line\"># 导航菜单图标（font awesome）</span><br><span class=\"line\">menu_icons:</span><br><span class=\"line\">  enable: true # 是否启用菜单图标</span><br><span class=\"line\">  home: icon-home-fill</span><br><span class=\"line\">  archives: icon-archives-fill</span><br><span class=\"line\">  categories: icon-folder</span><br><span class=\"line\">  tags: icon-tags</span><br><span class=\"line\">  repository: icon-project</span><br><span class=\"line\">  books: icon-book-fill</span><br><span class=\"line\">  links: icon-friendship</span><br><span class=\"line\">  about: icon-cup-fill</span><br></pre></td></tr></table></figure>\n<h3 id=\"设置个人信息\"><a href=\"#设置个人信息\" class=\"headerlink\" title=\"设置个人信息\"></a>设置个人信息</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">头像在themes\\pure\\source\\images 目录下替换图片即可，捐献的二维码同理。</span><br><span class=\"line\"></span><br><span class=\"line\">个人信息大部分都在 主题配置文件 中设置</span><br></pre></td></tr></table></figure>\n<h3 id=\"搜索\"><a href=\"#搜索\" class=\"headerlink\" title=\"搜索\"></a>搜索</h3><p>主题内置三种站内搜索方式：insight、swiftype、baidu</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># Search</span><br><span class=\"line\">search:</span><br><span class=\"line\">  insight: true # you need to install `hexo-generator-json-content` before using Insight Search</span><br><span class=\"line\">  swiftype: # enter swiftype install key here</span><br><span class=\"line\">  baidu: false # you need to disable other search engines to use Baidu search</span><br></pre></td></tr></table></figure>\n<h3 id=\"分享\"><a href=\"#分享\" class=\"headerlink\" title=\"分享\"></a>分享</h3><p>支持<code>weibo,qq,qzone,wechat,tencent,douban,diandian,facebook,twitter,google,linkedin</code></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># Share</span><br><span class=\"line\"># weibo,qq,qzone,wechat,tencent,douban,diandian,facebook,twitter,google,linkedin</span><br><span class=\"line\">share:</span><br><span class=\"line\">  enable: true  # 是否启用分享</span><br><span class=\"line\">  sites: weibo,qq,wechat,facebook,twitter  # PC端显示的分享图标</span><br><span class=\"line\">  mobile_sites: weibo,qq,qzone  # 移动端显示的分享图标</span><br></pre></td></tr></table></figure>\n<h3 id=\"评论\"><a href=\"#评论\" class=\"headerlink\" title=\"评论\"></a>评论</h3><p>主题集成了<a href=\"https://disqus.com/\" target=\"_blank\" rel=\"noopener\">disqus</a>、<a href=\"http://www.uyan.cc/\" target=\"_blank\" rel=\"noopener\">友言</a>、<a href=\"https://livere.com/\" target=\"_blank\" rel=\"noopener\">来必力</a>、<a href=\"https://github.com/imsun/gitment\" target=\"_blank\" rel=\"noopener\">gitment</a>、<a href=\"https://github.com/gitalk/gitalk\" target=\"_blank\" rel=\"noopener\">gitalk</a>评论系统，选择其中一种即可</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># Comment</span><br><span class=\"line\"># Gitment</span><br><span class=\"line\"># Introduction: https://imsun.net/posts/gitment-introduction/</span><br><span class=\"line\">comment:</span><br><span class=\"line\">  type: livere # 启用哪种评论系统</span><br><span class=\"line\">  disqus:  # enter disqus shortname here</span><br><span class=\"line\">  youyan:</span><br><span class=\"line\">    uid: *** # enter youyan uid</span><br><span class=\"line\">  livere:</span><br><span class=\"line\">    uid: *** # enter livere uid</span><br><span class=\"line\">  gitment:</span><br><span class=\"line\">    githubID: username</span><br><span class=\"line\">    repo: username.github.io</span><br><span class=\"line\">    ClientID: ***</span><br><span class=\"line\">    ClientSecret: ***</span><br><span class=\"line\">    lazy: false</span><br></pre></td></tr></table></figure>\n<h3 id=\"文章浏览量统计\"><a href=\"#文章浏览量统计\" class=\"headerlink\" title=\"文章浏览量统计\"></a>文章浏览量统计</h3><p>主题内置了不蒜子和 leancloud 来统计文章浏览量，启用其中之一即可，注意 leancloud 需要到其官网申请 APP ID 和 APP Key。</p>\n<p>比如，启用不蒜子来统计文章浏览量，在主题配置文件中把 busuanzi 设置为 true 即可：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pv:</span><br><span class=\"line\">  busuanzi:</span><br><span class=\"line\">    enable: true  # 不蒜子统计</span><br></pre></td></tr></table></figure>\n<p>如果不需要第三方来统计浏览量，只需将相应设置改为 false 即可（设置为 false 后不会加载第三方 JS 脚本）</p>\n<h3 id=\"Github-respostory\"><a href=\"#Github-respostory\" class=\"headerlink\" title=\"Github respostory\"></a>Github respostory</h3><p>复制<code>theme/pure/_source/</code> 目录下<code>repository</code>文件夹到<code>blog path/source/</code> 目录下</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># Github</span><br><span class=\"line\">github:</span><br><span class=\"line\">  username: ***  # github username</span><br></pre></td></tr></table></figure>\n<h3 id=\"豆瓣书单\"><a href=\"#豆瓣书单\" class=\"headerlink\" title=\"豆瓣书单\"></a>豆瓣书单</h3><p>复制<code>theme/pure/_source/</code> 目录下<code>books</code>文件夹到<code>blog path/source/</code> 目录下</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># douban 豆瓣书单</span><br><span class=\"line\">douban:</span><br><span class=\"line\">  user: *** # 豆瓣用户名</span><br><span class=\"line\">  start: 0 # 从哪一条记录开始</span><br><span class=\"line\">  count: 100 # 获取豆瓣书单数据条数</span><br></pre></td></tr></table></figure>\n<h3 id=\"友情链接\"><a href=\"#友情链接\" class=\"headerlink\" title=\"友情链接\"></a>友情链接</h3><p>复制<code>theme/pure/_source/</code> 目录下<code>links</code>文件夹到<code>blog path/source/</code> 目录下</p>\n<p>在 hexo 目录下的 source 文件夹内创建一个名为 _data（禁止改名）的文件夹。</p>\n<p>然后在文件内创建一个名为 links.yml 的文件,在其中添加相关数据即可。</p>\n<p>单个友情链接的格式为：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Name:</span><br><span class=\"line\">    link: http://example.com</span><br><span class=\"line\">    avatar: http://example.com/avatar.png</span><br><span class=\"line\">    desc: &quot;这是一个描述&quot;</span><br></pre></td></tr></table></figure>\n<p>添加多个友情链接，我们只需要根据上面的格式重复填写即可。</p>\n<p>. 将 Name 改为友情链接的名字，例如 Cofess。</p>\n<p>. <a href=\"http://example.com\" target=\"_blank\" rel=\"noopener\">http://example.com</a> 为友情链接的地址。</p>\n<p>. <a href=\"http://example.com/avatar.png\" target=\"_blank\" rel=\"noopener\">http://example.com/avatar.png</a> 为友情链接的头像。</p>\n<p>. 这是一个描述 为友情链接描述。</p>\n<h3 id=\"文章索引目录\"><a href=\"#文章索引目录\" class=\"headerlink\" title=\"文章索引目录\"></a>文章索引目录</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">title: 文章标题</span><br><span class=\"line\">categories:</span><br><span class=\"line\">  - 文章分类</span><br><span class=\"line\">tags:</span><br><span class=\"line\">  - 文章标签</span><br><span class=\"line\">toc: true # 是否启用内容索引</span><br></pre></td></tr></table></figure>\n<h3 id=\"sidebar-侧边栏\"><a href=\"#sidebar-侧边栏\" class=\"headerlink\" title=\"sidebar 侧边栏\"></a>sidebar 侧边栏</h3><p>文章侧边栏默认为开启状态，如果某篇文章不想开启侧边栏，在文章开头配置加入“sidebar: none”即可：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">title: 文章标题</span><br><span class=\"line\">categories:</span><br><span class=\"line\">  - 文章分类</span><br><span class=\"line\">tags:</span><br><span class=\"line\">  - 文章标签</span><br><span class=\"line\">sidebar: none # 是否启用sidebar侧边栏，none：不启用</span><br></pre></td></tr></table></figure>\n<h2 id=\"博客优化\"><a href=\"#博客优化\" class=\"headerlink\" title=\"博客优化\"></a>博客优化</h2><h3 id=\"hexo-neat\"><a href=\"#hexo-neat\" class=\"headerlink\" title=\"hexo-neat\"></a><a href=\"https://github.com/rozbo/hexo-neat\" target=\"_blank\" rel=\"noopener\">hexo-neat</a></h3><blockquote>\n<p>auto Minify html、js、css and make it neat</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo-neat --save</span><br></pre></td></tr></table></figure>\n<p>在博客配置文件<code>_config.yml</code>中添加</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># hexo-neat</span><br><span class=\"line\">neat_enable: true</span><br><span class=\"line\">neat_html:</span><br><span class=\"line\">  enable: true</span><br><span class=\"line\">  exclude:</span><br><span class=\"line\">neat_css:</span><br><span class=\"line\">  enable: true</span><br><span class=\"line\">  exclude:</span><br><span class=\"line\">    - &apos;*.min.css&apos;</span><br><span class=\"line\">neat_js:</span><br><span class=\"line\">  enable: true</span><br><span class=\"line\">  mangle: true</span><br><span class=\"line\">  output:</span><br><span class=\"line\">  compress:</span><br><span class=\"line\">  exclude:</span><br><span class=\"line\">    - &apos;*.min.js&apos;</span><br></pre></td></tr></table></figure>\n<h3 id=\"hexo-baidu-url-submit\"><a href=\"#hexo-baidu-url-submit\" class=\"headerlink\" title=\"hexo-baidu-url-submit\"></a><a href=\"https://github.com/huiwang/hexo-baidu-url-submit\" target=\"_blank\" rel=\"noopener\">hexo-baidu-url-submit</a></h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo-baidu-url-submit --save</span><br></pre></td></tr></table></figure>\n<h3 id=\"hexo-translate-title\"><a href=\"#hexo-translate-title\" class=\"headerlink\" title=\"hexo-translate-title\"></a><a href=\"https://github.com/cometlj/hexo-translate-title\" target=\"_blank\" rel=\"noopener\">hexo-translate-title</a></h3><blockquote>\n<p>使用 Google 翻译，百度翻译和有道翻译将 Hexo 中的汉字标题转成英文标题</p>\n</blockquote>\n<p>安装</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo-translate-title --save</span><br></pre></td></tr></table></figure>\n<p>在博客配置文件<code>_config.yml</code>中添加</p>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">translate_title:</span></span><br><span class=\"line\"><span class=\"attr\">  translate_way:</span> <span class=\"string\">google</span> <span class=\"comment\">#google | baidu | youdao</span></span><br><span class=\"line\"><span class=\"attr\">  youdao_api_key:</span> <span class=\"string\">XXX</span></span><br><span class=\"line\"><span class=\"attr\">  youdao_keyfrom:</span> <span class=\"string\">XXX</span></span><br><span class=\"line\"><span class=\"attr\">  is_need_proxy:</span> <span class=\"literal\">true</span> <span class=\"comment\">#true | false</span></span><br><span class=\"line\"><span class=\"attr\">  proxy_url:</span> <span class=\"attr\">http://localhost:8123</span></span><br></pre></td></tr></table></figure>\n<p><strong>注意</strong>：判断是否需要配置 google 本地代理，因为我在本地是开启时才能访问 google 翻译的，如果没有被墙，请将<code>_config.yml</code> 下的<code>is_need_proxy: true</code>改为 false。如果设置为 true,请设置本地代理地址</p>\n<h2 id=\"数学公式\"><a href=\"#数学公式\" class=\"headerlink\" title=\"数学公式\"></a>数学公式</h2><blockquote>\n<p>Hexo 默认使用”hexo-renderer-marked”引擎渲染网页，该引擎会把一些特殊的 markdown 符号转换为相应的 html 标签</p>\n</blockquote>\n<h3 id=\"解决方案\"><a href=\"#解决方案\" class=\"headerlink\" title=\"解决方案\"></a>解决方案</h3><p>解决方案有很多，可以网上搜下，为了节省大家的时间，这里只提供亲身测试过的方法。</p>\n<p>更换 Hexo 的 markdown 渲染引擎，<a href=\"https://github.com/CHENXCHEN/hexo-renderer-markdown-it-plus\" target=\"_blank\" rel=\"noopener\">hexo-renderer-markdown-it-plus</a>引擎替换默认的渲染引擎<a href=\"https://github.com/hexojs/hexo-renderer-marked\" target=\"_blank\" rel=\"noopener\">hexo-renderer-marked</a>即可。</p>\n<h3 id=\"安装-hexo-renderer-markdown-it-plus-插件\"><a href=\"#安装-hexo-renderer-markdown-it-plus-插件\" class=\"headerlink\" title=\"安装 hexo-renderer-markdown-it-plus 插件\"></a>安装 hexo-renderer-markdown-it-plus 插件</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm un hexo-renderer-marked --save</span><br><span class=\"line\">npm i hexo-renderer-markdown-it-plus --save</span><br></pre></td></tr></table></figure>\n<h3 id=\"配置\"><a href=\"#配置\" class=\"headerlink\" title=\"配置\"></a>配置</h3><p>安装插件后，如果未正常渲染 LaTeX 数学公式，在博客配置文件<code>_config.yml</code>中添加</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">markdown_it_plus:</span><br><span class=\"line\">  highlight: true</span><br><span class=\"line\">  html: true</span><br><span class=\"line\">  xhtmlOut: true</span><br><span class=\"line\">  breaks: true</span><br><span class=\"line\">  langPrefix:</span><br><span class=\"line\">  linkify: true</span><br><span class=\"line\">  typographer:</span><br><span class=\"line\">  quotes: “”‘’</span><br><span class=\"line\">  plugins:</span><br><span class=\"line\">    - plugin:</span><br><span class=\"line\">        name: markdown-it-katex</span><br><span class=\"line\">        enable: true</span><br><span class=\"line\">    - plugin:</span><br><span class=\"line\">        name: markdown-it-mark</span><br><span class=\"line\">        enable: false</span><br></pre></td></tr></table></figure>\n<h3 id=\"文章启用-mathjax\"><a href=\"#文章启用-mathjax\" class=\"headerlink\" title=\"文章启用 mathjax\"></a>文章启用 mathjax</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">title: Hello World</span><br><span class=\"line\">mathjax: true</span><br></pre></td></tr></table></figure>\n","site":{"data":{"links":{"创造狮":{"link":"http://chuangzaoshi.com/","avatar":"../images/favatar/chuangzaoshi-logo.png","desc":"为创意工作者而设计"},"腾讯设计导航":{"link":"http://idesign.qq.com/","avatar":"../images/favatar/idesign-logo.png","desc":"网罗全网高逼格的设计站点"}},"gallery":{"Name":{"full_link":"http://example.com/full-image.png","thumb_link":"http://example.com/thumb-image.png","descr":"这是一个描述"}}}},"excerpt":"","more":"<h1 id=\"pure\"><a href=\"#pure\" class=\"headerlink\" title=\"pure\"></a>pure</h1><p>A brand new default theme for [<a href=\"https://hexo.io\" target=\"_blank\" rel=\"noopener\">Hexo</a>]. <a href=\"http://cofess.github.io/\" target=\"_blank\" rel=\"noopener\">Preview</a> | <a href=\"README.md\">English documentation</a> | <a href=\"http://blog.cofess.com/hexo-theme-pure/iconfont/demo_fontclass.html\" target=\"_blank\" rel=\"noopener\">iconfont</a></p>\n<p><img src=\"screenshot/pure.png\" alt=\"\"></p>\n<h2 id=\"特色\"><a href=\"#特色\" class=\"headerlink\" title=\"特色\"></a>特色</h2><ul>\n<li>多语言</li>\n<li>第三方评论框（友言、来必力、gitment、gitalk）</li>\n<li>可展示个人豆瓣书单</li>\n<li>可展示个人 github 托管项目</li>\n<li>可设置支付宝、微信打赏</li>\n</ul>\n<h2 id=\"页面展示\"><a href=\"#页面展示\" class=\"headerlink\" title=\"页面展示\"></a>页面展示</h2><p><a href=\"http://cofess.github.io/\" target=\"_blank\" rel=\"noopener\">首页</a> | <a href=\"http://cofess.github.io/archives/\" target=\"_blank\" rel=\"noopener\">归档</a> | <a href=\"http://cofess.github.io/categories/\" target=\"_blank\" rel=\"noopener\">分类</a> | <a href=\"http://cofess.github.io/tags/\" target=\"_blank\" rel=\"noopener\">标签</a> | <a href=\"http://cofess.github.io/repository/\" target=\"_blank\" rel=\"noopener\">项目</a> | <a href=\"http://cofess.github.io/books/\" target=\"_blank\" rel=\"noopener\">书单</a> | <a href=\"http://cofess.github.io/links/\" target=\"_blank\" rel=\"noopener\">友链</a> | <a href=\"http://cofess.github.io/about/\" target=\"_blank\" rel=\"noopener\">关于</a></p>\n<h2 id=\"配置说明\"><a href=\"#配置说明\" class=\"headerlink\" title=\"配置说明\"></a>配置说明</h2><p>在 Hexo 中有两份主要的配置文件，其名称都是 _config.yml。 其中，一份位于站点根目录下，主要包含 Hexo 本身的配置；另一份位于主题目录下，这份配置由主题作者提供，主要用于配置主题相关的选项。为了描述方便，在以下说明中，将前者称为站点配置文件， 后者称为主题配置文件</p>\n<h2 id=\"安装主题\"><a href=\"#安装主题\" class=\"headerlink\" title=\"安装主题\"></a>安装主题</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git clone https://github.com/cofess/hexo-theme-pure.git themes/pure</span><br></pre></td></tr></table></figure>\n<h2 id=\"更新主题\"><a href=\"#更新主题\" class=\"headerlink\" title=\"更新主题\"></a>更新主题</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd themes/pure</span><br><span class=\"line\">git pull</span><br></pre></td></tr></table></figure>\n<h2 id=\"启用-pure-主题\"><a href=\"#启用-pure-主题\" class=\"headerlink\" title=\"启用 pure 主题\"></a>启用 pure 主题</h2><p>打开站点配置文件，找到 theme 字段，将其值更改为 pure</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">theme: pure</span><br></pre></td></tr></table></figure>\n<p>到此，主题安装完成。然后启动 Hexo 服务验证主题是否正确启用。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo s</span><br></pre></td></tr></table></figure>\n<h2 id=\"安装插件\"><a href=\"#安装插件\" class=\"headerlink\" title=\"安装插件\"></a>安装插件</h2><h3 id=\"hexo-wordcount\"><a href=\"#hexo-wordcount\" class=\"headerlink\" title=\"hexo-wordcount\"></a><a href=\"https://github.com/willin/hexo-wordcount\" target=\"_blank\" rel=\"noopener\">hexo-wordcount</a></h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo-wordcount --save</span><br></pre></td></tr></table></figure>\n<h3 id=\"hexo-generator-json-content\"><a href=\"#hexo-generator-json-content\" class=\"headerlink\" title=\"hexo-generator-json-content\"></a><a href=\"https://github.com/alexbruno/hexo-generator-json-content\" target=\"_blank\" rel=\"noopener\">hexo-generator-json-content</a></h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo-generator-json-content --save</span><br></pre></td></tr></table></figure>\n<h3 id=\"hexo-generator-feed\"><a href=\"#hexo-generator-feed\" class=\"headerlink\" title=\"hexo-generator-feed\"></a><a href=\"https://github.com/hexojs/hexo-generator-feed\" target=\"_blank\" rel=\"noopener\">hexo-generator-feed</a></h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo-generator-feed --save</span><br></pre></td></tr></table></figure>\n<h3 id=\"hexo-generator-sitemap\"><a href=\"#hexo-generator-sitemap\" class=\"headerlink\" title=\"hexo-generator-sitemap\"></a><a href=\"https://github.com/hexojs/hexo-generator-sitemap\" target=\"_blank\" rel=\"noopener\">hexo-generator-sitemap</a></h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo-generator-sitemap --save</span><br></pre></td></tr></table></figure>\n<h3 id=\"hexo-generator-baidu-sitemap\"><a href=\"#hexo-generator-baidu-sitemap\" class=\"headerlink\" title=\"hexo-generator-baidu-sitemap\"></a><a href=\"https://github.com/coneycode/hexo-generator-baidu-sitemap\" target=\"_blank\" rel=\"noopener\">hexo-generator-baidu-sitemap</a></h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo-generator-baidu-sitemap --save</span><br></pre></td></tr></table></figure>\n<h2 id=\"主题配置\"><a href=\"#主题配置\" class=\"headerlink\" title=\"主题配置\"></a>主题配置</h2><h3 id=\"设置语言\"><a href=\"#设置语言\" class=\"headerlink\" title=\"设置语言\"></a>设置语言</h3><p>打开站点配置文件, 将 language 设置成你所需要的语言。建议明确设置你所需要的语言,可选值对应 themes\\pure\\languages 目录下语言文件，简体中文配置如下：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">language: zh-CN</span><br></pre></td></tr></table></figure>\n<h3 id=\"主题颜色\"><a href=\"#主题颜色\" class=\"headerlink\" title=\"主题颜色\"></a>主题颜色</h3><p>定制了五套颜色，默认白，黑:theme-black，蓝:theme-blue，绿:theme-green，紫:theme-purple</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># config</span><br><span class=\"line\">config:</span><br><span class=\"line\">  skin: # 主题颜色 theme-black theme-blue theme-green theme-purple</span><br></pre></td></tr></table></figure>\n<h3 id=\"导航菜单\"><a href=\"#导航菜单\" class=\"headerlink\" title=\"导航菜单\"></a>导航菜单</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 导航菜单</span><br><span class=\"line\">menu:</span><br><span class=\"line\">  Home: .</span><br><span class=\"line\">  Archives: archives # 归档</span><br><span class=\"line\">  Categories: categories # 分类</span><br><span class=\"line\">  Tags: tags # 标签</span><br><span class=\"line\">  Repository: repository # github repositories</span><br><span class=\"line\">  Books: books     # 书单</span><br><span class=\"line\">  Links: links # 友链</span><br><span class=\"line\">  About: about # 关于</span><br><span class=\"line\"></span><br><span class=\"line\"># 导航菜单图标（font awesome）</span><br><span class=\"line\">menu_icons:</span><br><span class=\"line\">  enable: true # 是否启用菜单图标</span><br><span class=\"line\">  home: icon-home-fill</span><br><span class=\"line\">  archives: icon-archives-fill</span><br><span class=\"line\">  categories: icon-folder</span><br><span class=\"line\">  tags: icon-tags</span><br><span class=\"line\">  repository: icon-project</span><br><span class=\"line\">  books: icon-book-fill</span><br><span class=\"line\">  links: icon-friendship</span><br><span class=\"line\">  about: icon-cup-fill</span><br></pre></td></tr></table></figure>\n<h3 id=\"设置个人信息\"><a href=\"#设置个人信息\" class=\"headerlink\" title=\"设置个人信息\"></a>设置个人信息</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">头像在themes\\pure\\source\\images 目录下替换图片即可，捐献的二维码同理。</span><br><span class=\"line\"></span><br><span class=\"line\">个人信息大部分都在 主题配置文件 中设置</span><br></pre></td></tr></table></figure>\n<h3 id=\"搜索\"><a href=\"#搜索\" class=\"headerlink\" title=\"搜索\"></a>搜索</h3><p>主题内置三种站内搜索方式：insight、swiftype、baidu</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># Search</span><br><span class=\"line\">search:</span><br><span class=\"line\">  insight: true # you need to install `hexo-generator-json-content` before using Insight Search</span><br><span class=\"line\">  swiftype: # enter swiftype install key here</span><br><span class=\"line\">  baidu: false # you need to disable other search engines to use Baidu search</span><br></pre></td></tr></table></figure>\n<h3 id=\"分享\"><a href=\"#分享\" class=\"headerlink\" title=\"分享\"></a>分享</h3><p>支持<code>weibo,qq,qzone,wechat,tencent,douban,diandian,facebook,twitter,google,linkedin</code></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># Share</span><br><span class=\"line\"># weibo,qq,qzone,wechat,tencent,douban,diandian,facebook,twitter,google,linkedin</span><br><span class=\"line\">share:</span><br><span class=\"line\">  enable: true  # 是否启用分享</span><br><span class=\"line\">  sites: weibo,qq,wechat,facebook,twitter  # PC端显示的分享图标</span><br><span class=\"line\">  mobile_sites: weibo,qq,qzone  # 移动端显示的分享图标</span><br></pre></td></tr></table></figure>\n<h3 id=\"评论\"><a href=\"#评论\" class=\"headerlink\" title=\"评论\"></a>评论</h3><p>主题集成了<a href=\"https://disqus.com/\" target=\"_blank\" rel=\"noopener\">disqus</a>、<a href=\"http://www.uyan.cc/\" target=\"_blank\" rel=\"noopener\">友言</a>、<a href=\"https://livere.com/\" target=\"_blank\" rel=\"noopener\">来必力</a>、<a href=\"https://github.com/imsun/gitment\" target=\"_blank\" rel=\"noopener\">gitment</a>、<a href=\"https://github.com/gitalk/gitalk\" target=\"_blank\" rel=\"noopener\">gitalk</a>评论系统，选择其中一种即可</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># Comment</span><br><span class=\"line\"># Gitment</span><br><span class=\"line\"># Introduction: https://imsun.net/posts/gitment-introduction/</span><br><span class=\"line\">comment:</span><br><span class=\"line\">  type: livere # 启用哪种评论系统</span><br><span class=\"line\">  disqus:  # enter disqus shortname here</span><br><span class=\"line\">  youyan:</span><br><span class=\"line\">    uid: *** # enter youyan uid</span><br><span class=\"line\">  livere:</span><br><span class=\"line\">    uid: *** # enter livere uid</span><br><span class=\"line\">  gitment:</span><br><span class=\"line\">    githubID: username</span><br><span class=\"line\">    repo: username.github.io</span><br><span class=\"line\">    ClientID: ***</span><br><span class=\"line\">    ClientSecret: ***</span><br><span class=\"line\">    lazy: false</span><br></pre></td></tr></table></figure>\n<h3 id=\"文章浏览量统计\"><a href=\"#文章浏览量统计\" class=\"headerlink\" title=\"文章浏览量统计\"></a>文章浏览量统计</h3><p>主题内置了不蒜子和 leancloud 来统计文章浏览量，启用其中之一即可，注意 leancloud 需要到其官网申请 APP ID 和 APP Key。</p>\n<p>比如，启用不蒜子来统计文章浏览量，在主题配置文件中把 busuanzi 设置为 true 即可：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pv:</span><br><span class=\"line\">  busuanzi:</span><br><span class=\"line\">    enable: true  # 不蒜子统计</span><br></pre></td></tr></table></figure>\n<p>如果不需要第三方来统计浏览量，只需将相应设置改为 false 即可（设置为 false 后不会加载第三方 JS 脚本）</p>\n<h3 id=\"Github-respostory\"><a href=\"#Github-respostory\" class=\"headerlink\" title=\"Github respostory\"></a>Github respostory</h3><p>复制<code>theme/pure/_source/</code> 目录下<code>repository</code>文件夹到<code>blog path/source/</code> 目录下</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># Github</span><br><span class=\"line\">github:</span><br><span class=\"line\">  username: ***  # github username</span><br></pre></td></tr></table></figure>\n<h3 id=\"豆瓣书单\"><a href=\"#豆瓣书单\" class=\"headerlink\" title=\"豆瓣书单\"></a>豆瓣书单</h3><p>复制<code>theme/pure/_source/</code> 目录下<code>books</code>文件夹到<code>blog path/source/</code> 目录下</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># douban 豆瓣书单</span><br><span class=\"line\">douban:</span><br><span class=\"line\">  user: *** # 豆瓣用户名</span><br><span class=\"line\">  start: 0 # 从哪一条记录开始</span><br><span class=\"line\">  count: 100 # 获取豆瓣书单数据条数</span><br></pre></td></tr></table></figure>\n<h3 id=\"友情链接\"><a href=\"#友情链接\" class=\"headerlink\" title=\"友情链接\"></a>友情链接</h3><p>复制<code>theme/pure/_source/</code> 目录下<code>links</code>文件夹到<code>blog path/source/</code> 目录下</p>\n<p>在 hexo 目录下的 source 文件夹内创建一个名为 _data（禁止改名）的文件夹。</p>\n<p>然后在文件内创建一个名为 links.yml 的文件,在其中添加相关数据即可。</p>\n<p>单个友情链接的格式为：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Name:</span><br><span class=\"line\">    link: http://example.com</span><br><span class=\"line\">    avatar: http://example.com/avatar.png</span><br><span class=\"line\">    desc: &quot;这是一个描述&quot;</span><br></pre></td></tr></table></figure>\n<p>添加多个友情链接，我们只需要根据上面的格式重复填写即可。</p>\n<p>. 将 Name 改为友情链接的名字，例如 Cofess。</p>\n<p>. <a href=\"http://example.com\" target=\"_blank\" rel=\"noopener\">http://example.com</a> 为友情链接的地址。</p>\n<p>. <a href=\"http://example.com/avatar.png\" target=\"_blank\" rel=\"noopener\">http://example.com/avatar.png</a> 为友情链接的头像。</p>\n<p>. 这是一个描述 为友情链接描述。</p>\n<h3 id=\"文章索引目录\"><a href=\"#文章索引目录\" class=\"headerlink\" title=\"文章索引目录\"></a>文章索引目录</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">title: 文章标题</span><br><span class=\"line\">categories:</span><br><span class=\"line\">  - 文章分类</span><br><span class=\"line\">tags:</span><br><span class=\"line\">  - 文章标签</span><br><span class=\"line\">toc: true # 是否启用内容索引</span><br></pre></td></tr></table></figure>\n<h3 id=\"sidebar-侧边栏\"><a href=\"#sidebar-侧边栏\" class=\"headerlink\" title=\"sidebar 侧边栏\"></a>sidebar 侧边栏</h3><p>文章侧边栏默认为开启状态，如果某篇文章不想开启侧边栏，在文章开头配置加入“sidebar: none”即可：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">title: 文章标题</span><br><span class=\"line\">categories:</span><br><span class=\"line\">  - 文章分类</span><br><span class=\"line\">tags:</span><br><span class=\"line\">  - 文章标签</span><br><span class=\"line\">sidebar: none # 是否启用sidebar侧边栏，none：不启用</span><br></pre></td></tr></table></figure>\n<h2 id=\"博客优化\"><a href=\"#博客优化\" class=\"headerlink\" title=\"博客优化\"></a>博客优化</h2><h3 id=\"hexo-neat\"><a href=\"#hexo-neat\" class=\"headerlink\" title=\"hexo-neat\"></a><a href=\"https://github.com/rozbo/hexo-neat\" target=\"_blank\" rel=\"noopener\">hexo-neat</a></h3><blockquote>\n<p>auto Minify html、js、css and make it neat</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo-neat --save</span><br></pre></td></tr></table></figure>\n<p>在博客配置文件<code>_config.yml</code>中添加</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># hexo-neat</span><br><span class=\"line\">neat_enable: true</span><br><span class=\"line\">neat_html:</span><br><span class=\"line\">  enable: true</span><br><span class=\"line\">  exclude:</span><br><span class=\"line\">neat_css:</span><br><span class=\"line\">  enable: true</span><br><span class=\"line\">  exclude:</span><br><span class=\"line\">    - &apos;*.min.css&apos;</span><br><span class=\"line\">neat_js:</span><br><span class=\"line\">  enable: true</span><br><span class=\"line\">  mangle: true</span><br><span class=\"line\">  output:</span><br><span class=\"line\">  compress:</span><br><span class=\"line\">  exclude:</span><br><span class=\"line\">    - &apos;*.min.js&apos;</span><br></pre></td></tr></table></figure>\n<h3 id=\"hexo-baidu-url-submit\"><a href=\"#hexo-baidu-url-submit\" class=\"headerlink\" title=\"hexo-baidu-url-submit\"></a><a href=\"https://github.com/huiwang/hexo-baidu-url-submit\" target=\"_blank\" rel=\"noopener\">hexo-baidu-url-submit</a></h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo-baidu-url-submit --save</span><br></pre></td></tr></table></figure>\n<h3 id=\"hexo-translate-title\"><a href=\"#hexo-translate-title\" class=\"headerlink\" title=\"hexo-translate-title\"></a><a href=\"https://github.com/cometlj/hexo-translate-title\" target=\"_blank\" rel=\"noopener\">hexo-translate-title</a></h3><blockquote>\n<p>使用 Google 翻译，百度翻译和有道翻译将 Hexo 中的汉字标题转成英文标题</p>\n</blockquote>\n<p>安装</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo-translate-title --save</span><br></pre></td></tr></table></figure>\n<p>在博客配置文件<code>_config.yml</code>中添加</p>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">translate_title:</span></span><br><span class=\"line\"><span class=\"attr\">  translate_way:</span> <span class=\"string\">google</span> <span class=\"comment\">#google | baidu | youdao</span></span><br><span class=\"line\"><span class=\"attr\">  youdao_api_key:</span> <span class=\"string\">XXX</span></span><br><span class=\"line\"><span class=\"attr\">  youdao_keyfrom:</span> <span class=\"string\">XXX</span></span><br><span class=\"line\"><span class=\"attr\">  is_need_proxy:</span> <span class=\"literal\">true</span> <span class=\"comment\">#true | false</span></span><br><span class=\"line\"><span class=\"attr\">  proxy_url:</span> <span class=\"attr\">http://localhost:8123</span></span><br></pre></td></tr></table></figure>\n<p><strong>注意</strong>：判断是否需要配置 google 本地代理，因为我在本地是开启时才能访问 google 翻译的，如果没有被墙，请将<code>_config.yml</code> 下的<code>is_need_proxy: true</code>改为 false。如果设置为 true,请设置本地代理地址</p>\n<h2 id=\"数学公式\"><a href=\"#数学公式\" class=\"headerlink\" title=\"数学公式\"></a>数学公式</h2><blockquote>\n<p>Hexo 默认使用”hexo-renderer-marked”引擎渲染网页，该引擎会把一些特殊的 markdown 符号转换为相应的 html 标签</p>\n</blockquote>\n<h3 id=\"解决方案\"><a href=\"#解决方案\" class=\"headerlink\" title=\"解决方案\"></a>解决方案</h3><p>解决方案有很多，可以网上搜下，为了节省大家的时间，这里只提供亲身测试过的方法。</p>\n<p>更换 Hexo 的 markdown 渲染引擎，<a href=\"https://github.com/CHENXCHEN/hexo-renderer-markdown-it-plus\" target=\"_blank\" rel=\"noopener\">hexo-renderer-markdown-it-plus</a>引擎替换默认的渲染引擎<a href=\"https://github.com/hexojs/hexo-renderer-marked\" target=\"_blank\" rel=\"noopener\">hexo-renderer-marked</a>即可。</p>\n<h3 id=\"安装-hexo-renderer-markdown-it-plus-插件\"><a href=\"#安装-hexo-renderer-markdown-it-plus-插件\" class=\"headerlink\" title=\"安装 hexo-renderer-markdown-it-plus 插件\"></a>安装 hexo-renderer-markdown-it-plus 插件</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm un hexo-renderer-marked --save</span><br><span class=\"line\">npm i hexo-renderer-markdown-it-plus --save</span><br></pre></td></tr></table></figure>\n<h3 id=\"配置\"><a href=\"#配置\" class=\"headerlink\" title=\"配置\"></a>配置</h3><p>安装插件后，如果未正常渲染 LaTeX 数学公式，在博客配置文件<code>_config.yml</code>中添加</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">markdown_it_plus:</span><br><span class=\"line\">  highlight: true</span><br><span class=\"line\">  html: true</span><br><span class=\"line\">  xhtmlOut: true</span><br><span class=\"line\">  breaks: true</span><br><span class=\"line\">  langPrefix:</span><br><span class=\"line\">  linkify: true</span><br><span class=\"line\">  typographer:</span><br><span class=\"line\">  quotes: “”‘’</span><br><span class=\"line\">  plugins:</span><br><span class=\"line\">    - plugin:</span><br><span class=\"line\">        name: markdown-it-katex</span><br><span class=\"line\">        enable: true</span><br><span class=\"line\">    - plugin:</span><br><span class=\"line\">        name: markdown-it-mark</span><br><span class=\"line\">        enable: false</span><br></pre></td></tr></table></figure>\n<h3 id=\"文章启用-mathjax\"><a href=\"#文章启用-mathjax\" class=\"headerlink\" title=\"文章启用 mathjax\"></a>文章启用 mathjax</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">title: Hello World</span><br><span class=\"line\">mathjax: true</span><br></pre></td></tr></table></figure>\n"}],"PostAsset":[{"_id":"source/_posts/vue-cli-load-css-confusion/20181026174132.png","post":"cjr8h8479000begrq3o43k1qn","slug":"20181026174132.png","modified":1,"renderable":1},{"_id":"source/_posts/vue-template-error-collection/20181016105228.png","post":"cjr8h847b000degrqgr8vco7b","slug":"20181016105228.png","modified":1,"renderable":1},{"_id":"source/_posts/about-IDE-format-code/20181019154332.png","slug":"20181019154332.png","post":"cjr8h846w0003egrq6123qvnq","modified":1,"renderable":0},{"_id":"source/_posts/about-IDE-format-code/20181019154456.png","post":"cjr8h846w0003egrq6123qvnq","slug":"20181019154456.png","modified":1,"renderable":1},{"_id":"source/_posts/layui-template-error-collection/20181015155613.png","post":"cjr8h84750008egrqycowy5we","slug":"20181015155613.png","modified":1,"renderable":1},{"_id":"source/_posts/layui-template-error-collection/20181015164139.png","post":"cjr8h84750008egrqycowy5we","slug":"20181015164139.png","modified":1,"renderable":1},{"_id":"source/_posts/layui-template-error-collection/20181015164428.png","post":"cjr8h84750008egrqycowy5we","slug":"20181015164428.png","modified":1,"renderable":1},{"_id":"source/_posts/layui-router/20181031143900.png","post":"cjr8h84730007egrqsfxde4ah","slug":"20181031143900.png","modified":1,"renderable":1},{"_id":"source/_posts/layui-router/20181031144115.png","post":"cjr8h84730007egrqsfxde4ah","slug":"20181031144115.png","modified":1,"renderable":1},{"_id":"source/_posts/layui-router/20181031144844.png","post":"cjr8h84730007egrqsfxde4ah","slug":"20181031144844.png","modified":1,"renderable":1},{"_id":"source/_posts/layui-router/20181031144909.png","post":"cjr8h84730007egrqsfxde4ah","slug":"20181031144909.png","modified":1,"renderable":1},{"_id":"source/_posts/layui-router/20181031154408.png","post":"cjr8h84730007egrqsfxde4ah","slug":"20181031154408.png","modified":1,"renderable":1},{"_id":"source/_posts/layui-router/20181031161907.png","post":"cjr8h84730007egrqsfxde4ah","slug":"20181031161907.png","modified":1,"renderable":1},{"_id":"source/_posts/layui-router/layui router页面渲染过程.vsd","post":"cjr8h84730007egrqsfxde4ah","slug":"layui router页面渲染过程.vsd","modified":1,"renderable":1}],"PostCategory":[],"PostTag":[{"post_id":"cjr8h846q0001egrqwxgahjq9","tag_id":"cjr8h846z0004egrqun9t606f","_id":"cjr8h847h000jegrqohuz4ruc"},{"post_id":"cjr8h846q0001egrqwxgahjq9","tag_id":"cjr8h84760009egrqa95lt6gz","_id":"cjr8h847h000kegrqjkucyiag"},{"post_id":"cjr8h846q0001egrqwxgahjq9","tag_id":"cjr8h847b000cegrquvcw7m9p","_id":"cjr8h847h000megrqinewar57"},{"post_id":"cjr8h846q0001egrqwxgahjq9","tag_id":"cjr8h847f000fegrq23d3gmo6","_id":"cjr8h847h000negrq8ed3iaqn"},{"post_id":"cjr8h846q0001egrqwxgahjq9","tag_id":"cjr8h847g000gegrq9bmdsmk1","_id":"cjr8h847i000pegrqbcao1d09"},{"post_id":"cjr8h846q0001egrqwxgahjq9","tag_id":"cjr8h847g000hegrqnmj1175i","_id":"cjr8h847i000qegrqq6i1yp3y"},{"post_id":"cjr8h846w0003egrq6123qvnq","tag_id":"cjr8h847h000iegrq56e53qml","_id":"cjr8h847i000segrqe19ycaxo"},{"post_id":"cjr8h846w0003egrq6123qvnq","tag_id":"cjr8h847h000legrql4t7nxx1","_id":"cjr8h847j000tegrqyk4f130y"},{"post_id":"cjr8h846w0003egrq6123qvnq","tag_id":"cjr8h847i000oegrqoj2m5get","_id":"cjr8h847j000vegrq8jv4d6y3"},{"post_id":"cjr8h84730007egrqsfxde4ah","tag_id":"cjr8h847i000regrqg66oizfy","_id":"cjr8h847m000xegrqifrsef3s"},{"post_id":"cjr8h84730007egrqsfxde4ah","tag_id":"cjr8h847j000uegrqp2hyzk1d","_id":"cjr8h847m000yegrqma0ykjb5"},{"post_id":"cjr8h84750008egrqycowy5we","tag_id":"cjr8h847i000regrqg66oizfy","_id":"cjr8h847n0013egrq4qo9np3l"},{"post_id":"cjr8h84750008egrqycowy5we","tag_id":"cjr8h847m000zegrqusv3enoz","_id":"cjr8h847o0014egrqq6i3qzni"},{"post_id":"cjr8h84750008egrqycowy5we","tag_id":"cjr8h847n0010egrq34i1evf0","_id":"cjr8h847o0016egrqtyqsj26l"},{"post_id":"cjr8h84750008egrqycowy5we","tag_id":"cjr8h847n0011egrqhw1hw5mt","_id":"cjr8h847o0017egrqwj4hwjdk"},{"post_id":"cjr8h8476000aegrq3dzdhwqn","tag_id":"cjr8h847n0012egrqtzmqatih","_id":"cjr8h847p0019egrq9h03165p"},{"post_id":"cjr8h847b000degrqgr8vco7b","tag_id":"cjr8h847o0015egrq3evaz3p7","_id":"cjr8h847q001degrqz3b31xzs"},{"post_id":"cjr8h847b000degrqgr8vco7b","tag_id":"cjr8h847n0011egrqhw1hw5mt","_id":"cjr8h847q001eegrqukexfwho"},{"post_id":"cjr8h847b000degrqgr8vco7b","tag_id":"cjr8h847p001aegrq9ohr2jfs","_id":"cjr8h847q001gegrq68jg16gi"},{"post_id":"cjr8h847b000degrqgr8vco7b","tag_id":"cjr8h847p001begrqm6amel3s","_id":"cjr8h847q001hegrqp7tktq2f"},{"post_id":"cjr8h847d000eegrq29z9nl2u","tag_id":"cjr8h847o0015egrq3evaz3p7","_id":"cjr8h847r001kegrqlz0oa6r1"},{"post_id":"cjr8h847d000eegrq29z9nl2u","tag_id":"cjr8h847q001fegrqqsxfxhe9","_id":"cjr8h847r001legrqe59n8lkn"},{"post_id":"cjr8h847d000eegrq29z9nl2u","tag_id":"cjr8h847r001iegrqah0deped","_id":"cjr8h847r001megrq2gee9uhn"},{"post_id":"cjr8h847d000eegrq29z9nl2u","tag_id":"cjr8h847r001jegrqryc9mny0","_id":"cjr8h847r001negrqa8863aso"},{"post_id":"cjr8h848e001oegrqxgijzihb","tag_id":"cjr8h848j001qegrqovbs2441","_id":"cjr8h848k001regrqqyuruud8"}],"Tag":[{"name":"blog","_id":"cjr8h846z0004egrqun9t606f"},{"name":"hexo","_id":"cjr8h84760009egrqa95lt6gz"},{"name":"hexo-theme","_id":"cjr8h847b000cegrquvcw7m9p"},{"name":"sftp","_id":"cjr8h847f000fegrq23d3gmo6"},{"name":"一键发布","_id":"cjr8h847g000gegrq9bmdsmk1"},{"name":"node","_id":"cjr8h847g000hegrqnmj1175i"},{"name":"vs code","_id":"cjr8h847h000iegrq56e53qml"},{"name":"formatter","_id":"cjr8h847h000legrql4t7nxx1"},{"name":"setting","_id":"cjr8h847i000oegrqoj2m5get"},{"name":"layui","_id":"cjr8h847i000regrqg66oizfy"},{"name":"router","_id":"cjr8h847j000uegrqp2hyzk1d"},{"name":"javascript","_id":"cjr8h847m000zegrqusv3enoz"},{"name":"js","_id":"cjr8h847n0010egrq34i1evf0"},{"name":"error","_id":"cjr8h847n0011egrqhw1hw5mt"},{"name":"hexo-theme-Hacker","_id":"cjr8h847n0012egrqtzmqatih"},{"name":"vue","_id":"cjr8h847o0015egrq3evaz3p7"},{"name":"npm","_id":"cjr8h847p001aegrq9ohr2jfs"},{"name":"webpack","_id":"cjr8h847p001begrqm6amel3s"},{"name":"vuex","_id":"cjr8h847q001fegrqqsxfxhe9"},{"name":"localstorage","_id":"cjr8h847r001iegrqah0deped"},{"name":"plugins","_id":"cjr8h847r001jegrqryc9mny0"},{"name":"hexo-theme-pure","_id":"cjr8h848j001qegrqovbs2441"}]}}